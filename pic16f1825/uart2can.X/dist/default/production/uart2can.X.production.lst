

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 11 08:36:24 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1825 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000E                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010E                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  011E                     	;# 
   129  018C                     	;# 
   130  018E                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020E                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0294                     	;# 
   170  0295                     	;# 
   171  0295                     	;# 
   172  0296                     	;# 
   173  0298                     	;# 
   174  0298                     	;# 
   175  0299                     	;# 
   176  029A                     	;# 
   177  029B                     	;# 
   178  029C                     	;# 
   179  029D                     	;# 
   180  029E                     	;# 
   181  0311                     	;# 
   182  0311                     	;# 
   183  0312                     	;# 
   184  0313                     	;# 
   185  0318                     	;# 
   186  0318                     	;# 
   187  0319                     	;# 
   188  031A                     	;# 
   189  038C                     	;# 
   190  038E                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  039A                     	;# 
   195  039C                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000E                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  010C                     	;# 
   261  010E                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0113                     	;# 
   265  0114                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  011A                     	;# 
   272  011B                     	;# 
   273  011D                     	;# 
   274  011E                     	;# 
   275  018C                     	;# 
   276  018E                     	;# 
   277  0191                     	;# 
   278  0191                     	;# 
   279  0192                     	;# 
   280  0193                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0194                     	;# 
   284  0195                     	;# 
   285  0196                     	;# 
   286  0199                     	;# 
   287  019A                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019D                     	;# 
   292  019E                     	;# 
   293  019F                     	;# 
   294  020C                     	;# 
   295  020E                     	;# 
   296  0211                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0212                     	;# 
   300  0213                     	;# 
   301  0213                     	;# 
   302  0214                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  0291                     	;# 
   312  0291                     	;# 
   313  0292                     	;# 
   314  0293                     	;# 
   315  0294                     	;# 
   316  0295                     	;# 
   317  0295                     	;# 
   318  0296                     	;# 
   319  0298                     	;# 
   320  0298                     	;# 
   321  0299                     	;# 
   322  029A                     	;# 
   323  029B                     	;# 
   324  029C                     	;# 
   325  029D                     	;# 
   326  029E                     	;# 
   327  0311                     	;# 
   328  0311                     	;# 
   329  0312                     	;# 
   330  0313                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  038C                     	;# 
   336  038E                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  039A                     	;# 
   341  039C                     	;# 
   342  039D                     	;# 
   343  039E                     	;# 
   344  039F                     	;# 
   345  0415                     	;# 
   346  0416                     	;# 
   347  0417                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  0FE4                     	;# 
   352  0FE5                     	;# 
   353  0FE6                     	;# 
   354  0FE7                     	;# 
   355  0FE8                     	;# 
   356  0FE9                     	;# 
   357  0FEA                     	;# 
   358  0FEB                     	;# 
   359  0FED                     	;# 
   360  0FEE                     	;# 
   361  0FEF                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  0007                     	;# 
   370  0008                     	;# 
   371  0009                     	;# 
   372  000A                     	;# 
   373  000B                     	;# 
   374  000C                     	;# 
   375  000E                     	;# 
   376  0011                     	;# 
   377  0012                     	;# 
   378  0013                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001E                     	;# 
   389  001F                     	;# 
   390  008C                     	;# 
   391  008E                     	;# 
   392  0091                     	;# 
   393  0092                     	;# 
   394  0093                     	;# 
   395  0095                     	;# 
   396  0096                     	;# 
   397  0097                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009A                     	;# 
   401  009B                     	;# 
   402  009B                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  010C                     	;# 
   407  010E                     	;# 
   408  0111                     	;# 
   409  0112                     	;# 
   410  0113                     	;# 
   411  0114                     	;# 
   412  0115                     	;# 
   413  0116                     	;# 
   414  0117                     	;# 
   415  0118                     	;# 
   416  0119                     	;# 
   417  011A                     	;# 
   418  011B                     	;# 
   419  011D                     	;# 
   420  011E                     	;# 
   421  018C                     	;# 
   422  018E                     	;# 
   423  0191                     	;# 
   424  0191                     	;# 
   425  0192                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0193                     	;# 
   429  0194                     	;# 
   430  0195                     	;# 
   431  0196                     	;# 
   432  0199                     	;# 
   433  019A                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019F                     	;# 
   440  020C                     	;# 
   441  020E                     	;# 
   442  0211                     	;# 
   443  0211                     	;# 
   444  0212                     	;# 
   445  0212                     	;# 
   446  0213                     	;# 
   447  0213                     	;# 
   448  0214                     	;# 
   449  0214                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0215                     	;# 
   453  0216                     	;# 
   454  0216                     	;# 
   455  0217                     	;# 
   456  0217                     	;# 
   457  0291                     	;# 
   458  0291                     	;# 
   459  0292                     	;# 
   460  0293                     	;# 
   461  0294                     	;# 
   462  0295                     	;# 
   463  0295                     	;# 
   464  0296                     	;# 
   465  0298                     	;# 
   466  0298                     	;# 
   467  0299                     	;# 
   468  029A                     	;# 
   469  029B                     	;# 
   470  029C                     	;# 
   471  029D                     	;# 
   472  029E                     	;# 
   473  0311                     	;# 
   474  0311                     	;# 
   475  0312                     	;# 
   476  0313                     	;# 
   477  0318                     	;# 
   478  0318                     	;# 
   479  0319                     	;# 
   480  031A                     	;# 
   481  038C                     	;# 
   482  038E                     	;# 
   483  0391                     	;# 
   484  0392                     	;# 
   485  0393                     	;# 
   486  039A                     	;# 
   487  039C                     	;# 
   488  039D                     	;# 
   489  039E                     	;# 
   490  039F                     	;# 
   491  0415                     	;# 
   492  0416                     	;# 
   493  0417                     	;# 
   494  041C                     	;# 
   495  041D                     	;# 
   496  041E                     	;# 
   497  0FE4                     	;# 
   498  0FE5                     	;# 
   499  0FE6                     	;# 
   500  0FE7                     	;# 
   501  0FE8                     	;# 
   502  0FE9                     	;# 
   503  0FEA                     	;# 
   504  0FEB                     	;# 
   505  0FED                     	;# 
   506  0FEE                     	;# 
   507  0FEF                     	;# 
   508  0000                     	;# 
   509  0001                     	;# 
   510  0002                     	;# 
   511  0003                     	;# 
   512  0004                     	;# 
   513  0005                     	;# 
   514  0006                     	;# 
   515  0007                     	;# 
   516  0008                     	;# 
   517  0009                     	;# 
   518  000A                     	;# 
   519  000B                     	;# 
   520  000C                     	;# 
   521  000E                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0013                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001C                     	;# 
   534  001E                     	;# 
   535  001F                     	;# 
   536  008C                     	;# 
   537  008E                     	;# 
   538  0091                     	;# 
   539  0092                     	;# 
   540  0093                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009B                     	;# 
   549  009C                     	;# 
   550  009D                     	;# 
   551  009E                     	;# 
   552  010C                     	;# 
   553  010E                     	;# 
   554  0111                     	;# 
   555  0112                     	;# 
   556  0113                     	;# 
   557  0114                     	;# 
   558  0115                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  0118                     	;# 
   562  0119                     	;# 
   563  011A                     	;# 
   564  011B                     	;# 
   565  011D                     	;# 
   566  011E                     	;# 
   567  018C                     	;# 
   568  018E                     	;# 
   569  0191                     	;# 
   570  0191                     	;# 
   571  0192                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0194                     	;# 
   576  0195                     	;# 
   577  0196                     	;# 
   578  0199                     	;# 
   579  019A                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019C                     	;# 
   583  019D                     	;# 
   584  019E                     	;# 
   585  019F                     	;# 
   586  020C                     	;# 
   587  020E                     	;# 
   588  0211                     	;# 
   589  0211                     	;# 
   590  0212                     	;# 
   591  0212                     	;# 
   592  0213                     	;# 
   593  0213                     	;# 
   594  0214                     	;# 
   595  0214                     	;# 
   596  0215                     	;# 
   597  0215                     	;# 
   598  0215                     	;# 
   599  0216                     	;# 
   600  0216                     	;# 
   601  0217                     	;# 
   602  0217                     	;# 
   603  0291                     	;# 
   604  0291                     	;# 
   605  0292                     	;# 
   606  0293                     	;# 
   607  0294                     	;# 
   608  0295                     	;# 
   609  0295                     	;# 
   610  0296                     	;# 
   611  0298                     	;# 
   612  0298                     	;# 
   613  0299                     	;# 
   614  029A                     	;# 
   615  029B                     	;# 
   616  029C                     	;# 
   617  029D                     	;# 
   618  029E                     	;# 
   619  0311                     	;# 
   620  0311                     	;# 
   621  0312                     	;# 
   622  0313                     	;# 
   623  0318                     	;# 
   624  0318                     	;# 
   625  0319                     	;# 
   626  031A                     	;# 
   627  038C                     	;# 
   628  038E                     	;# 
   629  0391                     	;# 
   630  0392                     	;# 
   631  0393                     	;# 
   632  039A                     	;# 
   633  039C                     	;# 
   634  039D                     	;# 
   635  039E                     	;# 
   636  039F                     	;# 
   637  0415                     	;# 
   638  0416                     	;# 
   639  0417                     	;# 
   640  041C                     	;# 
   641  041D                     	;# 
   642  041E                     	;# 
   643  0FE4                     	;# 
   644  0FE5                     	;# 
   645  0FE6                     	;# 
   646  0FE7                     	;# 
   647  0FE8                     	;# 
   648  0FE9                     	;# 
   649  0FEA                     	;# 
   650  0FEB                     	;# 
   651  0FED                     	;# 
   652  0FEE                     	;# 
   653  0FEF                     	;# 
   654  0000                     	;# 
   655  0001                     	;# 
   656  0002                     	;# 
   657  0003                     	;# 
   658  0004                     	;# 
   659  0005                     	;# 
   660  0006                     	;# 
   661  0007                     	;# 
   662  0008                     	;# 
   663  0009                     	;# 
   664  000A                     	;# 
   665  000B                     	;# 
   666  000C                     	;# 
   667  000E                     	;# 
   668  0011                     	;# 
   669  0012                     	;# 
   670  0013                     	;# 
   671  0015                     	;# 
   672  0016                     	;# 
   673  0016                     	;# 
   674  0017                     	;# 
   675  0018                     	;# 
   676  0019                     	;# 
   677  001A                     	;# 
   678  001B                     	;# 
   679  001C                     	;# 
   680  001E                     	;# 
   681  001F                     	;# 
   682  008C                     	;# 
   683  008E                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0093                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0097                     	;# 
   690  0098                     	;# 
   691  0099                     	;# 
   692  009A                     	;# 
   693  009B                     	;# 
   694  009B                     	;# 
   695  009C                     	;# 
   696  009D                     	;# 
   697  009E                     	;# 
   698  010C                     	;# 
   699  010E                     	;# 
   700  0111                     	;# 
   701  0112                     	;# 
   702  0113                     	;# 
   703  0114                     	;# 
   704  0115                     	;# 
   705  0116                     	;# 
   706  0117                     	;# 
   707  0118                     	;# 
   708  0119                     	;# 
   709  011A                     	;# 
   710  011B                     	;# 
   711  011D                     	;# 
   712  011E                     	;# 
   713  018C                     	;# 
   714  018E                     	;# 
   715  0191                     	;# 
   716  0191                     	;# 
   717  0192                     	;# 
   718  0193                     	;# 
   719  0193                     	;# 
   720  0193                     	;# 
   721  0194                     	;# 
   722  0195                     	;# 
   723  0196                     	;# 
   724  0199                     	;# 
   725  019A                     	;# 
   726  019B                     	;# 
   727  019B                     	;# 
   728  019C                     	;# 
   729  019D                     	;# 
   730  019E                     	;# 
   731  019F                     	;# 
   732  020C                     	;# 
   733  020E                     	;# 
   734  0211                     	;# 
   735  0211                     	;# 
   736  0212                     	;# 
   737  0212                     	;# 
   738  0213                     	;# 
   739  0213                     	;# 
   740  0214                     	;# 
   741  0214                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0291                     	;# 
   750  0291                     	;# 
   751  0292                     	;# 
   752  0293                     	;# 
   753  0294                     	;# 
   754  0295                     	;# 
   755  0295                     	;# 
   756  0296                     	;# 
   757  0298                     	;# 
   758  0298                     	;# 
   759  0299                     	;# 
   760  029A                     	;# 
   761  029B                     	;# 
   762  029C                     	;# 
   763  029D                     	;# 
   764  029E                     	;# 
   765  0311                     	;# 
   766  0311                     	;# 
   767  0312                     	;# 
   768  0313                     	;# 
   769  0318                     	;# 
   770  0318                     	;# 
   771  0319                     	;# 
   772  031A                     	;# 
   773  038C                     	;# 
   774  038E                     	;# 
   775  0391                     	;# 
   776  0392                     	;# 
   777  0393                     	;# 
   778  039A                     	;# 
   779  039C                     	;# 
   780  039D                     	;# 
   781  039E                     	;# 
   782  039F                     	;# 
   783  0415                     	;# 
   784  0416                     	;# 
   785  0417                     	;# 
   786  041C                     	;# 
   787  041D                     	;# 
   788  041E                     	;# 
   789  0FE4                     	;# 
   790  0FE5                     	;# 
   791  0FE6                     	;# 
   792  0FE7                     	;# 
   793  0FE8                     	;# 
   794  0FE9                     	;# 
   795  0FEA                     	;# 
   796  0FEB                     	;# 
   797  0FED                     	;# 
   798  0FEE                     	;# 
   799  0FEF                     	;# 
   800                           
   801                           	psect	stringtext1
   802  082C                     __pstringtext1:	
   803  082C                     _dpowers:	
   804  082C  3401               	retlw	1
   805  082D  3400               	retlw	0
   806  082E  340A               	retlw	10
   807  082F  3400               	retlw	0
   808  0830  3464               	retlw	100
   809  0831  3400               	retlw	0
   810  0832  34E8               	retlw	232
   811  0833  3403               	retlw	3
   812  0834  3410               	retlw	16
   813  0835  3427               	retlw	39
   814  0836                     __end_of_dpowers:	
   815                           
   816                           	psect	stringtext2
   817  0800                     __pstringtext2:	
   818  0800                     _max_char:	
   819  0800  343F               	retlw	63
   820  0801                     __end_of_max_char:	
   821  0011                     _PIR1bits	set	17
   822  0095                     _OPTION_REGbits	set	149
   823  008E                     _TRISC	set	142
   824  008C                     _TRISA	set	140
   825  0097                     _WDTCON	set	151
   826  0098                     _OSCTUNE	set	152
   827  0099                     _OSCCON	set	153
   828  04D6                     _PLLR	set	1238
   829  010E                     _LATCbits	set	270
   830  011D                     _APFCON0	set	285
   831  011E                     _APFCON1	set	286
   832  010E                     _LATC	set	270
   833  010C                     _LATA	set	268
   834  0116                     _BORCON	set	278
   835  018C                     _ANSELA	set	396
   836  018E                     _ANSELC	set	398
   837  019A                     _TXREG	set	410
   838  0199                     _RCREG	set	409
   839  019D                     _RCSTAbits	set	413
   840  019C                     _SPBRGH	set	412
   841  019B                     _SPBRGL	set	411
   842  019E                     _TXSTA	set	414
   843  019D                     _RCSTA	set	413
   844  019F                     _BAUDCON	set	415
   845  0214                     _SSP1STATbits	set	532
   846  0211                     _SSP1BUF	set	529
   847  0215                     _SSP1CON1bits	set	533
   848  0212                     _SSP1ADD	set	530
   849  0215                     _SSP1CON1	set	533
   850  0214                     _SSP1STAT	set	532
   851  020E                     _WPUC	set	526
   852  020C                     _WPUA	set	524
   853  0801                     STR_4:	
   854  0801  340A               	retlw	10
   855  0802  3443               	retlw	67	;'C'
   856  0803  3441               	retlw	65	;'A'
   857  0804  344E               	retlw	78	;'N'
   858  0805  3420               	retlw	32	;' '
   859  0806  346D               	retlw	109	;'m'
   860  0807  3465               	retlw	101	;'e'
   861  0808  3473               	retlw	115	;'s'
   862  0809  3473               	retlw	115	;'s'
   863  080A  3461               	retlw	97	;'a'
   864  080B  3467               	retlw	103	;'g'
   865  080C  3465               	retlw	101	;'e'
   866  080D  3420               	retlw	32	;' '
   867  080E  3473               	retlw	115	;'s'
   868  080F  3465               	retlw	101	;'e'
   869  0810  346E               	retlw	110	;'n'
   870  0811  3474               	retlw	116	;'t'
   871  0812  343A               	retlw	58	;':'
   872  0813  3420               	retlw	32	;' '
   873  0814  3425               	retlw	37	;'%'
   874  0815  3473               	retlw	115	;'s'
   875  0816  340A               	retlw	10
   876  0817  3400               	retlw	0
   877                           
   878                           	psect	stringtext3
   879  0818                     __pstringtext3:	
   880  0818                     STR_2:	
   881  0818  344D               	retlw	77	;'M'
   882  0819  3465               	retlw	101	;'e'
   883  081A  3473               	retlw	115	;'s'
   884  081B  3473               	retlw	115	;'s'
   885  081C  3461               	retlw	97	;'a'
   886  081D  3467               	retlw	103	;'g'
   887  081E  3465               	retlw	101	;'e'
   888  081F  3420               	retlw	32	;' '
   889  0820  3449               	retlw	73	;'I'
   890  0821  3444               	retlw	68	;'D'
   891  0822  3420               	retlw	32	;' '
   892  0823  3473               	retlw	115	;'s'
   893  0824  3465               	retlw	101	;'e'
   894  0825  3474               	retlw	116	;'t'
   895  0826  343A               	retlw	58	;':'
   896  0827  3420               	retlw	32	;' '
   897  0828  3425               	retlw	37	;'%'
   898  0829  3464               	retlw	100	;'d'
   899  082A  340A               	retlw	10
   900  082B  3400               	retlw	0
   901                           
   902                           	psect	stringtext4
   903  0836                     __pstringtext4:	
   904  0836                     STR_5:	
   905  0836  3428               	retlw	40	;'('
   906  0837  346E               	retlw	110	;'n'
   907  0838  3475               	retlw	117	;'u'
   908  0839  346C               	retlw	108	;'l'
   909  083A  346C               	retlw	108	;'l'
   910  083B  3429               	retlw	41	;')'
   911  083C  3400               	retlw	0
   912                           
   913                           	psect	stringtext5
   914  083D                     __pstringtext5:	
   915  083D                     STR_1:	
   916  083D  3425               	retlw	37	;'%'
   917  083E  3463               	retlw	99	;'c'
   918  083F  3400               	retlw	0
   919                           
   920                           	psect	stringtext6
   921  0000                     __pstringtext6:	
   922  0802                     
   923                           ; #config settings
   924  0000                     
   925                           	psect	cinit
   926  07F1                     start_initialization:	
   927  07F1                     __initialization:	
   928                           
   929                           ; Clear objects allocated to BANK0
   930  07F1  0020               	movlb	0	; select bank0
   931  07F2  01B4               	clrf	__pbssBANK0& (0+127)
   932  07F3  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   933  07F4  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   934  07F5  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   935                           
   936                           ; Clear objects allocated to BANK1
   937  07F6  30A0               	movlw	low __pbssBANK1
   938  07F7  0084               	movwf	4
   939  07F8  3000               	movlw	high __pbssBANK1
   940  07F9  0085               	movwf	5
   941  07FA  3040               	movlw	64
   942  07FB  3184  24FE         	fcall	clear_ram0
   943  07FD                     end_of_initialization:	
   944                           ;End of C runtime variable initialization code
   945                           
   946  07FD                     __end_of__initialization:	
   947  07FD  0020               	movlb	0
   948  07FE  3186  2E58         	ljmp	_main	;jump to C main() function
   949                           
   950                           	psect	bssBANK0
   951  0034                     __pbssBANK0:	
   952  0034                     _sid:	
   953  0034                     	ds	2
   954  0036                     _cnt:	
   955  0036                     	ds	1
   956  0037                     _c:	
   957  0037                     	ds	1
   958                           
   959                           	psect	bssBANK1
   960  00A0                     __pbssBANK1:	
   961  00A0                     _buf:	
   962  00A0                     	ds	64
   963                           
   964                           	psect	clrtext
   965  04FE                     clear_ram0:	
   966                           ;	Called with FSR0 containing the base address, and
   967                           ;	WREG with the size to clear
   968                           
   969  04FE  0064               	clrwdt	;clear the watchdog before getting into this loop
   970  04FF                     clrloop0:	
   971  04FF  0180               	clrf	0	;clear RAM location pointed to by FSR
   972  0500  3101               	addfsr 0,1
   973  0501  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   974  0502  2CFF               	goto	clrloop0	;have we reached the end yet?
   975  0503  3400               	retlw	0	;all done for this memory range, return
   976                           
   977                           	psect	cstackCOMMON
   978  0070                     __pcstackCOMMON:	
   979  0070                     ?_isdigit:	
   980  0070                     ?_PIN_MANAGER_Initialize:	
   981                           ; 1 bit 
   982                           
   983  0070                     ??_PIN_MANAGER_Initialize:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0070                     ?_OSCILLATOR_Initialize:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     ??_OSCILLATOR_Initialize:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     ?_WDT_Initialize:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ??_WDT_Initialize:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ?_SPI_Initialize:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ??_SPI_Initialize:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ?_EUSART_Initialize:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ??_EUSART_Initialize:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ??_isdigit:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ?_SYSTEM_Initialize:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ??_SYSTEM_Initialize:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ?_EUSART_Read:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ??_EUSART_Read:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     ?_EUSART_Write:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0070                     ??_EUSART_Write:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0070                     ?_putch:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0070                     ?_can_send:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ?_main:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ?___wmul:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?___lwdiv:	
  1044                           ; 2 bytes @ 0x0
  1045                           
  1046  0070                     EUSART_Write@txData:	
  1047                           ; 2 bytes @ 0x0
  1048                           
  1049  0070                     can_send@cnt:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     _isdigit$551:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ___wmul@multiplier:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ___lwdiv@divisor:	
  1059                           ; 2 bytes @ 0x0
  1060                           
  1061                           
  1062                           ; 2 bytes @ 0x0
  1063  0070                     	ds	1
  1064  0071                     ??_putch:	
  1065  0071                     ??_can_send:	
  1066                           ; 1 bytes @ 0x1
  1067                           
  1068  0071                     putch@txData:	
  1069                           ; 1 bytes @ 0x1
  1070                           
  1071  0071                     can_send@buf:	
  1072                           ; 1 bytes @ 0x1
  1073                           
  1074  0071                     isdigit@c:	
  1075                           ; 1 bytes @ 0x1
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0x1
  1079  0071                     	ds	1
  1080  0072                     ___wmul@multiplicand:	
  1081  0072                     ___lwdiv@dividend:	
  1082                           ; 2 bytes @ 0x2
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x2
  1086  0072                     	ds	2
  1087  0074                     ??___wmul:	
  1088  0074                     ??___lwdiv:	
  1089                           ; 1 bytes @ 0x4
  1090                           
  1091  0074                     ___wmul@product:	
  1092                           ; 1 bytes @ 0x4
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x4
  1096  0074                     	ds	1
  1097  0075                     ___lwdiv@quotient:	
  1098                           
  1099                           ; 2 bytes @ 0x5
  1100  0075                     	ds	1
  1101  0076                     ?_atoi:	
  1102  0076                     atoi@s:	
  1103                           ; 2 bytes @ 0x6
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x6
  1107  0076                     	ds	1
  1108  0077                     ___lwdiv@counter:	
  1109                           
  1110                           ; 1 bytes @ 0x7
  1111  0077                     	ds	1
  1112  0078                     ??_atoi:	
  1113  0078                     ?___lwmod:	
  1114                           ; 1 bytes @ 0x8
  1115                           
  1116  0078                     ___lwmod@divisor:	
  1117                           ; 2 bytes @ 0x8
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x8
  1121  0078                     	ds	2
  1122  007A                     atoi@sign:	
  1123  007A                     ___lwmod@dividend:	
  1124                           ; 1 bytes @ 0xA
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0xA
  1128  007A                     	ds	1
  1129  007B                     atoi@a:	
  1130                           
  1131                           ; 2 bytes @ 0xB
  1132  007B                     	ds	1
  1133  007C                     ??___lwmod:	
  1134                           
  1135                           ; 1 bytes @ 0xC
  1136  007C                     	ds	1
  1137  007D                     ___lwmod@counter:	
  1138                           
  1139                           ; 1 bytes @ 0xD
  1140  007D                     	ds	1
  1141                           
  1142                           	psect	cstackBANK0
  1143  0020                     __pcstackBANK0:	
  1144  0020                     ?_set_sid:	
  1145  0020                     ?_printf:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0020                     set_sid@can_node:	
  1149                           ; 2 bytes @ 0x0
  1150                           
  1151  0020                     printf@f:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154                           
  1155                           ; 2 bytes @ 0x0
  1156  0020                     	ds	2
  1157  0022                     ??_set_sid:	
  1158                           
  1159                           ; 1 bytes @ 0x2
  1160  0022                     	ds	2
  1161  0024                     ??_printf:	
  1162                           
  1163                           ; 1 bytes @ 0x4
  1164  0024                     	ds	4
  1165  0028                     printf@flag:	
  1166                           
  1167                           ; 1 bytes @ 0x8
  1168  0028                     	ds	1
  1169  0029                     printf@prec:	
  1170                           
  1171                           ; 1 bytes @ 0x9
  1172  0029                     	ds	1
  1173  002A                     printf@cp:	
  1174                           
  1175                           ; 2 bytes @ 0xA
  1176  002A                     	ds	2
  1177  002C                     printf@ap:	
  1178                           
  1179                           ; 1 bytes @ 0xC
  1180  002C                     	ds	1
  1181  002D                     printf@val:	
  1182                           
  1183                           ; 2 bytes @ 0xD
  1184  002D                     	ds	2
  1185  002F                     printf@c:	
  1186                           
  1187                           ; 1 bytes @ 0xF
  1188  002F                     	ds	1
  1189  0030                     ??_main:	
  1190                           
  1191                           ; 1 bytes @ 0x10
  1192  0030                     	ds	2
  1193  0032                     main@sid:	
  1194                           
  1195                           ; 2 bytes @ 0x12
  1196  0032                     	ds	2
  1197                           
  1198                           	psect	maintext
  1199  0658                     __pmaintext:	
  1200 ;;
  1201 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1202 ;;
  1203 ;; *************** function _main *****************
  1204 ;; Defined at:
  1205 ;;		line 37 in file "main.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  sid             2   18[BANK0 ] unsigned int 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : B1F/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1222 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1223 ;;Total ram usage:        4 bytes
  1224 ;; Hardware stack levels required when called:    3
  1225 ;; This function calls:
  1226 ;;		_EUSART_Read
  1227 ;;		_SYSTEM_Initialize
  1228 ;;		_atoi
  1229 ;;		_can_send
  1230 ;;		_printf
  1231 ;;		_set_sid
  1232 ;; This function is called by:
  1233 ;;		Startup code after reset
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _main
  1239  0658                     _main:	
  1240                           
  1241                           ;main.c: 39: SYSTEM_Initialize();
  1242                           
  1243                           ;incstack = 0
  1244                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1245  0658  3185  253A  3186   	fcall	_SYSTEM_Initialize
  1246                           
  1247                           ;main.c: 44: set_sid(0);
  1248  065B  3000               	movlw	0
  1249  065C  0020               	movlb	0	; select bank0
  1250  065D  00A0               	movwf	set_sid@can_node
  1251  065E  00A1               	movwf	set_sid@can_node+1
  1252  065F  3185  2549  3186   	fcall	_set_sid
  1253  0662                     l1261:	
  1254                           ;main.c: 46: while (1)
  1255                           
  1256                           
  1257                           ;main.c: 47: {
  1258                           ;main.c: 48: if ((PIR1bits.RCIF)) {
  1259  0662  0020               	movlb	0	; select bank0
  1260  0663  1E91               	btfss	17,5	;volatile
  1261  0664  2E62               	goto	l1261
  1262                           
  1263                           ;main.c: 49: c = EUSART_Read();
  1264  0665  3185  250C  3186   	fcall	_EUSART_Read
  1265  0668  0020               	movlb	0	; select bank0
  1266  0669  00B0               	movwf	??_main
  1267  066A  0830               	movf	??_main,w
  1268  066B  00B7               	movwf	_c
  1269                           
  1270                           ;main.c: 50: printf("%c", c);
  1271  066C  303D               	movlw	low (STR_1| (0+32768))
  1272  066D  00A0               	movwf	printf@f
  1273  066E  3088               	movlw	high (STR_1| (0+32768))
  1274  066F  00A1               	movwf	printf@f+1
  1275  0670  0837               	movf	_c,w
  1276  0671  00B0               	movwf	??_main
  1277  0672  01B1               	clrf	??_main+1
  1278  0673  0830               	movf	??_main,w
  1279  0674  00A2               	movwf	?_printf+2
  1280  0675  0831               	movf	??_main+1,w
  1281  0676  00A3               	movwf	?_printf+3
  1282  0677  3186  26F9  3186   	fcall	_printf
  1283                           
  1284                           ;main.c: 51: LATCbits.LATC3 = !LATCbits.LATC3;
  1285  067A  1003               	clrc
  1286  067B  0022               	movlb	2	; select bank2
  1287  067C  1D8E               	btfss	14,3	;volatile
  1288  067D  1403               	setc
  1289  067E  1C03               	btfss	3,0
  1290  067F  2E83               	goto	u950
  1291  0680  0022               	movlb	2	; select bank2
  1292  0681  158E               	bsf	14,3	;volatile
  1293  0682  2E85               	goto	l1269
  1294  0683                     u950:	
  1295  0683  0022               	movlb	2	; select bank2
  1296  0684  118E               	bcf	14,3	;volatile
  1297  0685                     l1269:	
  1298                           
  1299                           ;main.c: 53: buf[cnt] = c;
  1300  0685  0020               	movlb	0	; select bank0
  1301  0686  0837               	movf	_c,w
  1302  0687  00B0               	movwf	??_main
  1303  0688  0836               	movf	_cnt,w
  1304  0689  3EA0               	addlw	(low (_buf| 0))& (0+255)
  1305  068A  0086               	movwf	6
  1306  068B  0187               	clrf	7
  1307  068C  0830               	movf	??_main,w
  1308  068D  0081               	movwf	1
  1309                           
  1310                           ;main.c: 54: if (c == '\n') {
  1311  068E  300A               	movlw	10
  1312  068F  0637               	xorwf	_c,w
  1313  0690  1D03               	btfss	3,2
  1314  0691  2ECF               	goto	l1287
  1315                           
  1316                           ;main.c: 55: buf[cnt] = '\0';
  1317  0692  0836               	movf	_cnt,w
  1318  0693  3EA0               	addlw	(low (_buf| 0))& (0+255)
  1319  0694  0086               	movwf	6
  1320  0695  0187               	clrf	7
  1321  0696  0181               	clrf	1
  1322                           
  1323                           ;main.c: 56: if (buf[0] == '@') {
  1324  0697  3040               	movlw	64
  1325  0698  0021               	movlb	1	; select bank1
  1326  0699  0620               	xorwf	_buf^(0+128),w
  1327  069A  1D03               	btfss	3,2
  1328  069B  2EC1               	goto	l1281
  1329                           
  1330                           ;main.c: 57: uint16_t sid = atoi(&buf[1]);
  1331  069C  30A1               	movlw	low (_buf+1)
  1332  069D  00F6               	movwf	atoi@s
  1333  069E  3000               	movlw	high (_buf+1)
  1334  069F  00F7               	movwf	atoi@s+1
  1335  06A0  3185  25EC  3186   	fcall	_atoi
  1336  06A3  0877               	movf	?_atoi+1,w
  1337  06A4  0020               	movlb	0	; select bank0
  1338  06A5  00B3               	movwf	main@sid+1
  1339  06A6  0876               	movf	?_atoi,w
  1340  06A7  00B2               	movwf	main@sid
  1341                           
  1342                           ;main.c: 58: set_sid(atoi(sid));
  1343  06A8  0833               	movf	main@sid+1,w
  1344  06A9  00F7               	movwf	atoi@s+1
  1345  06AA  0832               	movf	main@sid,w
  1346  06AB  00F6               	movwf	atoi@s
  1347  06AC  3185  25EC  3186   	fcall	_atoi
  1348  06AF  0877               	movf	?_atoi+1,w
  1349  06B0  0020               	movlb	0	; select bank0
  1350  06B1  00A1               	movwf	set_sid@can_node+1
  1351  06B2  0876               	movf	?_atoi,w
  1352  06B3  00A0               	movwf	set_sid@can_node
  1353  06B4  3185  2549  3186   	fcall	_set_sid
  1354                           
  1355                           ;main.c: 59: printf("Message ID set: %d\n", sid);
  1356  06B7  3018               	movlw	low (STR_2| (0+32768))
  1357  06B8  0020               	movlb	0	; select bank0
  1358  06B9  00A0               	movwf	printf@f
  1359  06BA  3088               	movlw	high (STR_2| (0+32768))
  1360  06BB  00A1               	movwf	printf@f+1
  1361  06BC  0833               	movf	main@sid+1,w
  1362  06BD  00A3               	movwf	?_printf+3
  1363  06BE  0832               	movf	main@sid,w
  1364  06BF  00A2               	movwf	?_printf+2
  1365  06C0  2EF3               	goto	L2
  1366  06C1                     l1281:	
  1367                           ;main.c: 60: } else {
  1368                           
  1369                           
  1370                           ;main.c: 61: can_send(buf, cnt);
  1371  06C1  0020               	movlb	0	; select bank0
  1372  06C2  0836               	movf	_cnt,w
  1373  06C3  00B0               	movwf	??_main
  1374  06C4  0830               	movf	??_main,w
  1375  06C5  00F0               	movwf	can_send@cnt
  1376  06C6  30A0               	movlw	(low (_buf| 0))& (0+255)
  1377  06C7  3184  24EE  3186   	fcall	_can_send
  1378                           
  1379                           ;main.c: 62: printf("CAN message sent: %s\n", buf);
  1380  06CA  3002               	movlw	low ((STR_4+1)| (0+32768))
  1381  06CB  0020               	movlb	0	; select bank0
  1382  06CC  00A0               	movwf	printf@f
  1383  06CD  3088               	movlw	high ((STR_4+1)| (0+32768))
  1384  06CE  2EEE               	goto	L1
  1385  06CF                     l1287:	
  1386                           ;main.c: 65: } else if (++cnt > max_char) {
  1387                           
  1388                           ;main.c: 63: }
  1389                           ;main.c: 64: cnt = 0;
  1390                           
  1391  06CF  3001               	movlw	1
  1392  06D0  00B0               	movwf	??_main
  1393  06D1  0830               	movf	??_main,w
  1394  06D2  07B6               	addwf	_cnt,f
  1395  06D3  3000               	movlw	low (_max_char| (0+32768))
  1396  06D4  0084               	movwf	4
  1397  06D5  3088               	movlw	high (_max_char| (0+32768))
  1398  06D6  0085               	movwf	5
  1399  06D7  0800               	movf	0,w	;code access
  1400  06D8  00B1               	movwf	??_main+1
  1401  06D9  0836               	movf	_cnt,w
  1402  06DA  0231               	subwf	??_main+1,w
  1403  06DB  1803               	skipnc
  1404  06DC  2E62               	goto	l1261
  1405                           
  1406                           ;main.c: 66: buf[cnt] = '\0';
  1407  06DD  0836               	movf	_cnt,w
  1408  06DE  3EA0               	addlw	(low (_buf| 0))& (0+255)
  1409  06DF  0086               	movwf	6
  1410  06E0  0187               	clrf	7
  1411  06E1  0181               	clrf	1
  1412                           
  1413                           ;main.c: 67: can_send(buf, cnt);
  1414  06E2  0836               	movf	_cnt,w
  1415  06E3  00B0               	movwf	??_main
  1416  06E4  0830               	movf	??_main,w
  1417  06E5  00F0               	movwf	can_send@cnt
  1418  06E6  30A0               	movlw	(low (_buf| 0))& (0+255)
  1419  06E7  3184  24EE  3186   	fcall	_can_send
  1420                           
  1421                           ;main.c: 68: printf("\nCAN message sent: %s\n", buf);
  1422  06EA  3001               	movlw	low (STR_4| (0+32768))
  1423  06EB  0020               	movlb	0	; select bank0
  1424  06EC  00A0               	movwf	printf@f
  1425  06ED  3088               	movlw	high (STR_4| (0+32768))
  1426  06EE                     L1:	
  1427  06EE  00A1               	movwf	printf@f+1
  1428  06EF  30A0               	movlw	(low (_buf| 0))& (0+255)
  1429  06F0  00B0               	movwf	??_main
  1430  06F1  0830               	movf	??_main,w
  1431  06F2  00A2               	movwf	low ((?_printf| 0+2))
  1432  06F3                     L2:	
  1433  06F3  3186  26F9  3186   	fcall	_printf
  1434                           
  1435                           ;main.c: 69: cnt = 0;
  1436  06F6  0020               	movlb	0	; select bank0
  1437  06F7  01B6               	clrf	_cnt
  1438  06F8  2E62               	goto	l1261
  1439  06F9                     __end_of_main:	
  1440                           
  1441                           	psect	text1
  1442  0549                     __ptext1:	
  1443 ;; *************** function _set_sid *****************
  1444 ;; Defined at:
  1445 ;;		line 26 in file "main.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  can_node        2    0[BANK0 ] unsigned int 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1463 ;;Total ram usage:        4 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _set_sid
  1474  0549                     _set_sid:	
  1475                           
  1476                           ;main.c: 27: sid.sidh = (can_node >> 8) & 0x00ff;
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _set_sid: [wreg+status,2+status,0]
  1480  0549  0020               	movlb	0	; select bank0
  1481  054A  0821               	movf	set_sid@can_node+1,w
  1482  054B  00A2               	movwf	??_set_sid
  1483  054C  0822               	movf	??_set_sid,w
  1484  054D  00B4               	movwf	_sid
  1485                           
  1486                           ;main.c: 28: sid.sidl = (can_node << 5) & 0x00e0;
  1487  054E  0820               	movf	set_sid@can_node,w
  1488  054F  00A2               	movwf	??_set_sid
  1489  0550  3004               	movlw	4
  1490  0551                     u775:	
  1491  0551  35A2               	lslf	??_set_sid,f
  1492  0552  3EFF               	addlw	-1
  1493  0553  1D03               	skipz
  1494  0554  2D51               	goto	u775
  1495  0555  3522               	lslf	??_set_sid,w
  1496  0556  39E0               	andlw	224
  1497  0557  00A3               	movwf	??_set_sid+1
  1498  0558  0823               	movf	??_set_sid+1,w
  1499  0559  00B5               	movwf	_sid+1
  1500  055A  0008               	return
  1501  055B                     __end_of_set_sid:	
  1502                           
  1503                           	psect	text2
  1504  06F9                     __ptext2:	
  1505 ;; *************** function _printf *****************
  1506 ;; Defined at:
  1507 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1510 ;;		 -> STR_4(23), STR_3(22), STR_2(20), STR_1(3), 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  tmpval          4    0        struct .
  1513 ;;  val             2   13[BANK0 ] unsigned int 
  1514 ;;  cp              2   10[BANK0 ] PTR const unsigned char 
  1515 ;;		 -> STR_5(7), buf(64), 
  1516 ;;  len             2    0        unsigned int 
  1517 ;;  c               1   15[BANK0 ] char 
  1518 ;;  ap              1   12[BANK0 ] PTR void [1]
  1519 ;;		 -> ?_printf(2), 
  1520 ;;  prec            1    9[BANK0 ] char 
  1521 ;;  flag            1    8[BANK0 ] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2    0[BANK0 ] int 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1532 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1533 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;Total ram usage:       16 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    2
  1538 ;; This function calls:
  1539 ;;		___lwdiv
  1540 ;;		___lwmod
  1541 ;;		_putch
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _printf
  1549  06F9                     _printf:	
  1550                           
  1551                           ;doprnt.c: 466: va_list ap;
  1552                           ;doprnt.c: 499: signed char c;
  1553                           ;doprnt.c: 506: signed char prec;
  1554                           ;doprnt.c: 508: unsigned char flag;
  1555                           ;doprnt.c: 523: union {
  1556                           ;doprnt.c: 524: unsigned long vd;
  1557                           ;doprnt.c: 525: double integ;
  1558                           ;doprnt.c: 526: } tmpval;
  1559                           ;doprnt.c: 528: unsigned int val;
  1560                           ;doprnt.c: 529: unsigned len;
  1561                           ;doprnt.c: 530: const char * cp;
  1562                           ;doprnt.c: 533: *ap = __va_start();
  1563                           
  1564                           ;incstack = 0
  1565                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1566  06F9  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1567  06FA  0020               	movlb	0	; select bank0
  1568  06FB  00A4               	movwf	??_printf
  1569  06FC  0824               	movf	??_printf,w
  1570  06FD  00AC               	movwf	printf@ap
  1571  06FE                     l1217:	
  1572                           ;doprnt.c: 536: while(c = *f++) {
  1573                           
  1574  06FE  0020               	movlb	0	; select bank0
  1575  06FF  0821               	movf	printf@f+1,w
  1576  0700  00A5               	movwf	??_printf+1
  1577  0701  0820               	movf	printf@f,w
  1578  0702  00A4               	movwf	??_printf
  1579  0703  0AA0               	incf	printf@f,f
  1580  0704  1903               	skipnz
  1581  0705  0AA1               	incf	printf@f+1,f
  1582  0706  0824               	movf	??_printf,w
  1583  0707  0084               	movwf	4
  1584  0708  0825               	movf	??_printf+1,w
  1585  0709  0085               	movwf	5
  1586  070A  0800               	movf	0,w	;code access
  1587  070B  00A6               	movwf	??_printf+2
  1588  070C  0826               	movf	??_printf+2,w
  1589  070D  00AF               	movwf	printf@c
  1590  070E  082F               	movf	printf@c,w
  1591  070F  1903               	btfsc	3,2
  1592  0710  0008               	return
  1593                           
  1594                           ;doprnt.c: 538: if(c != '%')
  1595  0711  3025               	movlw	37
  1596  0712  062F               	xorwf	printf@c,w
  1597  0713  1903               	btfsc	3,2
  1598  0714  2F1A               	goto	l1157
  1599                           
  1600                           ;doprnt.c: 540: {
  1601                           ;doprnt.c: 541: (putch(c) );
  1602  0715  082F               	movf	printf@c,w
  1603  0716  3184  24F3  3186   	fcall	_putch
  1604                           
  1605                           ;doprnt.c: 542: continue;
  1606  0719  2EFE               	goto	l1217
  1607  071A                     l1157:	
  1608                           
  1609                           ;doprnt.c: 543: }
  1610                           ;doprnt.c: 548: flag = 0;
  1611  071A  0020               	movlb	0	; select bank0
  1612  071B  01A8               	clrf	printf@flag
  1613                           
  1614                           ;doprnt.c: 635: switch(c = *f++) {
  1615  071C  2F55               	goto	l1181
  1616  071D                     l1159:	
  1617                           ;doprnt.c: 728: case 's':
  1618                           
  1619                           ;doprnt.c: 698: case 'i':
  1620                           ;doprnt.c: 699: break;
  1621                           
  1622                           ;doprnt.c: 697: case 'd':
  1623                           
  1624                           ;doprnt.c: 638: goto alldone;
  1625                           
  1626                           ;doprnt.c: 637: case 0:
  1627                           
  1628                           
  1629                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  1630  071D  082C               	movf	printf@ap,w
  1631  071E  0086               	movwf	6
  1632  071F  0187               	clrf	7
  1633  0720  0801               	movf	1,w
  1634  0721  00AA               	movwf	printf@cp
  1635  0722  3000               	movlw	0
  1636  0723  00AB               	movwf	printf@cp+1
  1637  0724  3001               	movlw	1
  1638  0725  00A4               	movwf	??_printf
  1639  0726  0824               	movf	??_printf,w
  1640  0727  07AC               	addwf	printf@ap,f
  1641                           
  1642                           ;doprnt.c: 740: if(!cp)
  1643  0728  082A               	movf	printf@cp,w
  1644  0729  042B               	iorwf	printf@cp+1,w
  1645  072A  1D03               	btfss	3,2
  1646  072B  2F30               	goto	l1171
  1647                           
  1648                           ;doprnt.c: 741: cp = "(null)";
  1649  072C  3036               	movlw	low (STR_5| (0+32768))
  1650  072D  00AA               	movwf	printf@cp
  1651  072E  3088               	movlw	high (STR_5| (0+32768))
  1652  072F  00AB               	movwf	printf@cp+1
  1653  0730                     l1171:	
  1654                           ;doprnt.c: 777: while(*cp)
  1655                           
  1656  0730  082A               	movf	printf@cp,w
  1657  0731  0084               	movwf	4
  1658  0732  082B               	movf	printf@cp+1,w
  1659  0733  0085               	movwf	5
  1660  0734  0012               	moviw fsr0++
  1661  0735  1903               	btfsc	3,2
  1662  0736  2EFE               	goto	l1217
  1663                           
  1664                           ;doprnt.c: 778: (putch(*cp++) );
  1665  0737  082A               	movf	printf@cp,w
  1666  0738  0084               	movwf	4
  1667  0739  082B               	movf	printf@cp+1,w
  1668  073A  0085               	movwf	5
  1669  073B  0800               	movf	0,w	;code access
  1670  073C  3184  24F3  3186   	fcall	_putch
  1671  073F  3001               	movlw	1
  1672  0740  0020               	movlb	0	; select bank0
  1673  0741  07AA               	addwf	printf@cp,f
  1674  0742  3000               	movlw	0
  1675  0743  3DAB               	addwfc	printf@cp+1,f
  1676  0744  2F30               	goto	l1171
  1677  0745                     l1173:	
  1678                           ;doprnt.c: 784: case 'c':
  1679                           
  1680                           ;doprnt.c: 779: continue;
  1681                           
  1682                           
  1683                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1684  0745  082C               	movf	printf@ap,w
  1685  0746  0086               	movwf	6
  1686  0747  0187               	clrf	7
  1687  0748  0801               	movf	1,w
  1688  0749  00A4               	movwf	??_printf
  1689  074A  0824               	movf	??_printf,w
  1690  074B  00AF               	movwf	printf@c
  1691  074C  3002               	movlw	2
  1692  074D  00A4               	movwf	??_printf
  1693  074E  0824               	movf	??_printf,w
  1694  074F  07AC               	addwf	printf@ap,f
  1695  0750                     l1177:	
  1696                           ;doprnt.c: 802: default:
  1697                           
  1698                           
  1699                           ;doprnt.c: 809: (putch(c) );
  1700  0750  082F               	movf	printf@c,w
  1701  0751  3184  24F3  3186   	fcall	_putch
  1702                           
  1703                           ;doprnt.c: 810: continue;
  1704  0754  2EFE               	goto	l1217
  1705  0755                     l1181:	
  1706                           ;doprnt.c: 822: }
  1707                           
  1708  0755  0020               	movlb	0	; select bank0
  1709  0756  0821               	movf	printf@f+1,w
  1710  0757  00A5               	movwf	??_printf+1
  1711  0758  0820               	movf	printf@f,w
  1712  0759  00A4               	movwf	??_printf
  1713  075A  0AA0               	incf	printf@f,f
  1714  075B  1903               	skipnz
  1715  075C  0AA1               	incf	printf@f+1,f
  1716  075D  0824               	movf	??_printf,w
  1717  075E  0084               	movwf	4
  1718  075F  0825               	movf	??_printf+1,w
  1719  0760  0085               	movwf	5
  1720  0761  0800               	movf	0,w	;code access
  1721  0762  00AF               	movwf	printf@c
  1722                           
  1723                           ; Switch size 1, requested type "space"
  1724                           ; Number of cases is 5, Range of values is 0 to 115
  1725                           ; switch strategies available:
  1726                           ; Name         Instructions Cycles
  1727                           ; simple_byte           16     9 (average)
  1728                           ; direct_byte          238     6 (fixed)
  1729                           ; jumptable            260     6 (fixed)
  1730                           ;	Chosen strategy is simple_byte
  1731  0763  3A00               	xorlw	0	; case 0
  1732  0764  1903               	skipnz
  1733  0765  2FF0               	goto	l223
  1734  0766  3A63               	xorlw	99	; case 99
  1735  0767  1903               	skipnz
  1736  0768  2F45               	goto	l1173
  1737  0769  3A07               	xorlw	7	; case 100
  1738  076A  1903               	skipnz
  1739  076B  2F73               	goto	l1183
  1740  076C  3A0D               	xorlw	13	; case 105
  1741  076D  1903               	skipnz
  1742  076E  2F73               	goto	l1183
  1743  076F  3A1A               	xorlw	26	; case 115
  1744  0770  1903               	skipnz
  1745  0771  2F1D               	goto	l1159
  1746  0772  2F50               	goto	l1177
  1747  0773                     l1183:	
  1748                           
  1749                           ;doprnt.c: 1253: {
  1750                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1751  0773  0020               	movlb	0	; select bank0
  1752  0774  082C               	movf	printf@ap,w
  1753  0775  0086               	movwf	6
  1754  0776  0187               	clrf	7
  1755  0777  3F40               	moviw [0]fsr1
  1756  0778  00AD               	movwf	printf@val
  1757  0779  3F41               	moviw [1]fsr1
  1758  077A  00AE               	movwf	printf@val+1
  1759  077B  3002               	movlw	2
  1760  077C  00A4               	movwf	??_printf
  1761  077D  0824               	movf	??_printf,w
  1762  077E  07AC               	addwf	printf@ap,f
  1763                           
  1764                           ;doprnt.c: 1261: if((int)val < 0) {
  1765  077F  1FAE               	btfss	printf@val+1,7
  1766  0780  2F8A               	goto	l1193
  1767                           
  1768                           ;doprnt.c: 1262: flag |= 0x03;
  1769  0781  3003               	movlw	3
  1770  0782  00A4               	movwf	??_printf
  1771  0783  0824               	movf	??_printf,w
  1772  0784  04A8               	iorwf	printf@flag,f
  1773                           
  1774                           ;doprnt.c: 1263: val = -val;
  1775  0785  09AD               	comf	printf@val,f
  1776  0786  09AE               	comf	printf@val+1,f
  1777  0787  0AAD               	incf	printf@val,f
  1778  0788  1903               	skipnz
  1779  0789  0AAE               	incf	printf@val+1,f
  1780  078A                     l1193:	
  1781                           
  1782                           ;doprnt.c: 1264: }
  1783                           ;doprnt.c: 1266: }
  1784                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1785  078A  01AF               	clrf	printf@c
  1786  078B  0AAF               	incf	printf@c,f
  1787  078C  3005               	movlw	5
  1788  078D  062F               	xorwf	printf@c,w
  1789  078E  1903               	btfsc	3,2
  1790  078F  2FAF               	goto	l1205
  1791  0790                     l1199:	
  1792                           
  1793                           ;doprnt.c: 1306: if(val < dpowers[c])
  1794  0790  082F               	movf	printf@c,w
  1795  0791  00A4               	movwf	??_printf
  1796  0792  01A5               	clrf	??_printf+1
  1797  0793  35A4               	lslf	??_printf,f
  1798  0794  0DA5               	rlf	??_printf+1,f
  1799  0795  302C               	movlw	low (_dpowers| (0+32768))
  1800  0796  0724               	addwf	??_printf,w
  1801  0797  0084               	movwf	4
  1802  0798  3088               	movlw	high (_dpowers| (0+32768))
  1803  0799  3D25               	addwfc	??_printf+1,w
  1804  079A  0085               	movwf	5
  1805  079B  3F00               	moviw [0]fsr0
  1806  079C  00A6               	movwf	??_printf+2
  1807  079D  3F01               	moviw [1]fsr0
  1808  079E  00A7               	movwf	??_printf+3
  1809  079F  0827               	movf	??_printf+3,w
  1810  07A0  022E               	subwf	printf@val+1,w
  1811  07A1  1D03               	skipz
  1812  07A2  2FA5               	goto	u835
  1813  07A3  0826               	movf	??_printf+2,w
  1814  07A4  022D               	subwf	printf@val,w
  1815  07A5                     u835:	
  1816  07A5  1C03               	btfss	3,0
  1817  07A6  2FAF               	goto	l1205
  1818                           
  1819                           ;doprnt.c: 1307: break;
  1820  07A7  3001               	movlw	1
  1821  07A8  00A4               	movwf	??_printf
  1822  07A9  0824               	movf	??_printf,w
  1823  07AA  07AF               	addwf	printf@c,f
  1824  07AB  3005               	movlw	5
  1825  07AC  062F               	xorwf	printf@c,w
  1826  07AD  1D03               	btfss	3,2
  1827  07AE  2F90               	goto	l1199
  1828  07AF                     l1205:	
  1829                           
  1830                           ;doprnt.c: 1422: {
  1831                           ;doprnt.c: 1438: if(flag & 0x03)
  1832  07AF  0828               	movf	printf@flag,w
  1833  07B0  3903               	andlw	3
  1834  07B1  1903               	btfsc	3,2
  1835  07B2  2FB7               	goto	l1209
  1836                           
  1837                           ;doprnt.c: 1439: (putch('-') );
  1838  07B3  302D               	movlw	45
  1839  07B4  3184  24F3  3186   	fcall	_putch
  1840  07B7                     l1209:	
  1841                           
  1842                           ;doprnt.c: 1469: }
  1843                           ;doprnt.c: 1472: prec = c;
  1844  07B7  0020               	movlb	0	; select bank0
  1845  07B8  082F               	movf	printf@c,w
  1846  07B9  00A4               	movwf	??_printf
  1847  07BA  0824               	movf	??_printf,w
  1848  07BB  00A9               	movwf	printf@prec
  1849  07BC                     l1215:	
  1850                           ;doprnt.c: 1474: while(prec--) {
  1851                           
  1852  07BC  30FF               	movlw	255
  1853  07BD  0020               	movlb	0	; select bank0
  1854  07BE  00A4               	movwf	??_printf
  1855  07BF  0824               	movf	??_printf,w
  1856  07C0  07A9               	addwf	printf@prec,f
  1857  07C1  0A29               	incf	printf@prec,w
  1858  07C2  1903               	btfsc	3,2
  1859  07C3  2EFE               	goto	l1217
  1860                           
  1861                           ;doprnt.c: 1478: {
  1862                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1863  07C4  300A               	movlw	10
  1864  07C5  00F8               	movwf	___lwmod@divisor
  1865  07C6  3000               	movlw	0
  1866  07C7  00F9               	movwf	___lwmod@divisor+1
  1867  07C8  0829               	movf	printf@prec,w
  1868  07C9  00A4               	movwf	??_printf
  1869  07CA  01A5               	clrf	??_printf+1
  1870  07CB  35A4               	lslf	??_printf,f
  1871  07CC  0DA5               	rlf	??_printf+1,f
  1872  07CD  302C               	movlw	low (_dpowers| (0+32768))
  1873  07CE  0724               	addwf	??_printf,w
  1874  07CF  0084               	movwf	4
  1875  07D0  3088               	movlw	high (_dpowers| (0+32768))
  1876  07D1  3D25               	addwfc	??_printf+1,w
  1877  07D2  0085               	movwf	5
  1878  07D3  3F00               	moviw [0]fsr0
  1879  07D4  00F0               	movwf	___lwdiv@divisor
  1880  07D5  3F01               	moviw [1]fsr0
  1881  07D6  00F1               	movwf	___lwdiv@divisor+1
  1882  07D7  082E               	movf	printf@val+1,w
  1883  07D8  00F3               	movwf	___lwdiv@dividend+1
  1884  07D9  082D               	movf	printf@val,w
  1885  07DA  00F2               	movwf	___lwdiv@dividend
  1886  07DB  3185  25B8  3186   	fcall	___lwdiv
  1887  07DE  0871               	movf	?___lwdiv+1,w
  1888  07DF  00FB               	movwf	___lwmod@dividend+1
  1889  07E0  0870               	movf	?___lwdiv,w
  1890  07E1  00FA               	movwf	___lwmod@dividend
  1891  07E2  3185  258C  3186   	fcall	___lwmod
  1892  07E5  0878               	movf	?___lwmod,w
  1893  07E6  3E30               	addlw	48
  1894  07E7  0020               	movlb	0	; select bank0
  1895  07E8  00A6               	movwf	??_printf+2
  1896  07E9  0826               	movf	??_printf+2,w
  1897  07EA  00AF               	movwf	printf@c
  1898                           
  1899                           ;doprnt.c: 1523: }
  1900                           ;doprnt.c: 1524: (putch(c) );
  1901  07EB  082F               	movf	printf@c,w
  1902  07EC  3184  24F3  3186   	fcall	_putch
  1903  07EF  2FBC               	goto	l1215
  1904  07F0                     l223:	
  1905                           ;doprnt.c: 1540: return 0;
  1906                           ;	Return value of _printf is never used
  1907                           
  1908                           ;doprnt.c: 1525: }
  1909                           ;doprnt.c: 1533: }
  1910                           ;doprnt.c: 1535: alldone:
  1911                           
  1912  07F0  0008               	return
  1913  07F1                     __end_of_printf:	
  1914                           
  1915                           	psect	text3
  1916  04F3                     __ptext3:	
  1917 ;; *************** function _putch *****************
  1918 ;; Defined at:
  1919 ;;		line 107 in file "mcc_generated_files/eusart.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  txData          1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  txData          1    1[COMMON] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;Total ram usage:        1 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    1
  1940 ;; This function calls:
  1941 ;;		_EUSART_Write
  1942 ;; This function is called by:
  1943 ;;		_printf
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _putch
  1949  04F3                     _putch:	
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1953                           ;putch@txData stored from wreg
  1954  04F3  00F1               	movwf	putch@txData
  1955                           
  1956                           ;eusart.c: 109: EUSART_Write(txData);
  1957  04F4  0871               	movf	putch@txData,w
  1958  04F5  3185  2504         	fcall	_EUSART_Write
  1959  04F7  0008               	return
  1960  04F8                     __end_of_putch:	
  1961                           
  1962                           	psect	text4
  1963  0504                     __ptext4:	
  1964 ;; *************** function _EUSART_Write *****************
  1965 ;; Defined at:
  1966 ;;		line 93 in file "mcc_generated_files/eusart.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  txData          1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  txData          1    0[COMMON] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;Total ram usage:        1 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_putch
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _EUSART_Write
  1995  0504                     _EUSART_Write:	
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _EUSART_Write: [wreg]
  1999                           ;EUSART_Write@txData stored from wreg
  2000  0504  00F0               	movwf	EUSART_Write@txData
  2001  0505                     l63:	
  2002                           ;eusart.c: 96: {
  2003                           
  2004                           ;eusart.c: 95: while(0 == PIR1bits.TXIF)
  2005                           
  2006  0505  0020               	movlb	0	; select bank0
  2007  0506  1E11               	btfss	17,4	;volatile
  2008  0507  2D05               	goto	l63
  2009                           
  2010                           ;eusart.c: 97: }
  2011                           ;eusart.c: 99: TXREG = txData;
  2012  0508  0870               	movf	EUSART_Write@txData,w
  2013  0509  0023               	movlb	3	; select bank3
  2014  050A  009A               	movwf	26	;volatile
  2015  050B  0008               	return
  2016  050C                     __end_of_EUSART_Write:	
  2017                           
  2018                           	psect	text5
  2019  058C                     __ptext5:	
  2020 ;; *************** function ___lwmod *****************
  2021 ;; Defined at:
  2022 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  divisor         2    8[COMMON] unsigned int 
  2025 ;;  dividend        2   10[COMMON] unsigned int 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  counter         1   13[COMMON] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2    8[COMMON] unsigned int 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;Total ram usage:        6 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_printf
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function ___lwmod
  2052  058C                     ___lwmod:	
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2056  058C  0878               	movf	___lwmod@divisor,w
  2057  058D  0479               	iorwf	___lwmod@divisor+1,w
  2058  058E  1903               	btfsc	3,2
  2059  058F  2DB3               	goto	l1133
  2060  0590  01FD               	clrf	___lwmod@counter
  2061  0591  0AFD               	incf	___lwmod@counter,f
  2062  0592                     l1123:	
  2063  0592  1BF9               	btfsc	___lwmod@divisor+1,7
  2064  0593  2D9E               	goto	l1125
  2065  0594  3001               	movlw	1
  2066  0595                     u705:	
  2067  0595  35F8               	lslf	___lwmod@divisor,f
  2068  0596  0DF9               	rlf	___lwmod@divisor+1,f
  2069  0597  0B89               	decfsz	9,f
  2070  0598  2D95               	goto	u705
  2071  0599  3001               	movlw	1
  2072  059A  00FC               	movwf	??___lwmod
  2073  059B  087C               	movf	??___lwmod,w
  2074  059C  07FD               	addwf	___lwmod@counter,f
  2075  059D  2D92               	goto	l1123
  2076  059E                     l1125:	
  2077  059E  0879               	movf	___lwmod@divisor+1,w
  2078  059F  027B               	subwf	___lwmod@dividend+1,w
  2079  05A0  1D03               	skipz
  2080  05A1  2DA4               	goto	u725
  2081  05A2  0878               	movf	___lwmod@divisor,w
  2082  05A3  027A               	subwf	___lwmod@dividend,w
  2083  05A4                     u725:	
  2084  05A4  1C03               	skipc
  2085  05A5  2DAA               	goto	l1129
  2086  05A6  0878               	movf	___lwmod@divisor,w
  2087  05A7  02FA               	subwf	___lwmod@dividend,f
  2088  05A8  0879               	movf	___lwmod@divisor+1,w
  2089  05A9  3BFB               	subwfb	___lwmod@dividend+1,f
  2090  05AA                     l1129:	
  2091  05AA  3001               	movlw	1
  2092  05AB                     u735:	
  2093  05AB  36F9               	lsrf	___lwmod@divisor+1,f
  2094  05AC  0CF8               	rrf	___lwmod@divisor,f
  2095  05AD  0B89               	decfsz	9,f
  2096  05AE  2DAB               	goto	u735
  2097  05AF  3001               	movlw	1
  2098  05B0  02FD               	subwf	___lwmod@counter,f
  2099  05B1  1D03               	btfss	3,2
  2100  05B2  2D9E               	goto	l1125
  2101  05B3                     l1133:	
  2102  05B3  087B               	movf	___lwmod@dividend+1,w
  2103  05B4  00F9               	movwf	?___lwmod+1
  2104  05B5  087A               	movf	___lwmod@dividend,w
  2105  05B6  00F8               	movwf	?___lwmod
  2106  05B7  0008               	return
  2107  05B8                     __end_of___lwmod:	
  2108                           
  2109                           	psect	text6
  2110  05B8                     __ptext6:	
  2111 ;; *************** function ___lwdiv *****************
  2112 ;; Defined at:
  2113 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  divisor         2    0[COMMON] unsigned int 
  2116 ;;  dividend        2    2[COMMON] unsigned int 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  quotient        2    5[COMMON] unsigned int 
  2119 ;;  counter         1    7[COMMON] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2    0[COMMON] unsigned int 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2132 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2133 ;;Total ram usage:        8 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_printf
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function ___lwdiv
  2144  05B8                     ___lwdiv:	
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2148  05B8  01F5               	clrf	___lwdiv@quotient
  2149  05B9  01F6               	clrf	___lwdiv@quotient+1
  2150  05BA  0870               	movf	___lwdiv@divisor,w
  2151  05BB  0471               	iorwf	___lwdiv@divisor+1,w
  2152  05BC  1903               	btfsc	3,2
  2153  05BD  2DE7               	goto	l1111
  2154  05BE  01F7               	clrf	___lwdiv@counter
  2155  05BF  0AF7               	incf	___lwdiv@counter,f
  2156  05C0                     l1099:	
  2157  05C0  1BF1               	btfsc	___lwdiv@divisor+1,7
  2158  05C1  2DCC               	goto	l1101
  2159  05C2  3001               	movlw	1
  2160  05C3                     u635:	
  2161  05C3  35F0               	lslf	___lwdiv@divisor,f
  2162  05C4  0DF1               	rlf	___lwdiv@divisor+1,f
  2163  05C5  0B89               	decfsz	9,f
  2164  05C6  2DC3               	goto	u635
  2165  05C7  3001               	movlw	1
  2166  05C8  00F4               	movwf	??___lwdiv
  2167  05C9  0874               	movf	??___lwdiv,w
  2168  05CA  07F7               	addwf	___lwdiv@counter,f
  2169  05CB  2DC0               	goto	l1099
  2170  05CC                     l1101:	
  2171  05CC  3001               	movlw	1
  2172  05CD                     u655:	
  2173  05CD  35F5               	lslf	___lwdiv@quotient,f
  2174  05CE  0DF6               	rlf	___lwdiv@quotient+1,f
  2175  05CF  0B89               	decfsz	9,f
  2176  05D0  2DCD               	goto	u655
  2177  05D1  0871               	movf	___lwdiv@divisor+1,w
  2178  05D2  0273               	subwf	___lwdiv@dividend+1,w
  2179  05D3  1D03               	skipz
  2180  05D4  2DD7               	goto	u665
  2181  05D5  0870               	movf	___lwdiv@divisor,w
  2182  05D6  0272               	subwf	___lwdiv@dividend,w
  2183  05D7                     u665:	
  2184  05D7  1C03               	skipc
  2185  05D8  2DDE               	goto	l1107
  2186  05D9  0870               	movf	___lwdiv@divisor,w
  2187  05DA  02F2               	subwf	___lwdiv@dividend,f
  2188  05DB  0871               	movf	___lwdiv@divisor+1,w
  2189  05DC  3BF3               	subwfb	___lwdiv@dividend+1,f
  2190  05DD  1475               	bsf	___lwdiv@quotient,0
  2191  05DE                     l1107:	
  2192  05DE  3001               	movlw	1
  2193  05DF                     u675:	
  2194  05DF  36F1               	lsrf	___lwdiv@divisor+1,f
  2195  05E0  0CF0               	rrf	___lwdiv@divisor,f
  2196  05E1  0B89               	decfsz	9,f
  2197  05E2  2DDF               	goto	u675
  2198  05E3  3001               	movlw	1
  2199  05E4  02F7               	subwf	___lwdiv@counter,f
  2200  05E5  1D03               	btfss	3,2
  2201  05E6  2DCC               	goto	l1101
  2202  05E7                     l1111:	
  2203  05E7  0876               	movf	___lwdiv@quotient+1,w
  2204  05E8  00F1               	movwf	?___lwdiv+1
  2205  05E9  0875               	movf	___lwdiv@quotient,w
  2206  05EA  00F0               	movwf	?___lwdiv
  2207  05EB  0008               	return
  2208  05EC                     __end_of___lwdiv:	
  2209                           
  2210                           	psect	text7
  2211  04EE                     __ptext7:	
  2212 ;; *************** function _can_send *****************
  2213 ;; Defined at:
  2214 ;;		line 34 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  buf             1    wreg     PTR unsigned char 
  2217 ;;		 -> buf(64), 
  2218 ;;  cnt             1    0[COMMON] unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  buf             1    1[COMMON] PTR unsigned char 
  2221 ;;		 -> buf(64), 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2231 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _can_send
  2246  04EE                     _can_send:	
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _can_send: [wreg]
  2250  04EE  0008               	return
  2251  04EF                     __end_of_can_send:	
  2252                           
  2253                           	psect	text8
  2254  05EC                     __ptext8:	
  2255 ;; *************** function _atoi *****************
  2256 ;; Defined at:
  2257 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  s               2    6[COMMON] PTR const unsigned char 
  2260 ;;		 -> ROM(8192), buf(64), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  a               2   11[COMMON] int 
  2263 ;;  sign            1   10[COMMON] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2    6[COMMON] int 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;Total ram usage:        7 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    1
  2280 ;; This function calls:
  2281 ;;		___wmul
  2282 ;;		_isdigit
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _atoi
  2290  05EC                     _atoi:	
  2291  05EC                     l1223:	
  2292                           ;incstack = 0
  2293                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2294                           
  2295  05EC  0876               	movf	atoi@s,w
  2296  05ED  0084               	movwf	4
  2297  05EE  0877               	movf	atoi@s+1,w
  2298  05EF  0085               	movwf	5
  2299  05F0  0012               	moviw fsr0++
  2300  05F1  3A20               	xorlw	32
  2301  05F2  1D03               	btfss	3,2
  2302  05F3  2DF9               	goto	l1225
  2303  05F4                     l1221:	
  2304  05F4  3001               	movlw	1
  2305  05F5  07F6               	addwf	atoi@s,f
  2306  05F6  3000               	movlw	0
  2307  05F7  3DF7               	addwfc	atoi@s+1,f
  2308  05F8  2DEC               	goto	l1223
  2309  05F9                     l1225:	
  2310  05F9  0876               	movf	atoi@s,w
  2311  05FA  0084               	movwf	4
  2312  05FB  0877               	movf	atoi@s+1,w
  2313  05FC  0085               	movwf	5
  2314  05FD  0012               	moviw fsr0++
  2315  05FE  3A09               	xorlw	9
  2316  05FF  1903               	btfsc	3,2
  2317  0600  2DF4               	goto	l1221
  2318  0601  01FB               	clrf	atoi@a
  2319  0602  01FC               	clrf	atoi@a+1
  2320  0603  01FA               	clrf	atoi@sign
  2321  0604  0876               	movf	atoi@s,w
  2322  0605  0084               	movwf	4
  2323  0606  0877               	movf	atoi@s+1,w
  2324  0607  0085               	movwf	5
  2325  0608  0012               	moviw fsr0++
  2326  0609  3A2D               	xorlw	45
  2327  060A  1D03               	btfss	3,2
  2328  060B  2E11               	goto	l1235
  2329  060C  3001               	movlw	1
  2330  060D  00F8               	movwf	??_atoi
  2331  060E  0878               	movf	??_atoi,w
  2332  060F  07FA               	addwf	atoi@sign,f
  2333  0610  2E19               	goto	l1241
  2334  0611                     l1235:	
  2335  0611  0876               	movf	atoi@s,w
  2336  0612  0084               	movwf	4
  2337  0613  0877               	movf	atoi@s+1,w
  2338  0614  0085               	movwf	5
  2339  0615  0012               	moviw fsr0++
  2340  0616  3A2B               	xorlw	43
  2341  0617  1D03               	btfss	3,2
  2342  0618  2E1D               	goto	l1243
  2343  0619                     l1241:	
  2344  0619  3001               	movlw	1
  2345  061A  07F6               	addwf	atoi@s,f
  2346  061B  3000               	movlw	0
  2347  061C  3DF7               	addwfc	atoi@s+1,f
  2348  061D                     l1243:	
  2349  061D  0876               	movf	atoi@s,w
  2350  061E  0084               	movwf	4
  2351  061F  0877               	movf	atoi@s+1,w
  2352  0620  0085               	movwf	5
  2353  0621  0800               	movf	0,w	;code access
  2354  0622  3185  252C  3185   	fcall	_isdigit
  2355  0625  1C03               	btfss	3,0
  2356  0626  2E44               	goto	l1245
  2357  0627  087C               	movf	atoi@a+1,w
  2358  0628  00F1               	movwf	___wmul@multiplier+1
  2359  0629  087B               	movf	atoi@a,w
  2360  062A  00F0               	movwf	___wmul@multiplier
  2361  062B  300A               	movlw	10
  2362  062C  00F2               	movwf	___wmul@multiplicand
  2363  062D  3000               	movlw	0
  2364  062E  00F3               	movwf	___wmul@multiplicand+1
  2365  062F  3185  2571  3185   	fcall	___wmul
  2366  0632  0876               	movf	atoi@s,w
  2367  0633  0084               	movwf	4
  2368  0634  0877               	movf	atoi@s+1,w
  2369  0635  0085               	movwf	5
  2370  0636  0800               	movf	0,w	;code access
  2371  0637  0770               	addwf	?___wmul,w
  2372  0638  00F8               	movwf	??_atoi
  2373  0639  0871               	movf	?___wmul+1,w
  2374  063A  1803               	skipnc
  2375  063B  0A71               	incf	?___wmul+1,w
  2376  063C  00F9               	movwf	??_atoi+1
  2377  063D  0878               	movf	??_atoi,w
  2378  063E  3ED0               	addlw	208
  2379  063F  00FB               	movwf	atoi@a
  2380  0640  30FF               	movlw	255
  2381  0641  3D79               	addwfc	??_atoi+1,w
  2382  0642  00FC               	movwf	atoi@a+1
  2383  0643  2E19               	goto	l1241
  2384  0644                     l1245:	
  2385  0644  087A               	movf	atoi@sign,w
  2386  0645  1903               	btfsc	3,2
  2387  0646  2E53               	goto	l1251
  2388  0647  097B               	comf	atoi@a,w
  2389  0648  00F8               	movwf	??_atoi
  2390  0649  097C               	comf	atoi@a+1,w
  2391  064A  00F9               	movwf	??_atoi+1
  2392  064B  0AF8               	incf	??_atoi,f
  2393  064C  1903               	skipnz
  2394  064D  0AF9               	incf	??_atoi+1,f
  2395  064E  0878               	movf	??_atoi,w
  2396  064F  00F6               	movwf	?_atoi
  2397  0650  0879               	movf	??_atoi+1,w
  2398  0651  00F7               	movwf	?_atoi+1
  2399  0652  0008               	return
  2400  0653                     l1251:	
  2401  0653  087C               	movf	atoi@a+1,w
  2402  0654  00F7               	movwf	?_atoi+1
  2403  0655  087B               	movf	atoi@a,w
  2404  0656  00F6               	movwf	?_atoi
  2405  0657  0008               	return
  2406  0658                     __end_of_atoi:	
  2407                           
  2408                           	psect	text9
  2409  052C                     __ptext9:	
  2410 ;; *************** function _isdigit *****************
  2411 ;; Defined at:
  2412 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  c               1    wreg     unsigned char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  c               1    1[COMMON] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_atoi
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _isdigit
  2441  052C                     _isdigit:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2445                           ;isdigit@c stored from wreg
  2446  052C  00F1               	movwf	isdigit@c
  2447  052D  01F0               	clrf	_isdigit$551
  2448  052E  303A               	movlw	58
  2449  052F  0271               	subwf	isdigit@c,w
  2450  0530  1803               	skipnc
  2451  0531  2D38               	goto	l1085
  2452  0532  3030               	movlw	48
  2453  0533  0271               	subwf	isdigit@c,w
  2454  0534  1C03               	skipc
  2455  0535  2D38               	goto	l1085
  2456  0536  01F0               	clrf	_isdigit$551
  2457  0537  0AF0               	incf	_isdigit$551,f
  2458  0538                     l1085:	
  2459  0538  0C70               	rrf	_isdigit$551,w
  2460  0539  0008               	return
  2461  053A                     __end_of_isdigit:	
  2462                           
  2463                           	psect	text10
  2464  0571                     __ptext10:	
  2465 ;; *************** function ___wmul *****************
  2466 ;; Defined at:
  2467 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  multiplier      2    0[COMMON] unsigned int 
  2470 ;;  multiplicand    2    2[COMMON] unsigned int 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  product         2    4[COMMON] unsigned int 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[COMMON] unsigned int 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;Total ram usage:        6 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_atoi
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function ___wmul
  2497  0571                     ___wmul:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2501  0571  01F4               	clrf	___wmul@product
  2502  0572  01F5               	clrf	___wmul@product+1
  2503  0573                     l1065:	
  2504  0573  1C70               	btfss	___wmul@multiplier,0
  2505  0574  2D79               	goto	l307
  2506  0575  0872               	movf	___wmul@multiplicand,w
  2507  0576  07F4               	addwf	___wmul@product,f
  2508  0577  0873               	movf	___wmul@multiplicand+1,w
  2509  0578  3DF5               	addwfc	___wmul@product+1,f
  2510  0579                     l307:	
  2511  0579  3001               	movlw	1
  2512  057A                     u575:	
  2513  057A  35F2               	lslf	___wmul@multiplicand,f
  2514  057B  0DF3               	rlf	___wmul@multiplicand+1,f
  2515  057C  0B89               	decfsz	9,f
  2516  057D  2D7A               	goto	u575
  2517  057E  3001               	movlw	1
  2518  057F                     u585:	
  2519  057F  36F1               	lsrf	___wmul@multiplier+1,f
  2520  0580  0CF0               	rrf	___wmul@multiplier,f
  2521  0581  0B89               	decfsz	9,f
  2522  0582  2D7F               	goto	u585
  2523  0583  0870               	movf	___wmul@multiplier,w
  2524  0584  0471               	iorwf	___wmul@multiplier+1,w
  2525  0585  1D03               	btfss	3,2
  2526  0586  2D73               	goto	l1065
  2527  0587  0875               	movf	___wmul@product+1,w
  2528  0588  00F1               	movwf	?___wmul+1
  2529  0589  0874               	movf	___wmul@product,w
  2530  058A  00F0               	movwf	?___wmul
  2531  058B  0008               	return
  2532  058C                     __end_of___wmul:	
  2533                           
  2534                           	psect	text11
  2535  053A                     __ptext11:	
  2536 ;; *************** function _SYSTEM_Initialize *****************
  2537 ;; Defined at:
  2538 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    1
  2559 ;; This function calls:
  2560 ;;		_EUSART_Initialize
  2561 ;;		_OSCILLATOR_Initialize
  2562 ;;		_PIN_MANAGER_Initialize
  2563 ;;		_SPI_Initialize
  2564 ;;		_WDT_Initialize
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _SYSTEM_Initialize
  2572  053A                     _SYSTEM_Initialize:	
  2573                           
  2574                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2578  053A  3185  255B  3185   	fcall	_PIN_MANAGER_Initialize
  2579                           
  2580                           ;mcc.c: 74: OSCILLATOR_Initialize();
  2581  053D  3185  2516  3185   	fcall	_OSCILLATOR_Initialize
  2582                           
  2583                           ;mcc.c: 75: WDT_Initialize();
  2584  0540  3184  24EF  3185   	fcall	_WDT_Initialize
  2585                           
  2586                           ;mcc.c: 76: SPI_Initialize();
  2587  0543  3184  24F8  3185   	fcall	_SPI_Initialize
  2588                           
  2589                           ;mcc.c: 77: EUSART_Initialize();
  2590  0546  3185  2520         	fcall	_EUSART_Initialize
  2591  0548  0008               	return
  2592  0549                     __end_of_SYSTEM_Initialize:	
  2593                           
  2594                           	psect	text12
  2595  04EF                     __ptext12:	
  2596 ;; *************** function _WDT_Initialize *****************
  2597 ;; Defined at:
  2598 ;;		line 94 in file "mcc_generated_files/mcc.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_SYSTEM_Initialize
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _WDT_Initialize
  2627  04EF                     _WDT_Initialize:	
  2628                           
  2629                           ;mcc.c: 97: WDTCON = 0x16;
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _WDT_Initialize: [wreg]
  2633  04EF  3016               	movlw	22
  2634  04F0  0021               	movlb	1	; select bank1
  2635  04F1  0097               	movwf	23	;volatile
  2636  04F2  0008               	return
  2637  04F3                     __end_of_WDT_Initialize:	
  2638                           
  2639                           	psect	text13
  2640  04F8                     __ptext13:	
  2641 ;; *************** function _SPI_Initialize *****************
  2642 ;; Defined at:
  2643 ;;		line 63 in file "mcc_generated_files/spi.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_SYSTEM_Initialize
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _SPI_Initialize
  2672  04F8                     _SPI_Initialize:	
  2673                           
  2674                           ;spi.c: 68: SSP1STAT = 0x00;
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  2678  04F8  0024               	movlb	4	; select bank4
  2679  04F9  0194               	clrf	20	;volatile
  2680                           
  2681                           ;spi.c: 71: SSP1CON1 = 0x20;
  2682  04FA  3020               	movlw	32
  2683  04FB  0095               	movwf	21	;volatile
  2684                           
  2685                           ;spi.c: 74: SSP1ADD = 0x00;
  2686  04FC  0192               	clrf	18	;volatile
  2687  04FD  0008               	return
  2688  04FE                     __end_of_SPI_Initialize:	
  2689                           
  2690                           	psect	text14
  2691  055B                     __ptext14:	
  2692 ;; *************** function _PIN_MANAGER_Initialize *****************
  2693 ;; Defined at:
  2694 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_SYSTEM_Initialize
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _PIN_MANAGER_Initialize
  2723  055B                     _PIN_MANAGER_Initialize:	
  2724                           
  2725                           ;pin_manager.c: 57: LATA = 0x00;
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2729  055B  0022               	movlb	2	; select bank2
  2730  055C  018C               	clrf	12	;volatile
  2731                           
  2732                           ;pin_manager.c: 58: LATC = 0x00;
  2733  055D  018E               	clrf	14	;volatile
  2734                           
  2735                           ;pin_manager.c: 63: TRISA = 0x3F;
  2736  055E  303F               	movlw	63
  2737  055F  0021               	movlb	1	; select bank1
  2738  0560  008C               	movwf	12	;volatile
  2739                           
  2740                           ;pin_manager.c: 64: TRISC = 0x32;
  2741  0561  3032               	movlw	50
  2742  0562  008E               	movwf	14	;volatile
  2743                           
  2744                           ;pin_manager.c: 69: ANSELC = 0x00;
  2745  0563  0023               	movlb	3	; select bank3
  2746  0564  018E               	clrf	14	;volatile
  2747                           
  2748                           ;pin_manager.c: 70: ANSELA = 0x17;
  2749  0565  3017               	movlw	23
  2750  0566  008C               	movwf	12	;volatile
  2751                           
  2752                           ;pin_manager.c: 75: WPUA = 0x00;
  2753  0567  0024               	movlb	4	; select bank4
  2754  0568  018C               	clrf	12	;volatile
  2755                           
  2756                           ;pin_manager.c: 76: WPUC = 0x30;
  2757  0569  3030               	movlw	48
  2758  056A  008E               	movwf	14	;volatile
  2759                           
  2760                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
  2761  056B  0021               	movlb	1	; select bank1
  2762  056C  1395               	bcf	21,7	;volatile
  2763                           
  2764                           ;pin_manager.c: 83: APFCON1 = 0x00;
  2765  056D  0022               	movlb	2	; select bank2
  2766  056E  019E               	clrf	30	;volatile
  2767                           
  2768                           ;pin_manager.c: 84: APFCON0 = 0x00;
  2769  056F  019D               	clrf	29	;volatile
  2770  0570  0008               	return
  2771  0571                     __end_of_PIN_MANAGER_Initialize:	
  2772                           
  2773                           	psect	text15
  2774  0516                     __ptext15:	
  2775 ;; *************** function _OSCILLATOR_Initialize *****************
  2776 ;; Defined at:
  2777 ;;		line 80 in file "mcc_generated_files/mcc.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_SYSTEM_Initialize
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _OSCILLATOR_Initialize
  2806  0516                     _OSCILLATOR_Initialize:	
  2807                           
  2808                           ;mcc.c: 83: OSCCON = 0x70;
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2812  0516  3070               	movlw	112
  2813  0517  0021               	movlb	1	; select bank1
  2814  0518  0099               	movwf	25	;volatile
  2815                           
  2816                           ;mcc.c: 85: OSCTUNE = 0x00;
  2817  0519  0198               	clrf	24	;volatile
  2818                           
  2819                           ;mcc.c: 87: BORCON = 0x00;
  2820  051A  0022               	movlb	2	; select bank2
  2821  051B  0196               	clrf	22	;volatile
  2822  051C                     l26:	
  2823                           ;mcc.c: 90: {
  2824                           
  2825                           ;mcc.c: 89: while(PLLR == 0)
  2826                           
  2827  051C  0021               	movlb	1	; select bank1
  2828  051D  1B1A               	btfsc	26,6	;volatile
  2829  051E  0008               	return
  2830  051F  2D1C               	goto	l26
  2831  0520                     __end_of_OSCILLATOR_Initialize:	
  2832                           
  2833                           	psect	text16
  2834  0520                     __ptext16:	
  2835 ;; *************** function _EUSART_Initialize *****************
  2836 ;; Defined at:
  2837 ;;		line 53 in file "mcc_generated_files/eusart.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_SYSTEM_Initialize
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _EUSART_Initialize
  2866  0520                     _EUSART_Initialize:	
  2867                           
  2868                           ;eusart.c: 58: BAUDCON = 0x08;
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _EUSART_Initialize: [wreg]
  2872  0520  3008               	movlw	8
  2873  0521  0023               	movlb	3	; select bank3
  2874  0522  009F               	movwf	31	;volatile
  2875                           
  2876                           ;eusart.c: 61: RCSTA = 0x90;
  2877  0523  3090               	movlw	144
  2878  0524  009D               	movwf	29	;volatile
  2879                           
  2880                           ;eusart.c: 64: TXSTA = 0x24;
  2881  0525  3024               	movlw	36
  2882  0526  009E               	movwf	30	;volatile
  2883                           
  2884                           ;eusart.c: 67: SPBRGL = 0x40;
  2885  0527  3040               	movlw	64
  2886  0528  009B               	movwf	27	;volatile
  2887                           
  2888                           ;eusart.c: 70: SPBRGH = 0x03;
  2889  0529  3003               	movlw	3
  2890  052A  009C               	movwf	28	;volatile
  2891  052B  0008               	return
  2892  052C                     __end_of_EUSART_Initialize:	
  2893                           
  2894                           	psect	text17
  2895  050C                     __ptext17:	
  2896 ;; *************** function _EUSART_Read *****************
  2897 ;; Defined at:
  2898 ;;		line 75 in file "mcc_generated_files/eusart.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      unsigned char 
  2905 ;; Registers used:
  2906 ;;		wreg
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;;		_getch
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _EUSART_Read
  2928  050C                     _EUSART_Read:	
  2929  050C                     l56:	
  2930                           ;eusart.c: 78: {
  2931                           
  2932                           ;eusart.c: 77: while(!PIR1bits.RCIF)
  2933                           
  2934                           ;incstack = 0
  2935                           ; Regs used in _EUSART_Read: [wreg]
  2936                           
  2937  050C  0020               	movlb	0	; select bank0
  2938  050D  1E91               	btfss	17,5	;volatile
  2939  050E  2D0C               	goto	l56
  2940                           
  2941                           ;eusart.c: 79: }
  2942                           ;eusart.c: 82: if(1 == RCSTAbits.OERR)
  2943  050F  0023               	movlb	3	; select bank3
  2944  0510  1C9D               	btfss	29,1	;volatile
  2945  0511  2D14               	goto	l1143
  2946                           
  2947                           ;eusart.c: 83: {
  2948                           ;eusart.c: 86: RCSTAbits.CREN = 0;
  2949  0512  121D               	bcf	29,4	;volatile
  2950                           
  2951                           ;eusart.c: 87: RCSTAbits.CREN = 1;
  2952  0513  161D               	bsf	29,4	;volatile
  2953  0514                     l1143:	
  2954                           
  2955                           ;eusart.c: 88: }
  2956                           ;eusart.c: 90: return RCREG;
  2957  0514  0819               	movf	25,w	;volatile
  2958  0515  0008               	return
  2959  0516                     __end_of_EUSART_Read:	
  2960  007E                     btemp	set	126	;btemp
  2961  007E                     wtemp0	set	126


Data Sizes:
    Strings     53
    Constant    11
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      24
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    can_send@buf	PTR unsigned char  size(1) Largest target is 64
		 -> buf(BANK1[64]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), buf(BANK1[64]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[22]), STR_2(CODE[20]), STR_1(CODE[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_5(CODE[7]), buf(BANK1[64]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _set_sid->_atoi
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2466
                                             16 BANK0      4     4      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                               _atoi
                           _can_send
                             _printf
                            _set_sid
 ---------------------------------------------------------------------------------
 (1) _set_sid                                              4     2      2     172
                                              0 BANK0      4     2      2
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1401
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _can_send                                             2     1      1     204
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2     644
                                              6 COMMON     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _WDT_Initialize
   _atoi
     ___wmul
     _isdigit
   _can_send
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write
   _set_sid
     _atoi (ARG)
       ___wmul
       _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      18       5       30.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      66      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 11 08:36:24 2018

                 _SPI_Initialize 04F8                                _c 0037                      __CFG_CP$OFF 0000  
                             l26 051C                               l63 0505                               l56 050C  
            ___wmul@multiplicand 0072                      __CFG_LVP$ON 0000                              l223 07F0  
                            l307 0579                     __CFG_CPD$OFF 0000                              u705 0595  
                            u635 05C3                              u725 05A4                              u575 057A  
                            u655 05CD                              u735 05AB                              u585 057F  
                            u665 05D7                              u675 05DF                              u835 07A5  
                            u950 0683                              u775 0551                              _buf 00A0  
                            _cnt 0036                              _sid 0034                     __CFG_BORV$LO 0000  
                            wreg 0009                     __CFG_IESO$ON 0000                     ?_EUSART_Read 0070  
                           l1101 05CC                             l1111 05E7                             l1107 05DE  
                           l1123 0592                             l1221 05F4                             l1125 059E  
                           l1133 05B3                             l1205 07AF                             l1143 0514  
                           l1223 05EC                             l1215 07BC                             l1065 0573  
                           l1241 0619                             l1225 05F9                             l1129 05AA  
                           l1209 07B7                             l1217 06FE                             l1251 0653  
                           l1243 061D                             l1235 0611                             l1171 0730  
                           l1085 0538                             l1245 0644                             l1173 0745  
                           l1181 0755                             l1157 071A                             l1261 0662  
                           l1159 071D                             l1183 0773                             l1193 078A  
                           l1177 0750                             l1281 06C1                             l1099 05C0  
                           l1269 0685                             l1199 0790                             l1287 06CF  
                           STR_1 083D                             STR_2 0818                             STR_3 0802  
                           STR_4 0801                             STR_5 0836                             _LATA 010C  
                           _LATC 010E                             _PLLR 04D6                             _WPUA 020C  
                           _WPUC 020E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _atoi 05EC                             _main 0658                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0002           __end_of_SPI_Initialize 04FE  
                  __CFG_MCLRE$ON 0000                    __CFG_PLLEN$ON 0000                    ?_EUSART_Write 0070  
 __size_of_OSCILLATOR_Initialize 000A    __end_of_OSCILLATOR_Initialize 0520                            ?_atoi 0076  
                          ?_main 0070                    __CFG_WDTE$OFF 0000                  __end_of___lwdiv 05EC  
                __end_of___lwmod 05B8                            _RCREG 0199                            _RCSTA 019D  
                          _TRISA 008C                            _TRISC 008E                            _TXREG 019A  
                          _TXSTA 019E                  __end_of_dpowers 0836                   _WDT_Initialize 04EF  
                __end_of_isdigit 053A                            atoi@a 007B                            atoi@s 0076  
                          _putch 04F3                  __end_of_set_sid 055B                            status 0003  
                          wtemp0 007E                  ?_SPI_Initialize 0070                  __initialization 07F1  
                   __end_of_atoi 0658                     __end_of_main 06F9                   ??_EUSART_Write 0070  
                         ??_atoi 0078                           ??_main 0030           __end_of_WDT_Initialize 04F3  
                         _ANSELA 018C                           ?_putch 0070                           _ANSELC 018E  
                         _BORCON 0116                           _OSCCON 0099                           _SPBRGH 019C  
                         _SPBRGL 019B                           _WDTCON 0097                 __end_of_can_send 04EF  
                 __CFG_PWRTE$OFF 0000                           ___wmul 0571                   __CFG_STVREN$ON 0000  
                      ??___lwdiv 0074                        ??___lwmod 007C                 __end_of_max_char 0801  
                         _printf 06F9                        ??_isdigit 0070                  ?_WDT_Initialize 0070  
                      ??_set_sid 0022             __size_of_EUSART_Read 000A                _SYSTEM_Initialize 053A  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070  
            ??_SYSTEM_Initialize 0070                    __end_of_putch 04F8                   _OPTION_REGbits 0095  
      __end_of_SYSTEM_Initialize 0549                          ??_putch 0071                       __pbssBANK0 0034  
                     __pbssBANK1 00A0             __end_of_EUSART_Write 050C                       __pmaintext 0658  
                        ?___wmul 0070                          _BAUDCON 019F                          _APFCON0 011D  
                        _APFCON1 011E                          ?_printf 0020                        ?_can_send 0070  
                        _OSCTUNE 0098                          _SSP1ADD 0212                          _SSP1BUF 0211  
               ??_SPI_Initialize 0070                  __size_of___wmul 001B                          ___lwdiv 05B8  
                        ___lwmod 058C                          __ptext1 0549                          __ptext2 06F9  
                        __ptext3 04F3                          __ptext4 0504                          __ptext5 058C  
                        __ptext6 05B8                          __ptext7 04EE                          __ptext8 05EC  
                        __ptext9 052C                  __size_of_printf 00F8                          _dpowers 082C  
          _OSCILLATOR_Initialize 0516                       ??_can_send 0071                          _isdigit 052C  
       ??_PIN_MANAGER_Initialize 0070                          _set_sid 0549       __size_of_SYSTEM_Initialize 000F  
                        main@sid 0032                          clrloop0 04FF             end_of_initialization 07FD  
              _EUSART_Initialize 0520               ?_EUSART_Initialize 0070                        _RCSTAbits 019D  
                        printf@c 002F                          printf@f 0020              ??_EUSART_Initialize 0070  
               ??_WDT_Initialize 0070                 __CFG_FOSC$INTOSC 0000            __size_of_EUSART_Write 0008  
      __end_of_EUSART_Initialize 052C                   __end_of___wmul 058C                     _EUSART_Write 0504  
         ?_OSCILLATOR_Initialize 0070                   __end_of_printf 07F1              start_initialization 07F1  
__size_of_PIN_MANAGER_Initialize 0016                    ??_EUSART_Read 0070                      putch@txData 0071  
                       ??___wmul 0074                         ??_printf 0024                        ___latbits 0002  
                  __pcstackBANK0 0020                __size_of_can_send 0001       __size_of_EUSART_Initialize 000C  
            __end_of_EUSART_Read 0516                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 055B  
                       ?___lwdiv 0070                         ?___lwmod 0078                         ?_isdigit 0070  
                       ?_set_sid 0020                 ___lwdiv@quotient 0075                   __size_of_putch 0005  
                 ___wmul@product 0074                         _LATCbits 010E                        clear_ram0 04FE  
                       _PIR1bits 0011                         _SSP1CON1 0215                         _SSP1STAT 0214  
              ___wmul@multiplier 0070                       printf@flag 0028                       printf@prec 0029  
                    _EUSART_Read 050C                      can_send@buf 0071                      can_send@cnt 0070  
        __size_of_SPI_Initialize 0006          ??_OSCILLATOR_Initialize 0070                 __size_of___lwdiv 0034  
               __size_of___lwmod 002C                      _isdigit$551 0070                         _can_send 04EE  
               __size_of_isdigit 000E                  ___lwdiv@divisor 0070                  ___lwdiv@counter 0077  
                       __ptext10 0571                         __ptext11 053A                         __ptext12 04EF  
                       __ptext13 04F8                         __ptext14 055B                         __ptext15 0516  
                       __ptext16 0520                         __ptext17 050C                 __size_of_set_sid 0012  
                   _SSP1CON1bits 0215                         _max_char 0800                    __size_of_atoi 006C  
                  __size_of_main 00A1                         atoi@sign 007A                        printf@val 002D  
                   _SSP1STATbits 0214                         isdigit@c 0071          __size_of_WDT_Initialize 0004  
               ___lwmod@dividend 007A          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                       printf@ap 002C                         printf@cp 002A                    __pstringtext1 082C  
                  __pstringtext2 0800                    __pstringtext3 0818                    __pstringtext4 0836  
                  __pstringtext5 083D                    __pstringtext6 0000                  ___lwmod@divisor 0078  
                ___lwmod@counter 007D               EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 0571  
                set_sid@can_node 0020  
