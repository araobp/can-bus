

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 11 07:16:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1825 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000E                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  008C                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  010C                     	;# 
   119  010E                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011B                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  018C                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020E                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0291                     	;# 
   170  0291                     	;# 
   171  0292                     	;# 
   172  0293                     	;# 
   173  0294                     	;# 
   174  0295                     	;# 
   175  0295                     	;# 
   176  0296                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  029B                     	;# 
   182  029C                     	;# 
   183  029D                     	;# 
   184  029E                     	;# 
   185  0311                     	;# 
   186  0311                     	;# 
   187  0312                     	;# 
   188  0313                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  038C                     	;# 
   194  038E                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  039A                     	;# 
   199  039C                     	;# 
   200  039D                     	;# 
   201  039E                     	;# 
   202  039F                     	;# 
   203  0415                     	;# 
   204  0416                     	;# 
   205  0417                     	;# 
   206  041C                     	;# 
   207  041D                     	;# 
   208  041E                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000E                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  008C                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0097                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009A                     	;# 
   259  009B                     	;# 
   260  009B                     	;# 
   261  009C                     	;# 
   262  009D                     	;# 
   263  009E                     	;# 
   264  010C                     	;# 
   265  010E                     	;# 
   266  0111                     	;# 
   267  0112                     	;# 
   268  0113                     	;# 
   269  0114                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0117                     	;# 
   273  0118                     	;# 
   274  0119                     	;# 
   275  011A                     	;# 
   276  011B                     	;# 
   277  011D                     	;# 
   278  011E                     	;# 
   279  018C                     	;# 
   280  018E                     	;# 
   281  0191                     	;# 
   282  0191                     	;# 
   283  0192                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0193                     	;# 
   287  0194                     	;# 
   288  0195                     	;# 
   289  0196                     	;# 
   290  0199                     	;# 
   291  019A                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020C                     	;# 
   299  020E                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0291                     	;# 
   316  0291                     	;# 
   317  0292                     	;# 
   318  0293                     	;# 
   319  0294                     	;# 
   320  0295                     	;# 
   321  0295                     	;# 
   322  0296                     	;# 
   323  0298                     	;# 
   324  0298                     	;# 
   325  0299                     	;# 
   326  029A                     	;# 
   327  029B                     	;# 
   328  029C                     	;# 
   329  029D                     	;# 
   330  029E                     	;# 
   331  0311                     	;# 
   332  0311                     	;# 
   333  0312                     	;# 
   334  0313                     	;# 
   335  0318                     	;# 
   336  0318                     	;# 
   337  0319                     	;# 
   338  031A                     	;# 
   339  038C                     	;# 
   340  038E                     	;# 
   341  0391                     	;# 
   342  0392                     	;# 
   343  0393                     	;# 
   344  039A                     	;# 
   345  039C                     	;# 
   346  039D                     	;# 
   347  039E                     	;# 
   348  039F                     	;# 
   349  0415                     	;# 
   350  0416                     	;# 
   351  0417                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  0FE4                     	;# 
   356  0FE5                     	;# 
   357  0FE6                     	;# 
   358  0FE7                     	;# 
   359  0FE8                     	;# 
   360  0FE9                     	;# 
   361  0FEA                     	;# 
   362  0FEB                     	;# 
   363  0FED                     	;# 
   364  0FEE                     	;# 
   365  0FEF                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000E                     	;# 
   380  0011                     	;# 
   381  0012                     	;# 
   382  0013                     	;# 
   383  0015                     	;# 
   384  0016                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001C                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  008C                     	;# 
   395  008E                     	;# 
   396  0091                     	;# 
   397  0092                     	;# 
   398  0093                     	;# 
   399  0095                     	;# 
   400  0096                     	;# 
   401  0097                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009A                     	;# 
   405  009B                     	;# 
   406  009B                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009E                     	;# 
   410  010C                     	;# 
   411  010E                     	;# 
   412  0111                     	;# 
   413  0112                     	;# 
   414  0113                     	;# 
   415  0114                     	;# 
   416  0115                     	;# 
   417  0116                     	;# 
   418  0117                     	;# 
   419  0118                     	;# 
   420  0119                     	;# 
   421  011A                     	;# 
   422  011B                     	;# 
   423  011D                     	;# 
   424  011E                     	;# 
   425  018C                     	;# 
   426  018E                     	;# 
   427  0191                     	;# 
   428  0191                     	;# 
   429  0192                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0194                     	;# 
   434  0195                     	;# 
   435  0196                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019C                     	;# 
   441  019D                     	;# 
   442  019E                     	;# 
   443  019F                     	;# 
   444  020C                     	;# 
   445  020E                     	;# 
   446  0211                     	;# 
   447  0211                     	;# 
   448  0212                     	;# 
   449  0212                     	;# 
   450  0213                     	;# 
   451  0213                     	;# 
   452  0214                     	;# 
   453  0214                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0216                     	;# 
   458  0216                     	;# 
   459  0217                     	;# 
   460  0217                     	;# 
   461  0291                     	;# 
   462  0291                     	;# 
   463  0292                     	;# 
   464  0293                     	;# 
   465  0294                     	;# 
   466  0295                     	;# 
   467  0295                     	;# 
   468  0296                     	;# 
   469  0298                     	;# 
   470  0298                     	;# 
   471  0299                     	;# 
   472  029A                     	;# 
   473  029B                     	;# 
   474  029C                     	;# 
   475  029D                     	;# 
   476  029E                     	;# 
   477  0311                     	;# 
   478  0311                     	;# 
   479  0312                     	;# 
   480  0313                     	;# 
   481  0318                     	;# 
   482  0318                     	;# 
   483  0319                     	;# 
   484  031A                     	;# 
   485  038C                     	;# 
   486  038E                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  039A                     	;# 
   491  039C                     	;# 
   492  039D                     	;# 
   493  039E                     	;# 
   494  039F                     	;# 
   495  0415                     	;# 
   496  0416                     	;# 
   497  0417                     	;# 
   498  041C                     	;# 
   499  041D                     	;# 
   500  041E                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000E                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0016                     	;# 
   532  0017                     	;# 
   533  0018                     	;# 
   534  0019                     	;# 
   535  001A                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  001E                     	;# 
   539  001F                     	;# 
   540  008C                     	;# 
   541  008E                     	;# 
   542  0091                     	;# 
   543  0092                     	;# 
   544  0093                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009B                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  010C                     	;# 
   557  010E                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011A                     	;# 
   568  011B                     	;# 
   569  011D                     	;# 
   570  011E                     	;# 
   571  018C                     	;# 
   572  018E                     	;# 
   573  0191                     	;# 
   574  0191                     	;# 
   575  0192                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0193                     	;# 
   579  0194                     	;# 
   580  0195                     	;# 
   581  0196                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019C                     	;# 
   587  019D                     	;# 
   588  019E                     	;# 
   589  019F                     	;# 
   590  020C                     	;# 
   591  020E                     	;# 
   592  0211                     	;# 
   593  0211                     	;# 
   594  0212                     	;# 
   595  0212                     	;# 
   596  0213                     	;# 
   597  0213                     	;# 
   598  0214                     	;# 
   599  0214                     	;# 
   600  0215                     	;# 
   601  0215                     	;# 
   602  0215                     	;# 
   603  0216                     	;# 
   604  0216                     	;# 
   605  0217                     	;# 
   606  0217                     	;# 
   607  0291                     	;# 
   608  0291                     	;# 
   609  0292                     	;# 
   610  0293                     	;# 
   611  0294                     	;# 
   612  0295                     	;# 
   613  0295                     	;# 
   614  0296                     	;# 
   615  0298                     	;# 
   616  0298                     	;# 
   617  0299                     	;# 
   618  029A                     	;# 
   619  029B                     	;# 
   620  029C                     	;# 
   621  029D                     	;# 
   622  029E                     	;# 
   623  0311                     	;# 
   624  0311                     	;# 
   625  0312                     	;# 
   626  0313                     	;# 
   627  0318                     	;# 
   628  0318                     	;# 
   629  0319                     	;# 
   630  031A                     	;# 
   631  038C                     	;# 
   632  038E                     	;# 
   633  0391                     	;# 
   634  0392                     	;# 
   635  0393                     	;# 
   636  039A                     	;# 
   637  039C                     	;# 
   638  039D                     	;# 
   639  039E                     	;# 
   640  039F                     	;# 
   641  0415                     	;# 
   642  0416                     	;# 
   643  0417                     	;# 
   644  041C                     	;# 
   645  041D                     	;# 
   646  041E                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000E                     	;# 
   672  0011                     	;# 
   673  0012                     	;# 
   674  0013                     	;# 
   675  0015                     	;# 
   676  0016                     	;# 
   677  0016                     	;# 
   678  0017                     	;# 
   679  0018                     	;# 
   680  0019                     	;# 
   681  001A                     	;# 
   682  001B                     	;# 
   683  001C                     	;# 
   684  001E                     	;# 
   685  001F                     	;# 
   686  008C                     	;# 
   687  008E                     	;# 
   688  0091                     	;# 
   689  0092                     	;# 
   690  0093                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0098                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  010C                     	;# 
   703  010E                     	;# 
   704  0111                     	;# 
   705  0112                     	;# 
   706  0113                     	;# 
   707  0114                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0117                     	;# 
   711  0118                     	;# 
   712  0119                     	;# 
   713  011A                     	;# 
   714  011B                     	;# 
   715  011D                     	;# 
   716  011E                     	;# 
   717  018C                     	;# 
   718  018E                     	;# 
   719  0191                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0193                     	;# 
   723  0193                     	;# 
   724  0193                     	;# 
   725  0194                     	;# 
   726  0195                     	;# 
   727  0196                     	;# 
   728  0199                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  019D                     	;# 
   734  019E                     	;# 
   735  019F                     	;# 
   736  020C                     	;# 
   737  020E                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0213                     	;# 
   744  0214                     	;# 
   745  0214                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0291                     	;# 
   754  0291                     	;# 
   755  0292                     	;# 
   756  0293                     	;# 
   757  0294                     	;# 
   758  0295                     	;# 
   759  0295                     	;# 
   760  0296                     	;# 
   761  0298                     	;# 
   762  0298                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  029B                     	;# 
   766  029C                     	;# 
   767  029D                     	;# 
   768  029E                     	;# 
   769  0311                     	;# 
   770  0311                     	;# 
   771  0312                     	;# 
   772  0313                     	;# 
   773  0318                     	;# 
   774  0318                     	;# 
   775  0319                     	;# 
   776  031A                     	;# 
   777  038C                     	;# 
   778  038E                     	;# 
   779  0391                     	;# 
   780  0392                     	;# 
   781  0393                     	;# 
   782  039A                     	;# 
   783  039C                     	;# 
   784  039D                     	;# 
   785  039E                     	;# 
   786  039F                     	;# 
   787  0415                     	;# 
   788  0416                     	;# 
   789  0417                     	;# 
   790  041C                     	;# 
   791  041D                     	;# 
   792  041E                     	;# 
   793  0FE4                     	;# 
   794  0FE5                     	;# 
   795  0FE6                     	;# 
   796  0FE7                     	;# 
   797  0FE8                     	;# 
   798  0FE9                     	;# 
   799  0FEA                     	;# 
   800  0FEB                     	;# 
   801  0FED                     	;# 
   802  0FEE                     	;# 
   803  0FEF                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0008                     	;# 
   813  0009                     	;# 
   814  000A                     	;# 
   815  000B                     	;# 
   816  000C                     	;# 
   817  000E                     	;# 
   818  0011                     	;# 
   819  0012                     	;# 
   820  0013                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0016                     	;# 
   824  0017                     	;# 
   825  0018                     	;# 
   826  0019                     	;# 
   827  001A                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001E                     	;# 
   831  001F                     	;# 
   832  008C                     	;# 
   833  008E                     	;# 
   834  0091                     	;# 
   835  0092                     	;# 
   836  0093                     	;# 
   837  0095                     	;# 
   838  0096                     	;# 
   839  0097                     	;# 
   840  0098                     	;# 
   841  0099                     	;# 
   842  009A                     	;# 
   843  009B                     	;# 
   844  009B                     	;# 
   845  009C                     	;# 
   846  009D                     	;# 
   847  009E                     	;# 
   848  010C                     	;# 
   849  010E                     	;# 
   850  0111                     	;# 
   851  0112                     	;# 
   852  0113                     	;# 
   853  0114                     	;# 
   854  0115                     	;# 
   855  0116                     	;# 
   856  0117                     	;# 
   857  0118                     	;# 
   858  0119                     	;# 
   859  011A                     	;# 
   860  011B                     	;# 
   861  011D                     	;# 
   862  011E                     	;# 
   863  018C                     	;# 
   864  018E                     	;# 
   865  0191                     	;# 
   866  0191                     	;# 
   867  0192                     	;# 
   868  0193                     	;# 
   869  0193                     	;# 
   870  0193                     	;# 
   871  0194                     	;# 
   872  0195                     	;# 
   873  0196                     	;# 
   874  0199                     	;# 
   875  019A                     	;# 
   876  019B                     	;# 
   877  019B                     	;# 
   878  019C                     	;# 
   879  019D                     	;# 
   880  019E                     	;# 
   881  019F                     	;# 
   882  020C                     	;# 
   883  020E                     	;# 
   884  0211                     	;# 
   885  0211                     	;# 
   886  0212                     	;# 
   887  0212                     	;# 
   888  0213                     	;# 
   889  0213                     	;# 
   890  0214                     	;# 
   891  0214                     	;# 
   892  0215                     	;# 
   893  0215                     	;# 
   894  0215                     	;# 
   895  0216                     	;# 
   896  0216                     	;# 
   897  0217                     	;# 
   898  0217                     	;# 
   899  0291                     	;# 
   900  0291                     	;# 
   901  0292                     	;# 
   902  0293                     	;# 
   903  0294                     	;# 
   904  0295                     	;# 
   905  0295                     	;# 
   906  0296                     	;# 
   907  0298                     	;# 
   908  0298                     	;# 
   909  0299                     	;# 
   910  029A                     	;# 
   911  029B                     	;# 
   912  029C                     	;# 
   913  029D                     	;# 
   914  029E                     	;# 
   915  0311                     	;# 
   916  0311                     	;# 
   917  0312                     	;# 
   918  0313                     	;# 
   919  0318                     	;# 
   920  0318                     	;# 
   921  0319                     	;# 
   922  031A                     	;# 
   923  038C                     	;# 
   924  038E                     	;# 
   925  0391                     	;# 
   926  0392                     	;# 
   927  0393                     	;# 
   928  039A                     	;# 
   929  039C                     	;# 
   930  039D                     	;# 
   931  039E                     	;# 
   932  039F                     	;# 
   933  0415                     	;# 
   934  0416                     	;# 
   935  0417                     	;# 
   936  041C                     	;# 
   937  041D                     	;# 
   938  041E                     	;# 
   939  0FE4                     	;# 
   940  0FE5                     	;# 
   941  0FE6                     	;# 
   942  0FE7                     	;# 
   943  0FE8                     	;# 
   944  0FE9                     	;# 
   945  0FEA                     	;# 
   946  0FEB                     	;# 
   947  0FED                     	;# 
   948  0FEE                     	;# 
   949  0FEF                     	;# 
   950  0000                     	;# 
   951  0001                     	;# 
   952  0002                     	;# 
   953  0003                     	;# 
   954  0004                     	;# 
   955  0005                     	;# 
   956  0006                     	;# 
   957  0007                     	;# 
   958  0008                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000E                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0015                     	;# 
   968  0016                     	;# 
   969  0016                     	;# 
   970  0017                     	;# 
   971  0018                     	;# 
   972  0019                     	;# 
   973  001A                     	;# 
   974  001B                     	;# 
   975  001C                     	;# 
   976  001E                     	;# 
   977  001F                     	;# 
   978  008C                     	;# 
   979  008E                     	;# 
   980  0091                     	;# 
   981  0092                     	;# 
   982  0093                     	;# 
   983  0095                     	;# 
   984  0096                     	;# 
   985  0097                     	;# 
   986  0098                     	;# 
   987  0099                     	;# 
   988  009A                     	;# 
   989  009B                     	;# 
   990  009B                     	;# 
   991  009C                     	;# 
   992  009D                     	;# 
   993  009E                     	;# 
   994  010C                     	;# 
   995  010E                     	;# 
   996  0111                     	;# 
   997  0112                     	;# 
   998  0113                     	;# 
   999  0114                     	;# 
  1000  0115                     	;# 
  1001  0116                     	;# 
  1002  0117                     	;# 
  1003  0118                     	;# 
  1004  0119                     	;# 
  1005  011A                     	;# 
  1006  011B                     	;# 
  1007  011D                     	;# 
  1008  011E                     	;# 
  1009  018C                     	;# 
  1010  018E                     	;# 
  1011  0191                     	;# 
  1012  0191                     	;# 
  1013  0192                     	;# 
  1014  0193                     	;# 
  1015  0193                     	;# 
  1016  0193                     	;# 
  1017  0194                     	;# 
  1018  0195                     	;# 
  1019  0196                     	;# 
  1020  0199                     	;# 
  1021  019A                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019C                     	;# 
  1025  019D                     	;# 
  1026  019E                     	;# 
  1027  019F                     	;# 
  1028  020C                     	;# 
  1029  020E                     	;# 
  1030  0211                     	;# 
  1031  0211                     	;# 
  1032  0212                     	;# 
  1033  0212                     	;# 
  1034  0213                     	;# 
  1035  0213                     	;# 
  1036  0214                     	;# 
  1037  0214                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0216                     	;# 
  1042  0216                     	;# 
  1043  0217                     	;# 
  1044  0217                     	;# 
  1045  0291                     	;# 
  1046  0291                     	;# 
  1047  0292                     	;# 
  1048  0293                     	;# 
  1049  0294                     	;# 
  1050  0295                     	;# 
  1051  0295                     	;# 
  1052  0296                     	;# 
  1053  0298                     	;# 
  1054  0298                     	;# 
  1055  0299                     	;# 
  1056  029A                     	;# 
  1057  029B                     	;# 
  1058  029C                     	;# 
  1059  029D                     	;# 
  1060  029E                     	;# 
  1061  0311                     	;# 
  1062  0311                     	;# 
  1063  0312                     	;# 
  1064  0313                     	;# 
  1065  0318                     	;# 
  1066  0318                     	;# 
  1067  0319                     	;# 
  1068  031A                     	;# 
  1069  038C                     	;# 
  1070  038E                     	;# 
  1071  0391                     	;# 
  1072  0392                     	;# 
  1073  0393                     	;# 
  1074  039A                     	;# 
  1075  039C                     	;# 
  1076  039D                     	;# 
  1077  039E                     	;# 
  1078  039F                     	;# 
  1079  0415                     	;# 
  1080  0416                     	;# 
  1081  0417                     	;# 
  1082  041C                     	;# 
  1083  041D                     	;# 
  1084  041E                     	;# 
  1085  0FE4                     	;# 
  1086  0FE5                     	;# 
  1087  0FE6                     	;# 
  1088  0FE7                     	;# 
  1089  0FE8                     	;# 
  1090  0FE9                     	;# 
  1091  0FEA                     	;# 
  1092  0FEB                     	;# 
  1093  0FED                     	;# 
  1094  0FEE                     	;# 
  1095  0FEF                     	;# 
  1096                           
  1097                           	psect	stringtext1
  1098  034E                     __pstringtext1:	
  1099  034E                     _dpowers:	
  1100  034E  3401               	retlw	1
  1101  034F  3400               	retlw	0
  1102  0350  340A               	retlw	10
  1103  0351  3400               	retlw	0
  1104  0352  3464               	retlw	100
  1105  0353  3400               	retlw	0
  1106  0354  34E8               	retlw	232
  1107  0355  3403               	retlw	3
  1108  0356  3410               	retlw	16
  1109  0357  3427               	retlw	39
  1110  0358                     __end_of_dpowers:	
  1111                           
  1112                           	psect	stringtext2
  1113  037B                     __pstringtext2:	
  1114  037B                     _max_char:	
  1115  037B  343F               	retlw	63
  1116  037C                     __end_of_max_char:	
  1117                           
  1118                           	psect	nvBANK0
  1119  004F                     __pnvBANK0:	
  1120  004F                     _eusartTxBufferRemaining:	
  1121  004F                     	ds	1
  1122  0011                     _PIR1bits	set	17
  1123  000B                     _INTCONbits	set	11
  1124  0095                     _OPTION_REGbits	set	149
  1125  008E                     _TRISC	set	142
  1126  008C                     _TRISA	set	140
  1127  0091                     _PIE1bits	set	145
  1128  0097                     _WDTCON	set	151
  1129  0098                     _OSCTUNE	set	152
  1130  0099                     _OSCCON	set	153
  1131  011D                     _APFCON0	set	285
  1132  011E                     _APFCON1	set	286
  1133  010E                     _LATC	set	270
  1134  010C                     _LATA	set	268
  1135  0116                     _BORCON	set	278
  1136  018C                     _ANSELA	set	396
  1137  018E                     _ANSELC	set	398
  1138  0196                     _EECON2	set	406
  1139  0193                     _EEDATL	set	403
  1140  0194                     _EEDATH	set	404
  1141  0195                     _EECON1bits	set	405
  1142  0192                     _EEADRH	set	402
  1143  0191                     _EEADRL	set	401
  1144  0199                     _RCREG	set	409
  1145  019D                     _RCSTAbits	set	413
  1146  019A                     _TXREG	set	410
  1147  019C                     _SPBRGH	set	412
  1148  019B                     _SPBRGL	set	411
  1149  019E                     _TXSTA	set	414
  1150  019D                     _RCSTA	set	413
  1151  019F                     _BAUDCON	set	415
  1152  020E                     _WPUC	set	526
  1153  020C                     _WPUA	set	524
  1154  0214                     _SSP1STATbits	set	532
  1155  0211                     _SSP1BUF	set	529
  1156  0215                     _SSP1CON1bits	set	533
  1157  0212                     _SSP1ADD	set	530
  1158  0215                     _SSP1CON1	set	533
  1159  0214                     _SSP1STAT	set	532
  1160                           
  1161                           	psect	stringtext3
  1162  0370                     __pstringtext3:	
  1163  0370                     STR_2:	
  1164  0370  3425               	retlw	37	;'%'
  1165  0371  3464               	retlw	100	;'d'
  1166  0372  340A               	retlw	10
  1167  0373  3400               	retlw	0
  1168                           
  1169                           	psect	stringtext4
  1170  0378                     __pstringtext4:	
  1171  0378                     STR_1:	
  1172  0378  3425               	retlw	37	;'%'
  1173  0379  3463               	retlw	99	;'c'
  1174  037A  3400               	retlw	0
  1175                           
  1176                           	psect	stringtext5
  1177  0000                     __pstringtext5:	
  1178                           
  1179                           ; #config settings
  1180  0000                     
  1181                           	psect	cinit
  1182  0024                     start_initialization:	
  1183  0024                     __initialization:	
  1184                           
  1185                           ; Clear objects allocated to COMMON
  1186  0024  01FA               	clrf	__pbssCOMMON& (0+127)
  1187  0025  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1188                           
  1189                           ; Clear objects allocated to BANK0
  1190  0026  3038               	movlw	low __pbssBANK0
  1191  0027  0084               	movwf	4
  1192  0028  3000               	movlw	high __pbssBANK0
  1193  0029  0085               	movwf	5
  1194  002A  3017               	movlw	23
  1195  002B  3183  235F  3180   	fcall	clear_ram0
  1196                           
  1197                           ; Clear objects allocated to BANK1
  1198  002E  30A0               	movlw	low __pbssBANK1
  1199  002F  0084               	movwf	4
  1200  0030  3000               	movlw	high __pbssBANK1
  1201  0031  0085               	movwf	5
  1202  0032  3040               	movlw	64
  1203  0033  3183  235F         	fcall	clear_ram0
  1204  0035                     end_of_initialization:	
  1205                           ;End of C runtime variable initialization code
  1206                           
  1207  0035                     __end_of__initialization:	
  1208  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1209  0036  0020               	movlb	0
  1210  0037  3181  2907         	ljmp	_main	;jump to C main() function
  1211                           
  1212                           	psect	bssCOMMON
  1213  007A                     __pbssCOMMON:	
  1214  007A                     _eusartTxTail:	
  1215  007A                     	ds	1
  1216  007B                     _eusartTxHead:	
  1217  007B                     	ds	1
  1218                           
  1219                           	psect	bssBANK0
  1220  0038                     __pbssBANK0:	
  1221  0038                     _eusartRxBuffer:	
  1222  0038                     	ds	8
  1223  0040                     _eusartTxBuffer:	
  1224  0040                     	ds	8
  1225  0048                     _sid:	
  1226  0048                     	ds	2
  1227  004A                     _eusartRxCount:	
  1228  004A                     	ds	1
  1229  004B                     _eusartRxTail:	
  1230  004B                     	ds	1
  1231  004C                     _eusartRxHead:	
  1232  004C                     	ds	1
  1233  004D                     _cnt:	
  1234  004D                     	ds	1
  1235  004E                     _c:	
  1236  004E                     	ds	1
  1237                           
  1238                           	psect	bssBANK1
  1239  00A0                     __pbssBANK1:	
  1240  00A0                     _buf:	
  1241  00A0                     	ds	64
  1242                           
  1243                           	psect	clrtext
  1244  035F                     clear_ram0:	
  1245                           ;	Called with FSR0 containing the base address, and
  1246                           ;	WREG with the size to clear
  1247                           
  1248  035F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1249  0360                     clrloop0:	
  1250  0360  0180               	clrf	0	;clear RAM location pointed to by FSR
  1251  0361  3101               	addfsr 0,1
  1252  0362  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1253  0363  2B60               	goto	clrloop0	;have we reached the end yet?
  1254  0364  3400               	retlw	0	;all done for this memory range, return
  1255                           
  1256                           	psect	cstackCOMMON
  1257  0070                     __pcstackCOMMON:	
  1258  0070                     ?_isdigit:	
  1259  0070                     ?_PIN_MANAGER_Initialize:	
  1260                           ; 1 bit 
  1261                           
  1262  0070                     ?_OSCILLATOR_Initialize:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ?_WDT_Initialize:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_SPI_Initialize:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ?_EUSART_Initialize:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ?_EUSART_Read:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ?_EUSART_Transmit_ISR:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ??_EUSART_Transmit_ISR:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_EUSART_Receive_ISR:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ??_EUSART_Receive_ISR:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_SYSTEM_Initialize:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_main:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_INTERRUPT_InterruptManager:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_EUSART_Write:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_putch:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x0
  1306  0070                     	ds	1
  1307  0071                     ??_INTERRUPT_InterruptManager:	
  1308                           
  1309                           ; 1 bytes @ 0x1
  1310  0071                     	ds	1
  1311  0072                     ??_PIN_MANAGER_Initialize:	
  1312  0072                     ??_OSCILLATOR_Initialize:	
  1313                           ; 1 bytes @ 0x2
  1314                           
  1315  0072                     ??_WDT_Initialize:	
  1316                           ; 1 bytes @ 0x2
  1317                           
  1318  0072                     ??_SPI_Initialize:	
  1319                           ; 1 bytes @ 0x2
  1320                           
  1321  0072                     ??_EUSART_Initialize:	
  1322                           ; 1 bytes @ 0x2
  1323                           
  1324  0072                     ??_EUSART_Read:	
  1325                           ; 1 bytes @ 0x2
  1326                           
  1327  0072                     ??_isdigit:	
  1328                           ; 1 bytes @ 0x2
  1329                           
  1330  0072                     ?_can_send:	
  1331                           ; 1 bytes @ 0x2
  1332                           
  1333  0072                     ??_EUSART_Write:	
  1334                           ; 1 bytes @ 0x2
  1335                           
  1336  0072                     ?___wmul:	
  1337                           ; 1 bytes @ 0x2
  1338                           
  1339  0072                     ?___lwdiv:	
  1340                           ; 2 bytes @ 0x2
  1341                           
  1342  0072                     can_send@cnt:	
  1343                           ; 2 bytes @ 0x2
  1344                           
  1345  0072                     _isdigit$746:	
  1346                           ; 1 bytes @ 0x2
  1347                           
  1348  0072                     ___wmul@multiplier:	
  1349                           ; 1 bytes @ 0x2
  1350                           
  1351  0072                     ___lwdiv@divisor:	
  1352                           ; 2 bytes @ 0x2
  1353                           
  1354                           
  1355                           ; 2 bytes @ 0x2
  1356  0072                     	ds	1
  1357  0073                     ??_SYSTEM_Initialize:	
  1358  0073                     ??_can_send:	
  1359                           ; 1 bytes @ 0x3
  1360                           
  1361  0073                     can_send@buf:	
  1362                           ; 1 bytes @ 0x3
  1363                           
  1364  0073                     EUSART_Read@readValue:	
  1365                           ; 1 bytes @ 0x3
  1366                           
  1367  0073                     EUSART_Write@txData:	
  1368                           ; 1 bytes @ 0x3
  1369                           
  1370  0073                     isdigit@c:	
  1371                           ; 1 bytes @ 0x3
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x3
  1375  0073                     	ds	1
  1376  0074                     ??_putch:	
  1377  0074                     putch@txData:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0074                     ___wmul@multiplicand:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383  0074                     ___lwdiv@dividend:	
  1384                           ; 2 bytes @ 0x4
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0x4
  1388  0074                     	ds	2
  1389  0076                     ??___wmul:	
  1390  0076                     ??___lwdiv:	
  1391                           ; 1 bytes @ 0x6
  1392                           
  1393  0076                     ___wmul@product:	
  1394                           ; 1 bytes @ 0x6
  1395                           
  1396                           
  1397                           ; 2 bytes @ 0x6
  1398  0076                     	ds	1
  1399  0077                     ___lwdiv@quotient:	
  1400                           
  1401                           ; 2 bytes @ 0x7
  1402  0077                     	ds	1
  1403  0078                     ?_atoi:	
  1404  0078                     atoi@s:	
  1405                           ; 2 bytes @ 0x8
  1406                           
  1407                           
  1408                           ; 2 bytes @ 0x8
  1409  0078                     	ds	1
  1410  0079                     ___lwdiv@counter:	
  1411                           
  1412                           ; 1 bytes @ 0x9
  1413  0079                     	ds	1
  1414                           
  1415                           	psect	cstackBANK0
  1416  0020                     __pcstackBANK0:	
  1417  0020                     ??_atoi:	
  1418  0020                     ?___lwmod:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0020                     ___lwmod@divisor:	
  1422                           ; 2 bytes @ 0x0
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0x0
  1426  0020                     	ds	2
  1427  0022                     atoi@sign:	
  1428  0022                     ___lwmod@dividend:	
  1429                           ; 1 bytes @ 0x2
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x2
  1433  0022                     	ds	1
  1434  0023                     atoi@a:	
  1435                           
  1436                           ; 2 bytes @ 0x3
  1437  0023                     	ds	1
  1438  0024                     ??___lwmod:	
  1439                           
  1440                           ; 1 bytes @ 0x4
  1441  0024                     	ds	1
  1442  0025                     ?_set_sid:	
  1443  0025                     ___lwmod@counter:	
  1444                           ; 1 bytes @ 0x5
  1445                           
  1446  0025                     set_sid@can_node:	
  1447                           ; 1 bytes @ 0x5
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x5
  1451  0025                     	ds	1
  1452  0026                     ?_printf:	
  1453  0026                     printf@f:	
  1454                           ; 2 bytes @ 0x6
  1455                           
  1456                           
  1457                           ; 2 bytes @ 0x6
  1458  0026                     	ds	1
  1459  0027                     ??_set_sid:	
  1460                           
  1461                           ; 1 bytes @ 0x7
  1462  0027                     	ds	3
  1463  002A                     ??_printf:	
  1464                           
  1465                           ; 1 bytes @ 0xA
  1466  002A                     	ds	4
  1467  002E                     printf@flag:	
  1468                           
  1469                           ; 1 bytes @ 0xE
  1470  002E                     	ds	1
  1471  002F                     printf@prec:	
  1472                           
  1473                           ; 1 bytes @ 0xF
  1474  002F                     	ds	1
  1475  0030                     printf@ap:	
  1476                           
  1477                           ; 1 bytes @ 0x10
  1478  0030                     	ds	1
  1479  0031                     printf@val:	
  1480                           
  1481                           ; 2 bytes @ 0x11
  1482  0031                     	ds	2
  1483  0033                     printf@c:	
  1484                           
  1485                           ; 1 bytes @ 0x13
  1486  0033                     	ds	1
  1487  0034                     ??_main:	
  1488                           
  1489                           ; 1 bytes @ 0x14
  1490  0034                     	ds	2
  1491  0036                     main@sid:	
  1492                           
  1493                           ; 2 bytes @ 0x16
  1494  0036                     	ds	2
  1495                           
  1496                           	psect	maintext
  1497  0107                     __pmaintext:	
  1498 ;;
  1499 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1500 ;;
  1501 ;; *************** function _main *****************
  1502 ;; Defined at:
  1503 ;;		line 35 in file "main.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  sid             2   22[BANK0 ] unsigned int 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : B1F/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1519 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;Total ram usage:        4 bytes
  1522 ;; Hardware stack levels required when called:    5
  1523 ;; This function calls:
  1524 ;;		_EUSART_Read
  1525 ;;		_SYSTEM_Initialize
  1526 ;;		_atoi
  1527 ;;		_can_send
  1528 ;;		_printf
  1529 ;;		_set_sid
  1530 ;; This function is called by:
  1531 ;;		Startup code after reset
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _main
  1537  0107                     _main:	
  1538                           
  1539                           ;main.c: 37: SYSTEM_Initialize();
  1540                           
  1541                           ;incstack = 0
  1542                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1543  0107  3183  2331  3181   	fcall	_SYSTEM_Initialize
  1544                           
  1545                           ;main.c: 39: (INTCONbits.GIE = 1);
  1546  010A  178B               	bsf	11,7	;volatile
  1547                           
  1548                           ;main.c: 40: (INTCONbits.PEIE = 1);
  1549  010B  170B               	bsf	11,6	;volatile
  1550                           
  1551                           ;main.c: 42: set_sid(0);
  1552  010C  3000               	movlw	0
  1553  010D  0020               	movlb	0	; select bank0
  1554  010E  00A5               	movwf	set_sid@can_node
  1555  010F  00A6               	movwf	set_sid@can_node+1
  1556  0110  3183  231F  3181   	fcall	_set_sid
  1557  0113                     l1776:	
  1558                           ;main.c: 44: while (1)
  1559                           
  1560                           
  1561                           ;main.c: 45: {
  1562                           ;main.c: 46: if ((PIR1bits.RCIF)) {
  1563  0113  0020               	movlb	0	; select bank0
  1564  0114  1E91               	btfss	17,5	;volatile
  1565  0115  2913               	goto	l1776
  1566                           
  1567                           ;main.c: 47: c = EUSART_Read();
  1568  0116  3182  227E  3181   	fcall	_EUSART_Read
  1569  0119  0020               	movlb	0	; select bank0
  1570  011A  00B4               	movwf	??_main
  1571  011B  0834               	movf	??_main,w
  1572  011C  00CE               	movwf	_c
  1573                           
  1574                           ;main.c: 48: printf("%c", c);
  1575  011D  3078               	movlw	low (STR_1| (0+32768))
  1576  011E  00A6               	movwf	printf@f
  1577  011F  3083               	movlw	high (STR_1| (0+32768))
  1578  0120  00A7               	movwf	printf@f+1
  1579  0121  084E               	movf	_c,w
  1580  0122  00B4               	movwf	??_main
  1581  0123  01B5               	clrf	??_main+1
  1582  0124  0834               	movf	??_main,w
  1583  0125  00A8               	movwf	?_printf+2
  1584  0126  0835               	movf	??_main+1,w
  1585  0127  00A9               	movwf	?_printf+3
  1586  0128  3180  2039  3181   	fcall	_printf
  1587                           
  1588                           ;main.c: 49: buf[cnt] = c;
  1589  012B  0020               	movlb	0	; select bank0
  1590  012C  084E               	movf	_c,w
  1591  012D  00B4               	movwf	??_main
  1592  012E  084D               	movf	_cnt,w
  1593  012F  3EA0               	addlw	(low (_buf| 0))& (0+255)
  1594  0130  0086               	movwf	6
  1595  0131  0187               	clrf	7
  1596  0132  0834               	movf	??_main,w
  1597  0133  0081               	movwf	1
  1598                           
  1599                           ;main.c: 50: if (c == '\n') {
  1600  0134  300A               	movlw	10
  1601  0135  064E               	xorwf	_c,w
  1602  0136  1D03               	btfss	3,2
  1603  0137  296C               	goto	l1798
  1604                           
  1605                           ;main.c: 51: buf[cnt] = '\0';
  1606  0138  084D               	movf	_cnt,w
  1607  0139  3EA0               	addlw	(low (_buf| 0))& (0+255)
  1608  013A  0086               	movwf	6
  1609  013B  0187               	clrf	7
  1610  013C  0181               	clrf	1
  1611                           
  1612                           ;main.c: 52: if (buf[0] == '@') {
  1613  013D  3040               	movlw	64
  1614  013E  0021               	movlb	1	; select bank1
  1615  013F  0620               	xorwf	_buf^(0+128),w
  1616  0140  1D03               	btfss	3,2
  1617  0141  296A               	goto	l1794
  1618                           
  1619                           ;main.c: 53: uint16_t sid = atoi(&buf[1]);
  1620  0142  30A1               	movlw	low (_buf+1)
  1621  0143  00F8               	movwf	atoi@s
  1622  0144  3000               	movlw	high (_buf+1)
  1623  0145  00F9               	movwf	atoi@s+1
  1624  0146  3181  218A  3181   	fcall	_atoi
  1625  0149  0879               	movf	?_atoi+1,w
  1626  014A  0020               	movlb	0	; select bank0
  1627  014B  00B7               	movwf	main@sid+1
  1628  014C  0878               	movf	?_atoi,w
  1629  014D  00B6               	movwf	main@sid
  1630                           
  1631                           ;main.c: 54: set_sid(atoi(sid));
  1632  014E  0837               	movf	main@sid+1,w
  1633  014F  00F9               	movwf	atoi@s+1
  1634  0150  0836               	movf	main@sid,w
  1635  0151  00F8               	movwf	atoi@s
  1636  0152  3181  218A  3181   	fcall	_atoi
  1637  0155  0879               	movf	?_atoi+1,w
  1638  0156  0020               	movlb	0	; select bank0
  1639  0157  00A6               	movwf	set_sid@can_node+1
  1640  0158  0878               	movf	?_atoi,w
  1641  0159  00A5               	movwf	set_sid@can_node
  1642  015A  3183  231F  3181   	fcall	_set_sid
  1643                           
  1644                           ;main.c: 55: printf("%d\n", sid);
  1645  015D  3070               	movlw	low (STR_2| (0+32768))
  1646  015E  0020               	movlb	0	; select bank0
  1647  015F  00A6               	movwf	printf@f
  1648  0160  3083               	movlw	high (STR_2| (0+32768))
  1649  0161  00A7               	movwf	printf@f+1
  1650  0162  0837               	movf	main@sid+1,w
  1651  0163  00A9               	movwf	?_printf+3
  1652  0164  0836               	movf	main@sid,w
  1653  0165  00A8               	movwf	?_printf+2
  1654  0166  3180  2039  3181   	fcall	_printf
  1655                           
  1656                           ;main.c: 56: } else {
  1657  0169  2987               	goto	l1804
  1658  016A                     l1794:	
  1659                           
  1660                           ;main.c: 57: can_send(buf, cnt);
  1661  016A  0020               	movlb	0	; select bank0
  1662  016B  297F               	goto	L1
  1663  016C                     l1798:	
  1664                           ;main.c: 60: } else if (++cnt > max_char) {
  1665                           
  1666                           ;main.c: 58: }
  1667                           ;main.c: 59: cnt = 0;
  1668                           
  1669  016C  3001               	movlw	1
  1670  016D  00B4               	movwf	??_main
  1671  016E  0834               	movf	??_main,w
  1672  016F  07CD               	addwf	_cnt,f
  1673  0170  307B               	movlw	low (_max_char| (0+32768))
  1674  0171  0084               	movwf	4
  1675  0172  3083               	movlw	high (_max_char| (0+32768))
  1676  0173  0085               	movwf	5
  1677  0174  0800               	movf	0,w	;code access
  1678  0175  00B5               	movwf	??_main+1
  1679  0176  084D               	movf	_cnt,w
  1680  0177  0235               	subwf	??_main+1,w
  1681  0178  1803               	skipnc
  1682  0179  2913               	goto	l1776
  1683                           
  1684                           ;main.c: 61: buf[cnt] = '\0';
  1685  017A  084D               	movf	_cnt,w
  1686  017B  3EA0               	addlw	(low (_buf| 0))& (0+255)
  1687  017C  0086               	movwf	6
  1688  017D  0187               	clrf	7
  1689  017E  0181               	clrf	1
  1690  017F                     L1:	
  1691                           
  1692                           ;main.c: 62: can_send(buf, cnt);
  1693  017F  084D               	movf	_cnt,w
  1694  0180  00B4               	movwf	??_main
  1695  0181  0834               	movf	??_main,w
  1696  0182  00F2               	movwf	can_send@cnt
  1697  0183  30A0               	movlw	(low (_buf| 0))& (0+255)
  1698  0184  3183  237C  3181   	fcall	_can_send
  1699  0187                     l1804:	
  1700                           
  1701                           ;main.c: 63: cnt = 0;
  1702  0187  0020               	movlb	0	; select bank0
  1703  0188  01CD               	clrf	_cnt
  1704  0189  2913               	goto	l1776
  1705  018A                     __end_of_main:	
  1706                           
  1707                           	psect	text1
  1708  031F                     __ptext1:	
  1709 ;; *************** function _set_sid *****************
  1710 ;; Defined at:
  1711 ;;		line 24 in file "main.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  can_node        2    5[BANK0 ] unsigned int 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;Total ram usage:        4 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    2
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _set_sid
  1741  031F                     _set_sid:	
  1742                           
  1743                           ;main.c: 25: sid.sidh = (can_node >> 8) & 0x00ff;
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _set_sid: [wreg+status,2+status,0]
  1747  031F  0020               	movlb	0	; select bank0
  1748  0320  0826               	movf	set_sid@can_node+1,w
  1749  0321  00A7               	movwf	??_set_sid
  1750  0322  0827               	movf	??_set_sid,w
  1751  0323  00C8               	movwf	_sid
  1752                           
  1753                           ;main.c: 26: sid.sidl = (can_node << 5) & 0x00e0;
  1754  0324  0825               	movf	set_sid@can_node,w
  1755  0325  00A7               	movwf	??_set_sid
  1756  0326  3004               	movlw	4
  1757  0327                     u905:	
  1758  0327  35A7               	lslf	??_set_sid,f
  1759  0328  3EFF               	addlw	-1
  1760  0329  1D03               	skipz
  1761  032A  2B27               	goto	u905
  1762  032B  3527               	lslf	??_set_sid,w
  1763  032C  39E0               	andlw	224
  1764  032D  00A8               	movwf	??_set_sid+1
  1765  032E  0828               	movf	??_set_sid+1,w
  1766  032F  00C9               	movwf	_sid+1
  1767  0330  0008               	return
  1768  0331                     __end_of_set_sid:	
  1769                           
  1770                           	psect	text2
  1771  0039                     __ptext2:	
  1772 ;; *************** function _printf *****************
  1773 ;; Defined at:
  1774 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  f               2    6[BANK0 ] PTR const unsigned char 
  1777 ;;		 -> STR_2(4), STR_1(3), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  tmpval          4    0        struct .
  1780 ;;  val             2   17[BANK0 ] unsigned int 
  1781 ;;  cp              2    0        PTR const unsigned char 
  1782 ;;  len             2    0        unsigned int 
  1783 ;;  c               1   19[BANK0 ] char 
  1784 ;;  ap              1   16[BANK0 ] PTR void [1]
  1785 ;;		 -> ?_printf(2), 
  1786 ;;  prec            1   15[BANK0 ] char 
  1787 ;;  flag            1   14[BANK0 ] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2    6[BANK0 ] int 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1797 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1799 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1800 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1801 ;;Total ram usage:       14 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    4
  1804 ;; This function calls:
  1805 ;;		___lwdiv
  1806 ;;		___lwmod
  1807 ;;		_putch
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _printf
  1815  0039                     _printf:	
  1816                           
  1817                           ;doprnt.c: 466: va_list ap;
  1818                           ;doprnt.c: 499: signed char c;
  1819                           ;doprnt.c: 506: signed char prec;
  1820                           ;doprnt.c: 508: unsigned char flag;
  1821                           ;doprnt.c: 523: union {
  1822                           ;doprnt.c: 524: unsigned long vd;
  1823                           ;doprnt.c: 525: double integ;
  1824                           ;doprnt.c: 526: } tmpval;
  1825                           ;doprnt.c: 528: unsigned int val;
  1826                           ;doprnt.c: 529: unsigned len;
  1827                           ;doprnt.c: 530: const char * cp;
  1828                           ;doprnt.c: 533: *ap = __va_start();
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1832  0039  3028               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1833  003A  0020               	movlb	0	; select bank0
  1834  003B  00AA               	movwf	??_printf
  1835  003C  082A               	movf	??_printf,w
  1836  003D  00B0               	movwf	printf@ap
  1837  003E                     l1732:	
  1838                           ;doprnt.c: 536: while(c = *f++) {
  1839                           
  1840  003E  0020               	movlb	0	; select bank0
  1841  003F  0827               	movf	printf@f+1,w
  1842  0040  00AB               	movwf	??_printf+1
  1843  0041  0826               	movf	printf@f,w
  1844  0042  00AA               	movwf	??_printf
  1845  0043  0AA6               	incf	printf@f,f
  1846  0044  1903               	skipnz
  1847  0045  0AA7               	incf	printf@f+1,f
  1848  0046  082A               	movf	??_printf,w
  1849  0047  0084               	movwf	4
  1850  0048  082B               	movf	??_printf+1,w
  1851  0049  0085               	movwf	5
  1852  004A  0800               	movf	0,w	;code access
  1853  004B  00AC               	movwf	??_printf+2
  1854  004C  082C               	movf	??_printf+2,w
  1855  004D  00B3               	movwf	printf@c
  1856  004E  0833               	movf	printf@c,w
  1857  004F  1903               	btfsc	3,2
  1858  0050  0008               	return
  1859                           
  1860                           ;doprnt.c: 538: if(c != '%')
  1861  0051  3025               	movlw	37
  1862  0052  0633               	xorwf	printf@c,w
  1863  0053  1903               	btfsc	3,2
  1864  0054  285A               	goto	l1686
  1865                           
  1866                           ;doprnt.c: 540: {
  1867                           ;doprnt.c: 541: (putch(c) );
  1868  0055  0833               	movf	printf@c,w
  1869  0056  3183  236B  3180   	fcall	_putch
  1870                           
  1871                           ;doprnt.c: 542: continue;
  1872  0059  283E               	goto	l1732
  1873  005A                     l1686:	
  1874                           
  1875                           ;doprnt.c: 543: }
  1876                           ;doprnt.c: 548: flag = 0;
  1877  005A  0020               	movlb	0	; select bank0
  1878  005B  01AE               	clrf	printf@flag
  1879                           
  1880                           ;doprnt.c: 635: switch(c = *f++) {
  1881  005C  286D               	goto	l1696
  1882  005D                     l1688:	
  1883                           ;doprnt.c: 784: case 'c':
  1884                           
  1885                           ;doprnt.c: 698: case 'i':
  1886                           ;doprnt.c: 699: break;
  1887                           
  1888                           ;doprnt.c: 697: case 'd':
  1889                           
  1890                           ;doprnt.c: 638: goto alldone;
  1891                           
  1892                           ;doprnt.c: 637: case 0:
  1893                           
  1894                           
  1895                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1896  005D  0830               	movf	printf@ap,w
  1897  005E  0086               	movwf	6
  1898  005F  0187               	clrf	7
  1899  0060  0801               	movf	1,w
  1900  0061  00AA               	movwf	??_printf
  1901  0062  082A               	movf	??_printf,w
  1902  0063  00B3               	movwf	printf@c
  1903  0064  3002               	movlw	2
  1904  0065  00AA               	movwf	??_printf
  1905  0066  082A               	movf	??_printf,w
  1906  0067  07B0               	addwf	printf@ap,f
  1907  0068                     l1692:	
  1908                           ;doprnt.c: 802: default:
  1909                           
  1910                           
  1911                           ;doprnt.c: 809: (putch(c) );
  1912  0068  0833               	movf	printf@c,w
  1913  0069  3183  236B  3180   	fcall	_putch
  1914                           
  1915                           ;doprnt.c: 810: continue;
  1916  006C  283E               	goto	l1732
  1917  006D                     l1696:	
  1918                           ;doprnt.c: 822: }
  1919                           
  1920  006D  0020               	movlb	0	; select bank0
  1921  006E  0827               	movf	printf@f+1,w
  1922  006F  00AB               	movwf	??_printf+1
  1923  0070  0826               	movf	printf@f,w
  1924  0071  00AA               	movwf	??_printf
  1925  0072  0AA6               	incf	printf@f,f
  1926  0073  1903               	skipnz
  1927  0074  0AA7               	incf	printf@f+1,f
  1928  0075  082A               	movf	??_printf,w
  1929  0076  0084               	movwf	4
  1930  0077  082B               	movf	??_printf+1,w
  1931  0078  0085               	movwf	5
  1932  0079  0800               	movf	0,w	;code access
  1933  007A  00B3               	movwf	printf@c
  1934                           
  1935                           ; Switch size 1, requested type "space"
  1936                           ; Number of cases is 4, Range of values is 0 to 105
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte           13     7 (average)
  1940                           ; direct_byte          218     6 (fixed)
  1941                           ; jumptable            260     6 (fixed)
  1942                           ;	Chosen strategy is simple_byte
  1943  007B  3A00               	xorlw	0	; case 0
  1944  007C  1903               	skipnz
  1945  007D  2906               	goto	l314
  1946  007E  3A63               	xorlw	99	; case 99
  1947  007F  1903               	skipnz
  1948  0080  285D               	goto	l1688
  1949  0081  3A07               	xorlw	7	; case 100
  1950  0082  1903               	skipnz
  1951  0083  2888               	goto	l1698
  1952  0084  3A0D               	xorlw	13	; case 105
  1953  0085  1903               	skipnz
  1954  0086  2888               	goto	l1698
  1955  0087  2868               	goto	l1692
  1956  0088                     l1698:	
  1957                           
  1958                           ;doprnt.c: 1253: {
  1959                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1960  0088  0020               	movlb	0	; select bank0
  1961  0089  0830               	movf	printf@ap,w
  1962  008A  0086               	movwf	6
  1963  008B  0187               	clrf	7
  1964  008C  3F40               	moviw [0]fsr1
  1965  008D  00B1               	movwf	printf@val
  1966  008E  3F41               	moviw [1]fsr1
  1967  008F  00B2               	movwf	printf@val+1
  1968  0090  3002               	movlw	2
  1969  0091  00AA               	movwf	??_printf
  1970  0092  082A               	movf	??_printf,w
  1971  0093  07B0               	addwf	printf@ap,f
  1972                           
  1973                           ;doprnt.c: 1261: if((int)val < 0) {
  1974  0094  1FB2               	btfss	printf@val+1,7
  1975  0095  289F               	goto	l1708
  1976                           
  1977                           ;doprnt.c: 1262: flag |= 0x03;
  1978  0096  3003               	movlw	3
  1979  0097  00AA               	movwf	??_printf
  1980  0098  082A               	movf	??_printf,w
  1981  0099  04AE               	iorwf	printf@flag,f
  1982                           
  1983                           ;doprnt.c: 1263: val = -val;
  1984  009A  09B1               	comf	printf@val,f
  1985  009B  09B2               	comf	printf@val+1,f
  1986  009C  0AB1               	incf	printf@val,f
  1987  009D  1903               	skipnz
  1988  009E  0AB2               	incf	printf@val+1,f
  1989  009F                     l1708:	
  1990                           
  1991                           ;doprnt.c: 1264: }
  1992                           ;doprnt.c: 1266: }
  1993                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1994  009F  01B3               	clrf	printf@c
  1995  00A0  0AB3               	incf	printf@c,f
  1996  00A1  3005               	movlw	5
  1997  00A2  0633               	xorwf	printf@c,w
  1998  00A3  1903               	btfsc	3,2
  1999  00A4  28C4               	goto	l1720
  2000  00A5                     l1714:	
  2001                           
  2002                           ;doprnt.c: 1306: if(val < dpowers[c])
  2003  00A5  0833               	movf	printf@c,w
  2004  00A6  00AA               	movwf	??_printf
  2005  00A7  01AB               	clrf	??_printf+1
  2006  00A8  35AA               	lslf	??_printf,f
  2007  00A9  0DAB               	rlf	??_printf+1,f
  2008  00AA  304E               	movlw	low (_dpowers| (0+32768))
  2009  00AB  072A               	addwf	??_printf,w
  2010  00AC  0084               	movwf	4
  2011  00AD  3083               	movlw	high (_dpowers| (0+32768))
  2012  00AE  3D2B               	addwfc	??_printf+1,w
  2013  00AF  0085               	movwf	5
  2014  00B0  3F00               	moviw [0]fsr0
  2015  00B1  00AC               	movwf	??_printf+2
  2016  00B2  3F01               	moviw [1]fsr0
  2017  00B3  00AD               	movwf	??_printf+3
  2018  00B4  082D               	movf	??_printf+3,w
  2019  00B5  0232               	subwf	printf@val+1,w
  2020  00B6  1D03               	skipz
  2021  00B7  28BA               	goto	u1295
  2022  00B8  082C               	movf	??_printf+2,w
  2023  00B9  0231               	subwf	printf@val,w
  2024  00BA                     u1295:	
  2025  00BA  1C03               	btfss	3,0
  2026  00BB  28C4               	goto	l1720
  2027                           
  2028                           ;doprnt.c: 1307: break;
  2029  00BC  3001               	movlw	1
  2030  00BD  00AA               	movwf	??_printf
  2031  00BE  082A               	movf	??_printf,w
  2032  00BF  07B3               	addwf	printf@c,f
  2033  00C0  3005               	movlw	5
  2034  00C1  0633               	xorwf	printf@c,w
  2035  00C2  1D03               	btfss	3,2
  2036  00C3  28A5               	goto	l1714
  2037  00C4                     l1720:	
  2038                           
  2039                           ;doprnt.c: 1422: {
  2040                           ;doprnt.c: 1438: if(flag & 0x03)
  2041  00C4  082E               	movf	printf@flag,w
  2042  00C5  3903               	andlw	3
  2043  00C6  1903               	btfsc	3,2
  2044  00C7  28CC               	goto	l1724
  2045                           
  2046                           ;doprnt.c: 1439: (putch('-') );
  2047  00C8  302D               	movlw	45
  2048  00C9  3183  236B  3180   	fcall	_putch
  2049  00CC                     l1724:	
  2050                           
  2051                           ;doprnt.c: 1469: }
  2052                           ;doprnt.c: 1472: prec = c;
  2053  00CC  0020               	movlb	0	; select bank0
  2054  00CD  0833               	movf	printf@c,w
  2055  00CE  00AA               	movwf	??_printf
  2056  00CF  082A               	movf	??_printf,w
  2057  00D0  00AF               	movwf	printf@prec
  2058  00D1                     l1730:	
  2059                           ;doprnt.c: 1474: while(prec--) {
  2060                           
  2061  00D1  30FF               	movlw	255
  2062  00D2  0020               	movlb	0	; select bank0
  2063  00D3  00AA               	movwf	??_printf
  2064  00D4  082A               	movf	??_printf,w
  2065  00D5  07AF               	addwf	printf@prec,f
  2066  00D6  0A2F               	incf	printf@prec,w
  2067  00D7  1903               	btfsc	3,2
  2068  00D8  283E               	goto	l1732
  2069                           
  2070                           ;doprnt.c: 1478: {
  2071                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2072  00D9  300A               	movlw	10
  2073  00DA  00A0               	movwf	___lwmod@divisor
  2074  00DB  3000               	movlw	0
  2075  00DC  00A1               	movwf	___lwmod@divisor+1
  2076  00DD  082F               	movf	printf@prec,w
  2077  00DE  00AA               	movwf	??_printf
  2078  00DF  01AB               	clrf	??_printf+1
  2079  00E0  35AA               	lslf	??_printf,f
  2080  00E1  0DAB               	rlf	??_printf+1,f
  2081  00E2  304E               	movlw	low (_dpowers| (0+32768))
  2082  00E3  072A               	addwf	??_printf,w
  2083  00E4  0084               	movwf	4
  2084  00E5  3083               	movlw	high (_dpowers| (0+32768))
  2085  00E6  3D2B               	addwfc	??_printf+1,w
  2086  00E7  0085               	movwf	5
  2087  00E8  3F00               	moviw [0]fsr0
  2088  00E9  00F2               	movwf	___lwdiv@divisor
  2089  00EA  3F01               	moviw [1]fsr0
  2090  00EB  00F3               	movwf	___lwdiv@divisor+1
  2091  00EC  0832               	movf	printf@val+1,w
  2092  00ED  00F5               	movwf	___lwdiv@dividend+1
  2093  00EE  0831               	movf	printf@val,w
  2094  00EF  00F4               	movwf	___lwdiv@dividend
  2095  00F0  3181  21FA  3180   	fcall	___lwdiv
  2096  00F3  0873               	movf	?___lwdiv+1,w
  2097  00F4  0020               	movlb	0	; select bank0
  2098  00F5  00A3               	movwf	___lwmod@dividend+1
  2099  00F6  0872               	movf	?___lwdiv,w
  2100  00F7  00A2               	movwf	___lwmod@dividend
  2101  00F8  3182  222E  3180   	fcall	___lwmod
  2102  00FB  0020               	movlb	0	; select bank0
  2103  00FC  0820               	movf	?___lwmod,w
  2104  00FD  3E30               	addlw	48
  2105  00FE  00AC               	movwf	??_printf+2
  2106  00FF  082C               	movf	??_printf+2,w
  2107  0100  00B3               	movwf	printf@c
  2108                           
  2109                           ;doprnt.c: 1523: }
  2110                           ;doprnt.c: 1524: (putch(c) );
  2111  0101  0833               	movf	printf@c,w
  2112  0102  3183  236B  3180   	fcall	_putch
  2113  0105  28D1               	goto	l1730
  2114  0106                     l314:	
  2115                           ;doprnt.c: 1540: return 0;
  2116                           ;	Return value of _printf is never used
  2117                           
  2118                           ;doprnt.c: 1525: }
  2119                           ;doprnt.c: 1533: }
  2120                           ;doprnt.c: 1535: alldone:
  2121                           
  2122  0106  0008               	return
  2123  0107                     __end_of_printf:	
  2124                           
  2125                           	psect	text3
  2126  036B                     __ptext3:	
  2127 ;; *************** function _putch *****************
  2128 ;; Defined at:
  2129 ;;		line 156 in file "mcc_generated_files/eusart.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  txData          1    wreg     unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  txData          1    4[COMMON] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;Total ram usage:        1 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		_EUSART_Write
  2152 ;; This function is called by:
  2153 ;;		_printf
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _putch
  2159  036B                     _putch:	
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2163                           ;putch@txData stored from wreg
  2164  036B  00F4               	movwf	putch@txData
  2165                           
  2166                           ;eusart.c: 158: EUSART_Write(txData);
  2167  036C  0874               	movf	putch@txData,w
  2168  036D  3182  225B         	fcall	_EUSART_Write
  2169  036F  0008               	return
  2170  0370                     __end_of_putch:	
  2171                           
  2172                           	psect	text4
  2173  025B                     __ptext4:	
  2174 ;; *************** function _EUSART_Write *****************
  2175 ;; Defined at:
  2176 ;;		line 128 in file "mcc_generated_files/eusart.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  txData          1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  txData          1    3[COMMON] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    2
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_putch
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _EUSART_Write
  2206  025B                     _EUSART_Write:	
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2210                           ;EUSART_Write@txData stored from wreg
  2211  025B  00F3               	movwf	EUSART_Write@txData
  2212  025C                     l1330:	
  2213                           ;eusart.c: 131: {
  2214                           
  2215                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
  2216                           
  2217  025C  0020               	movlb	0	; select bank0
  2218  025D  084F               	movf	_eusartTxBufferRemaining,w	;volatile
  2219  025E  1903               	btfsc	3,2
  2220  025F  2A5C               	goto	l1330
  2221                           
  2222                           ;eusart.c: 132: }
  2223                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
  2224  0260  0021               	movlb	1	; select bank1
  2225  0261  1A11               	btfsc	17,4	;volatile
  2226  0262  2A67               	goto	l185
  2227                           
  2228                           ;eusart.c: 135: {
  2229                           ;eusart.c: 136: TXREG = txData;
  2230  0263  0873               	movf	EUSART_Write@txData,w
  2231  0264  0023               	movlb	3	; select bank3
  2232  0265  009A               	movwf	26	;volatile
  2233                           
  2234                           ;eusart.c: 137: }
  2235  0266  2A7B               	goto	l1344
  2236  0267                     l185:	
  2237                           
  2238                           ;eusart.c: 138: else
  2239                           ;eusart.c: 139: {
  2240                           ;eusart.c: 140: PIE1bits.TXIE = 0;
  2241  0267  1211               	bcf	17,4	;volatile
  2242                           
  2243                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
  2244  0268  0873               	movf	EUSART_Write@txData,w
  2245  0269  00F2               	movwf	??_EUSART_Write
  2246  026A  087B               	movf	_eusartTxHead,w
  2247  026B  3E40               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2248  026C  0086               	movwf	6
  2249  026D  0187               	clrf	7
  2250  026E  0872               	movf	??_EUSART_Write,w
  2251  026F  0081               	movwf	1
  2252  0270  3001               	movlw	1
  2253  0271  00F2               	movwf	??_EUSART_Write
  2254  0272  0872               	movf	??_EUSART_Write,w
  2255  0273  07FB               	addwf	_eusartTxHead,f	;volatile
  2256                           
  2257                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2258  0274  3008               	movlw	8
  2259  0275  027B               	subwf	_eusartTxHead,w	;volatile
  2260  0276  1803               	btfsc	3,0
  2261                           
  2262                           ;eusart.c: 143: {
  2263                           ;eusart.c: 144: eusartTxHead = 0;
  2264  0277  01FB               	clrf	_eusartTxHead	;volatile
  2265                           
  2266                           ;eusart.c: 145: }
  2267                           ;eusart.c: 146: eusartTxBufferRemaining--;
  2268  0278  3001               	movlw	1
  2269  0279  0020               	movlb	0	; select bank0
  2270  027A  02CF               	subwf	_eusartTxBufferRemaining,f	;volatile
  2271  027B                     l1344:	
  2272                           
  2273                           ;eusart.c: 147: }
  2274                           ;eusart.c: 148: PIE1bits.TXIE = 1;
  2275  027B  0021               	movlb	1	; select bank1
  2276  027C  1611               	bsf	17,4	;volatile
  2277  027D  0008               	return
  2278  027E                     __end_of_EUSART_Write:	
  2279                           
  2280                           	psect	text5
  2281  022E                     __ptext5:	
  2282 ;; *************** function ___lwmod *****************
  2283 ;; Defined at:
  2284 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  divisor         2    0[BANK0 ] unsigned int 
  2287 ;;  dividend        2    2[BANK0 ] unsigned int 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  counter         1    5[BANK0 ] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2    0[BANK0 ] unsigned int 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2299 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;Total ram usage:        6 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_printf
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function ___lwmod
  2315  022E                     ___lwmod:	
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2319  022E  0020               	movlb	0	; select bank0
  2320  022F  0820               	movf	___lwmod@divisor,w
  2321  0230  0421               	iorwf	___lwmod@divisor+1,w
  2322  0231  1903               	btfsc	3,2
  2323  0232  2A56               	goto	l1676
  2324  0233  01A5               	clrf	___lwmod@counter
  2325  0234  0AA5               	incf	___lwmod@counter,f
  2326  0235                     l1666:	
  2327  0235  1BA1               	btfsc	___lwmod@divisor+1,7
  2328  0236  2A41               	goto	l1668
  2329  0237  3001               	movlw	1
  2330  0238                     u1215:	
  2331  0238  35A0               	lslf	___lwmod@divisor,f
  2332  0239  0DA1               	rlf	___lwmod@divisor+1,f
  2333  023A  0B89               	decfsz	9,f
  2334  023B  2A38               	goto	u1215
  2335  023C  3001               	movlw	1
  2336  023D  00A4               	movwf	??___lwmod
  2337  023E  0824               	movf	??___lwmod,w
  2338  023F  07A5               	addwf	___lwmod@counter,f
  2339  0240  2A35               	goto	l1666
  2340  0241                     l1668:	
  2341  0241  0821               	movf	___lwmod@divisor+1,w
  2342  0242  0223               	subwf	___lwmod@dividend+1,w
  2343  0243  1D03               	skipz
  2344  0244  2A47               	goto	u1235
  2345  0245  0820               	movf	___lwmod@divisor,w
  2346  0246  0222               	subwf	___lwmod@dividend,w
  2347  0247                     u1235:	
  2348  0247  1C03               	skipc
  2349  0248  2A4D               	goto	l1672
  2350  0249  0820               	movf	___lwmod@divisor,w
  2351  024A  02A2               	subwf	___lwmod@dividend,f
  2352  024B  0821               	movf	___lwmod@divisor+1,w
  2353  024C  3BA3               	subwfb	___lwmod@dividend+1,f
  2354  024D                     l1672:	
  2355  024D  3001               	movlw	1
  2356  024E                     u1245:	
  2357  024E  36A1               	lsrf	___lwmod@divisor+1,f
  2358  024F  0CA0               	rrf	___lwmod@divisor,f
  2359  0250  0B89               	decfsz	9,f
  2360  0251  2A4E               	goto	u1245
  2361  0252  3001               	movlw	1
  2362  0253  02A5               	subwf	___lwmod@counter,f
  2363  0254  1D03               	btfss	3,2
  2364  0255  2A41               	goto	l1668
  2365  0256                     l1676:	
  2366  0256  0823               	movf	___lwmod@dividend+1,w
  2367  0257  00A1               	movwf	?___lwmod+1
  2368  0258  0822               	movf	___lwmod@dividend,w
  2369  0259  00A0               	movwf	?___lwmod
  2370  025A  0008               	return
  2371  025B                     __end_of___lwmod:	
  2372                           
  2373                           	psect	text6
  2374  01FA                     __ptext6:	
  2375 ;; *************** function ___lwdiv *****************
  2376 ;; Defined at:
  2377 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  divisor         2    2[COMMON] unsigned int 
  2380 ;;  dividend        2    4[COMMON] unsigned int 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  quotient        2    7[COMMON] unsigned int 
  2383 ;;  counter         1    9[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2    2[COMMON] unsigned int 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2394 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;Total ram usage:        8 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    2
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_printf
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           
  2408                           ;psect for function ___lwdiv
  2409  01FA                     ___lwdiv:	
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2413  01FA  01F7               	clrf	___lwdiv@quotient
  2414  01FB  01F8               	clrf	___lwdiv@quotient+1
  2415  01FC  0872               	movf	___lwdiv@divisor,w
  2416  01FD  0473               	iorwf	___lwdiv@divisor+1,w
  2417  01FE  1903               	btfsc	3,2
  2418  01FF  2A29               	goto	l1436
  2419  0200  01F9               	clrf	___lwdiv@counter
  2420  0201  0AF9               	incf	___lwdiv@counter,f
  2421  0202                     l1424:	
  2422  0202  1BF3               	btfsc	___lwdiv@divisor+1,7
  2423  0203  2A0E               	goto	l1426
  2424  0204  3001               	movlw	1
  2425  0205                     u785:	
  2426  0205  35F2               	lslf	___lwdiv@divisor,f
  2427  0206  0DF3               	rlf	___lwdiv@divisor+1,f
  2428  0207  0B89               	decfsz	9,f
  2429  0208  2A05               	goto	u785
  2430  0209  3001               	movlw	1
  2431  020A  00F6               	movwf	??___lwdiv
  2432  020B  0876               	movf	??___lwdiv,w
  2433  020C  07F9               	addwf	___lwdiv@counter,f
  2434  020D  2A02               	goto	l1424
  2435  020E                     l1426:	
  2436  020E  3001               	movlw	1
  2437  020F                     u805:	
  2438  020F  35F7               	lslf	___lwdiv@quotient,f
  2439  0210  0DF8               	rlf	___lwdiv@quotient+1,f
  2440  0211  0B89               	decfsz	9,f
  2441  0212  2A0F               	goto	u805
  2442  0213  0873               	movf	___lwdiv@divisor+1,w
  2443  0214  0275               	subwf	___lwdiv@dividend+1,w
  2444  0215  1D03               	skipz
  2445  0216  2A19               	goto	u815
  2446  0217  0872               	movf	___lwdiv@divisor,w
  2447  0218  0274               	subwf	___lwdiv@dividend,w
  2448  0219                     u815:	
  2449  0219  1C03               	skipc
  2450  021A  2A20               	goto	l1432
  2451  021B  0872               	movf	___lwdiv@divisor,w
  2452  021C  02F4               	subwf	___lwdiv@dividend,f
  2453  021D  0873               	movf	___lwdiv@divisor+1,w
  2454  021E  3BF5               	subwfb	___lwdiv@dividend+1,f
  2455  021F  1477               	bsf	___lwdiv@quotient,0
  2456  0220                     l1432:	
  2457  0220  3001               	movlw	1
  2458  0221                     u825:	
  2459  0221  36F3               	lsrf	___lwdiv@divisor+1,f
  2460  0222  0CF2               	rrf	___lwdiv@divisor,f
  2461  0223  0B89               	decfsz	9,f
  2462  0224  2A21               	goto	u825
  2463  0225  3001               	movlw	1
  2464  0226  02F9               	subwf	___lwdiv@counter,f
  2465  0227  1D03               	btfss	3,2
  2466  0228  2A0E               	goto	l1426
  2467  0229                     l1436:	
  2468  0229  0878               	movf	___lwdiv@quotient+1,w
  2469  022A  00F3               	movwf	?___lwdiv+1
  2470  022B  0877               	movf	___lwdiv@quotient,w
  2471  022C  00F2               	movwf	?___lwdiv
  2472  022D  0008               	return
  2473  022E                     __end_of___lwdiv:	
  2474                           
  2475                           	psect	text7
  2476  037C                     __ptext7:	
  2477 ;; *************** function _can_send *****************
  2478 ;; Defined at:
  2479 ;;		line 32 in file "main.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  buf             1    wreg     PTR unsigned char 
  2482 ;;		 -> buf(64), 
  2483 ;;  cnt             1    2[COMMON] unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  buf             1    3[COMMON] PTR unsigned char 
  2486 ;;		 -> buf(64), 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2496 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    2
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _can_send
  2512  037C                     _can_send:	
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _can_send: [wreg]
  2516  037C  0008               	return
  2517  037D                     __end_of_can_send:	
  2518                           
  2519                           	psect	text8
  2520  018A                     __ptext8:	
  2521 ;; *************** function _atoi *****************
  2522 ;; Defined at:
  2523 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  s               2    8[COMMON] PTR const unsigned char 
  2526 ;;		 -> ROM(8192), buf(64), 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  a               2    3[BANK0 ] int 
  2529 ;;  sign            1    2[BANK0 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  2    8[COMMON] int 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2540 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;Total ram usage:        7 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    3
  2546 ;; This function calls:
  2547 ;;		___wmul
  2548 ;;		_isdigit
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _atoi
  2556  018A                     _atoi:	
  2557  018A                     l1738:	
  2558                           ;incstack = 0
  2559                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2560                           
  2561  018A  0878               	movf	atoi@s,w
  2562  018B  0084               	movwf	4
  2563  018C  0879               	movf	atoi@s+1,w
  2564  018D  0085               	movwf	5
  2565  018E  0012               	moviw fsr0++
  2566  018F  3A20               	xorlw	32
  2567  0190  1D03               	btfss	3,2
  2568  0191  2997               	goto	l1740
  2569  0192                     l1736:	
  2570  0192  3001               	movlw	1
  2571  0193  07F8               	addwf	atoi@s,f
  2572  0194  3000               	movlw	0
  2573  0195  3DF9               	addwfc	atoi@s+1,f
  2574  0196  298A               	goto	l1738
  2575  0197                     l1740:	
  2576  0197  0878               	movf	atoi@s,w
  2577  0198  0084               	movwf	4
  2578  0199  0879               	movf	atoi@s+1,w
  2579  019A  0085               	movwf	5
  2580  019B  0012               	moviw fsr0++
  2581  019C  3A09               	xorlw	9
  2582  019D  1903               	btfsc	3,2
  2583  019E  2992               	goto	l1736
  2584  019F  0020               	movlb	0	; select bank0
  2585  01A0  01A3               	clrf	atoi@a
  2586  01A1  01A4               	clrf	atoi@a+1
  2587  01A2  01A2               	clrf	atoi@sign
  2588  01A3  0878               	movf	atoi@s,w
  2589  01A4  0084               	movwf	4
  2590  01A5  0879               	movf	atoi@s+1,w
  2591  01A6  0085               	movwf	5
  2592  01A7  0012               	moviw fsr0++
  2593  01A8  3A2D               	xorlw	45
  2594  01A9  1D03               	btfss	3,2
  2595  01AA  29B0               	goto	l1750
  2596  01AB  3001               	movlw	1
  2597  01AC  00A0               	movwf	??_atoi
  2598  01AD  0820               	movf	??_atoi,w
  2599  01AE  07A2               	addwf	atoi@sign,f
  2600  01AF  29B8               	goto	l1756
  2601  01B0                     l1750:	
  2602  01B0  0878               	movf	atoi@s,w
  2603  01B1  0084               	movwf	4
  2604  01B2  0879               	movf	atoi@s+1,w
  2605  01B3  0085               	movwf	5
  2606  01B4  0012               	moviw fsr0++
  2607  01B5  3A2B               	xorlw	43
  2608  01B6  1D03               	btfss	3,2
  2609  01B7  29BC               	goto	l1758
  2610  01B8                     l1756:	
  2611  01B8  3001               	movlw	1
  2612  01B9  07F8               	addwf	atoi@s,f
  2613  01BA  3000               	movlw	0
  2614  01BB  3DF9               	addwfc	atoi@s+1,f
  2615  01BC                     l1758:	
  2616  01BC  0878               	movf	atoi@s,w
  2617  01BD  0084               	movwf	4
  2618  01BE  0879               	movf	atoi@s+1,w
  2619  01BF  0085               	movwf	5
  2620  01C0  0800               	movf	0,w	;code access
  2621  01C1  3183  2340  3181   	fcall	_isdigit
  2622  01C4  1C03               	btfss	3,0
  2623  01C5  29E5               	goto	l1760
  2624  01C6  0020               	movlb	0	; select bank0
  2625  01C7  0824               	movf	atoi@a+1,w
  2626  01C8  00F3               	movwf	___wmul@multiplier+1
  2627  01C9  0823               	movf	atoi@a,w
  2628  01CA  00F2               	movwf	___wmul@multiplier
  2629  01CB  300A               	movlw	10
  2630  01CC  00F4               	movwf	___wmul@multiplicand
  2631  01CD  3000               	movlw	0
  2632  01CE  00F5               	movwf	___wmul@multiplicand+1
  2633  01CF  3182  22B9  3181   	fcall	___wmul
  2634  01D2  0878               	movf	atoi@s,w
  2635  01D3  0084               	movwf	4
  2636  01D4  0879               	movf	atoi@s+1,w
  2637  01D5  0085               	movwf	5
  2638  01D6  0800               	movf	0,w	;code access
  2639  01D7  0772               	addwf	?___wmul,w
  2640  01D8  0020               	movlb	0	; select bank0
  2641  01D9  00A0               	movwf	??_atoi
  2642  01DA  0873               	movf	?___wmul+1,w
  2643  01DB  1803               	skipnc
  2644  01DC  0A73               	incf	?___wmul+1,w
  2645  01DD  00A1               	movwf	??_atoi+1
  2646  01DE  0820               	movf	??_atoi,w
  2647  01DF  3ED0               	addlw	208
  2648  01E0  00A3               	movwf	atoi@a
  2649  01E1  30FF               	movlw	255
  2650  01E2  3D21               	addwfc	??_atoi+1,w
  2651  01E3  00A4               	movwf	atoi@a+1
  2652  01E4  29B8               	goto	l1756
  2653  01E5                     l1760:	
  2654  01E5  0020               	movlb	0	; select bank0
  2655  01E6  0822               	movf	atoi@sign,w
  2656  01E7  1903               	btfsc	3,2
  2657  01E8  29F5               	goto	l1766
  2658  01E9  0923               	comf	atoi@a,w
  2659  01EA  00A0               	movwf	??_atoi
  2660  01EB  0924               	comf	atoi@a+1,w
  2661  01EC  00A1               	movwf	??_atoi+1
  2662  01ED  0AA0               	incf	??_atoi,f
  2663  01EE  1903               	skipnz
  2664  01EF  0AA1               	incf	??_atoi+1,f
  2665  01F0  0820               	movf	??_atoi,w
  2666  01F1  00F8               	movwf	?_atoi
  2667  01F2  0821               	movf	??_atoi+1,w
  2668  01F3  00F9               	movwf	?_atoi+1
  2669  01F4  0008               	return
  2670  01F5                     l1766:	
  2671  01F5  0824               	movf	atoi@a+1,w
  2672  01F6  00F9               	movwf	?_atoi+1
  2673  01F7  0823               	movf	atoi@a,w
  2674  01F8  00F8               	movwf	?_atoi
  2675  01F9  0008               	return
  2676  01FA                     __end_of_atoi:	
  2677                           
  2678                           	psect	text9
  2679  0340                     __ptext9:	
  2680 ;; *************** function _isdigit *****************
  2681 ;; Defined at:
  2682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  c               1    wreg     unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  c               1    3[COMMON] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;		None               void
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;Total ram usage:        2 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    2
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_atoi
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _isdigit
  2712  0340                     _isdigit:	
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2716                           ;isdigit@c stored from wreg
  2717  0340  00F3               	movwf	isdigit@c
  2718  0341  01F2               	clrf	_isdigit$746
  2719  0342  303A               	movlw	58
  2720  0343  0273               	subwf	isdigit@c,w
  2721  0344  1803               	skipnc
  2722  0345  2B4C               	goto	l1410
  2723  0346  3030               	movlw	48
  2724  0347  0273               	subwf	isdigit@c,w
  2725  0348  1C03               	skipc
  2726  0349  2B4C               	goto	l1410
  2727  034A  01F2               	clrf	_isdigit$746
  2728  034B  0AF2               	incf	_isdigit$746,f
  2729  034C                     l1410:	
  2730  034C  0C72               	rrf	_isdigit$746,w
  2731  034D  0008               	return
  2732  034E                     __end_of_isdigit:	
  2733                           
  2734                           	psect	text10
  2735  02B9                     __ptext10:	
  2736 ;; *************** function ___wmul *****************
  2737 ;; Defined at:
  2738 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  multiplier      2    2[COMMON] unsigned int 
  2741 ;;  multiplicand    2    4[COMMON] unsigned int 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  product         2    6[COMMON] unsigned int 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    2[COMMON] unsigned int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2757 ;;Total ram usage:        6 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    2
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_atoi
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function ___wmul
  2769  02B9                     ___wmul:	
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2773  02B9  01F6               	clrf	___wmul@product
  2774  02BA  01F7               	clrf	___wmul@product+1
  2775  02BB                     l1390:	
  2776  02BB  1C72               	btfss	___wmul@multiplier,0
  2777  02BC  2AC1               	goto	l398
  2778  02BD  0874               	movf	___wmul@multiplicand,w
  2779  02BE  07F6               	addwf	___wmul@product,f
  2780  02BF  0875               	movf	___wmul@multiplicand+1,w
  2781  02C0  3DF7               	addwfc	___wmul@product+1,f
  2782  02C1                     l398:	
  2783  02C1  3001               	movlw	1
  2784  02C2                     u725:	
  2785  02C2  35F4               	lslf	___wmul@multiplicand,f
  2786  02C3  0DF5               	rlf	___wmul@multiplicand+1,f
  2787  02C4  0B89               	decfsz	9,f
  2788  02C5  2AC2               	goto	u725
  2789  02C6  3001               	movlw	1
  2790  02C7                     u735:	
  2791  02C7  36F3               	lsrf	___wmul@multiplier+1,f
  2792  02C8  0CF2               	rrf	___wmul@multiplier,f
  2793  02C9  0B89               	decfsz	9,f
  2794  02CA  2AC7               	goto	u735
  2795  02CB  0872               	movf	___wmul@multiplier,w
  2796  02CC  0473               	iorwf	___wmul@multiplier+1,w
  2797  02CD  1D03               	btfss	3,2
  2798  02CE  2ABB               	goto	l1390
  2799  02CF  0877               	movf	___wmul@product+1,w
  2800  02D0  00F3               	movwf	?___wmul+1
  2801  02D1  0876               	movf	___wmul@product,w
  2802  02D2  00F2               	movwf	?___wmul
  2803  02D3  0008               	return
  2804  02D4                     __end_of___wmul:	
  2805                           
  2806                           	psect	text11
  2807  0331                     __ptext11:	
  2808 ;; *************** function _SYSTEM_Initialize *****************
  2809 ;; Defined at:
  2810 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    3
  2831 ;; This function calls:
  2832 ;;		_EUSART_Initialize
  2833 ;;		_OSCILLATOR_Initialize
  2834 ;;		_PIN_MANAGER_Initialize
  2835 ;;		_SPI_Initialize
  2836 ;;		_WDT_Initialize
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _SYSTEM_Initialize
  2844  0331                     _SYSTEM_Initialize:	
  2845                           
  2846                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2850  0331  3183  2309  3183   	fcall	_PIN_MANAGER_Initialize
  2851                           
  2852                           ;mcc.c: 74: OSCILLATOR_Initialize();
  2853  0334  3183  2358  3183   	fcall	_OSCILLATOR_Initialize
  2854                           
  2855                           ;mcc.c: 75: WDT_Initialize();
  2856  0337  3183  2374  3183   	fcall	_WDT_Initialize
  2857                           
  2858                           ;mcc.c: 76: SPI_Initialize();
  2859  033A  3183  2365  3183   	fcall	_SPI_Initialize
  2860                           
  2861                           ;mcc.c: 77: EUSART_Initialize();
  2862  033D  3182  22EF         	fcall	_EUSART_Initialize
  2863  033F  0008               	return
  2864  0340                     __end_of_SYSTEM_Initialize:	
  2865                           
  2866                           	psect	text12
  2867  0374                     __ptext12:	
  2868 ;; *************** function _WDT_Initialize *****************
  2869 ;; Defined at:
  2870 ;;		line 90 in file "mcc_generated_files/mcc.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    2
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_SYSTEM_Initialize
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _WDT_Initialize
  2900  0374                     _WDT_Initialize:	
  2901                           
  2902                           ;mcc.c: 93: WDTCON = 0x16;
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _WDT_Initialize: [wreg]
  2906  0374  3016               	movlw	22
  2907  0375  0021               	movlb	1	; select bank1
  2908  0376  0097               	movwf	23	;volatile
  2909  0377  0008               	return
  2910  0378                     __end_of_WDT_Initialize:	
  2911                           
  2912                           	psect	text13
  2913  0365                     __ptext13:	
  2914 ;; *************** function _SPI_Initialize *****************
  2915 ;; Defined at:
  2916 ;;		line 63 in file "mcc_generated_files/spi.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_SYSTEM_Initialize
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _SPI_Initialize
  2946  0365                     _SPI_Initialize:	
  2947                           
  2948                           ;spi.c: 68: SSP1STAT = 0x00;
  2949                           
  2950                           ;incstack = 0
  2951                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  2952  0365  0024               	movlb	4	; select bank4
  2953  0366  0194               	clrf	20	;volatile
  2954                           
  2955                           ;spi.c: 71: SSP1CON1 = 0x20;
  2956  0367  3020               	movlw	32
  2957  0368  0095               	movwf	21	;volatile
  2958                           
  2959                           ;spi.c: 74: SSP1ADD = 0x00;
  2960  0369  0192               	clrf	18	;volatile
  2961  036A  0008               	return
  2962  036B                     __end_of_SPI_Initialize:	
  2963                           
  2964                           	psect	text14
  2965  0309                     __ptext14:	
  2966 ;; *************** function _PIN_MANAGER_Initialize *****************
  2967 ;; Defined at:
  2968 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    2
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_SYSTEM_Initialize
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _PIN_MANAGER_Initialize
  2998  0309                     _PIN_MANAGER_Initialize:	
  2999                           
  3000                           ;pin_manager.c: 57: LATA = 0x00;
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3004  0309  0022               	movlb	2	; select bank2
  3005  030A  018C               	clrf	12	;volatile
  3006                           
  3007                           ;pin_manager.c: 58: LATC = 0x00;
  3008  030B  018E               	clrf	14	;volatile
  3009                           
  3010                           ;pin_manager.c: 63: TRISA = 0x3F;
  3011  030C  303F               	movlw	63
  3012  030D  0021               	movlb	1	; select bank1
  3013  030E  008C               	movwf	12	;volatile
  3014                           
  3015                           ;pin_manager.c: 64: TRISC = 0x3A;
  3016  030F  303A               	movlw	58
  3017  0310  008E               	movwf	14	;volatile
  3018                           
  3019                           ;pin_manager.c: 69: ANSELC = 0x08;
  3020  0311  3008               	movlw	8
  3021  0312  0023               	movlb	3	; select bank3
  3022  0313  008E               	movwf	14	;volatile
  3023                           
  3024                           ;pin_manager.c: 70: ANSELA = 0x17;
  3025  0314  3017               	movlw	23
  3026  0315  008C               	movwf	12	;volatile
  3027                           
  3028                           ;pin_manager.c: 75: WPUA = 0x00;
  3029  0316  0024               	movlb	4	; select bank4
  3030  0317  018C               	clrf	12	;volatile
  3031                           
  3032                           ;pin_manager.c: 76: WPUC = 0x00;
  3033  0318  018E               	clrf	14	;volatile
  3034                           
  3035                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 1;
  3036  0319  0021               	movlb	1	; select bank1
  3037  031A  1795               	bsf	21,7	;volatile
  3038                           
  3039                           ;pin_manager.c: 83: APFCON1 = 0x00;
  3040  031B  0022               	movlb	2	; select bank2
  3041  031C  019E               	clrf	30	;volatile
  3042                           
  3043                           ;pin_manager.c: 84: APFCON0 = 0x00;
  3044  031D  019D               	clrf	29	;volatile
  3045  031E  0008               	return
  3046  031F                     __end_of_PIN_MANAGER_Initialize:	
  3047                           
  3048                           	psect	text15
  3049  0358                     __ptext15:	
  3050 ;; *************** function _OSCILLATOR_Initialize *****************
  3051 ;; Defined at:
  3052 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    2
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_SYSTEM_Initialize
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _OSCILLATOR_Initialize
  3082  0358                     _OSCILLATOR_Initialize:	
  3083                           
  3084                           ;mcc.c: 83: OSCCON = 0x72;
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3088  0358  3072               	movlw	114
  3089  0359  0021               	movlb	1	; select bank1
  3090  035A  0099               	movwf	25	;volatile
  3091                           
  3092                           ;mcc.c: 85: OSCTUNE = 0x00;
  3093  035B  0198               	clrf	24	;volatile
  3094                           
  3095                           ;mcc.c: 87: BORCON = 0x00;
  3096  035C  0022               	movlb	2	; select bank2
  3097  035D  0196               	clrf	22	;volatile
  3098  035E  0008               	return
  3099  035F                     __end_of_OSCILLATOR_Initialize:	
  3100                           
  3101                           	psect	text16
  3102  02EF                     __ptext16:	
  3103 ;; *************** function _EUSART_Initialize *****************
  3104 ;; Defined at:
  3105 ;;		line 72 in file "mcc_generated_files/eusart.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;Total ram usage:        1 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    2
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_SYSTEM_Initialize
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           
  3134                           ;psect for function _EUSART_Initialize
  3135  02EF                     _EUSART_Initialize:	
  3136                           
  3137                           ;eusart.c: 75: PIE1bits.RCIE = 0;
  3138                           
  3139                           ;incstack = 0
  3140                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3141  02EF  0021               	movlb	1	; select bank1
  3142  02F0  1291               	bcf	17,5	;volatile
  3143                           
  3144                           ;eusart.c: 76: PIE1bits.TXIE = 0;
  3145  02F1  1211               	bcf	17,4	;volatile
  3146                           
  3147                           ;eusart.c: 80: BAUDCON = 0x08;
  3148  02F2  3008               	movlw	8
  3149  02F3  0023               	movlb	3	; select bank3
  3150  02F4  009F               	movwf	31	;volatile
  3151                           
  3152                           ;eusart.c: 83: RCSTA = 0x90;
  3153  02F5  3090               	movlw	144
  3154  02F6  009D               	movwf	29	;volatile
  3155                           
  3156                           ;eusart.c: 86: TXSTA = 0x24;
  3157  02F7  3024               	movlw	36
  3158  02F8  009E               	movwf	30	;volatile
  3159                           
  3160                           ;eusart.c: 89: SPBRGL = 0xCF;
  3161  02F9  30CF               	movlw	207
  3162  02FA  009B               	movwf	27	;volatile
  3163                           
  3164                           ;eusart.c: 92: SPBRGH = 0x00;
  3165  02FB  019C               	clrf	28	;volatile
  3166                           
  3167                           ;eusart.c: 96: eusartTxHead = 0;
  3168  02FC  01FB               	clrf	_eusartTxHead	;volatile
  3169                           
  3170                           ;eusart.c: 97: eusartTxTail = 0;
  3171  02FD  01FA               	clrf	_eusartTxTail	;volatile
  3172                           
  3173                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3174  02FE  3008               	movlw	8
  3175  02FF  00F2               	movwf	??_EUSART_Initialize
  3176  0300  0872               	movf	??_EUSART_Initialize,w
  3177  0301  0020               	movlb	0	; select bank0
  3178  0302  00CF               	movwf	_eusartTxBufferRemaining	;volatile
  3179                           
  3180                           ;eusart.c: 100: eusartRxHead = 0;
  3181  0303  01CC               	clrf	_eusartRxHead	;volatile
  3182                           
  3183                           ;eusart.c: 101: eusartRxTail = 0;
  3184  0304  01CB               	clrf	_eusartRxTail	;volatile
  3185                           
  3186                           ;eusart.c: 102: eusartRxCount = 0;
  3187  0305  01CA               	clrf	_eusartRxCount	;volatile
  3188                           
  3189                           ;eusart.c: 105: PIE1bits.RCIE = 1;
  3190  0306  0021               	movlb	1	; select bank1
  3191  0307  1691               	bsf	17,5	;volatile
  3192  0308  0008               	return
  3193  0309                     __end_of_EUSART_Initialize:	
  3194                           
  3195                           	psect	text17
  3196  027E                     __ptext17:	
  3197 ;; *************** function _EUSART_Read *****************
  3198 ;; Defined at:
  3199 ;;		line 108 in file "mcc_generated_files/eusart.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  readValue       1    3[COMMON] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      unsigned char 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;Total ram usage:        2 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    2
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;;		_getch
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           
  3229                           ;psect for function _EUSART_Read
  3230  027E                     _EUSART_Read:	
  3231                           
  3232                           ;eusart.c: 110: uint8_t readValue = 0;
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3236  027E  01F3               	clrf	EUSART_Read@readValue
  3237  027F                     l1470:	
  3238                           ;eusart.c: 113: {
  3239                           
  3240                           ;eusart.c: 112: while(0 == eusartRxCount)
  3241                           
  3242  027F  0020               	movlb	0	; select bank0
  3243  0280  084A               	movf	_eusartRxCount,w	;volatile
  3244  0281  1903               	btfsc	3,2
  3245  0282  2A7F               	goto	l1470
  3246                           
  3247                           ;eusart.c: 114: }
  3248                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
  3249  0283  084B               	movf	_eusartRxTail,w
  3250  0284  3E38               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3251  0285  0086               	movwf	6
  3252  0286  0187               	clrf	7
  3253  0287  0801               	movf	1,w
  3254  0288  00F2               	movwf	??_EUSART_Read
  3255  0289  0872               	movf	??_EUSART_Read,w
  3256  028A  00F3               	movwf	EUSART_Read@readValue
  3257  028B  3001               	movlw	1
  3258  028C  00F2               	movwf	??_EUSART_Read
  3259  028D  0872               	movf	??_EUSART_Read,w
  3260  028E  07CB               	addwf	_eusartRxTail,f	;volatile
  3261                           
  3262                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  3263  028F  3008               	movlw	8
  3264  0290  024B               	subwf	_eusartRxTail,w	;volatile
  3265  0291  1803               	btfsc	3,0
  3266                           
  3267                           ;eusart.c: 118: {
  3268                           ;eusart.c: 119: eusartRxTail = 0;
  3269  0292  01CB               	clrf	_eusartRxTail	;volatile
  3270                           
  3271                           ;eusart.c: 120: }
  3272                           ;eusart.c: 121: PIE1bits.RCIE = 0;
  3273  0293  0021               	movlb	1	; select bank1
  3274  0294  1291               	bcf	17,5	;volatile
  3275                           
  3276                           ;eusart.c: 122: eusartRxCount--;
  3277  0295  3001               	movlw	1
  3278  0296  0020               	movlb	0	; select bank0
  3279  0297  02CA               	subwf	_eusartRxCount,f	;volatile
  3280                           
  3281                           ;eusart.c: 123: PIE1bits.RCIE = 1;
  3282  0298  0021               	movlb	1	; select bank1
  3283  0299  1691               	bsf	17,5	;volatile
  3284                           
  3285                           ;eusart.c: 125: return readValue;
  3286  029A  0873               	movf	EUSART_Read@readValue,w
  3287  029B  0008               	return
  3288  029C                     __end_of_EUSART_Read:	
  3289                           
  3290                           	psect	intentry
  3291  0004                     __pintentry:	
  3292 ;; *************** function _INTERRUPT_InterruptManager *****************
  3293 ;; Defined at:
  3294 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;Total ram usage:        1 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    1
  3315 ;; This function calls:
  3316 ;;		_EUSART_Receive_ISR
  3317 ;;		_EUSART_Transmit_ISR
  3318 ;; This function is called by:
  3319 ;;		Interrupt level 1
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323  0004                     _INTERRUPT_InterruptManager:	
  3324                           
  3325                           ;incstack = 0
  3326  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3327                           
  3328                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3329  0005  3180               	pagesel	$
  3330  0006  0020               	movlb	0	; select bank0
  3331  0007  087F               	movf	127,w
  3332  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  3333                           
  3334                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
  3335  0009  1F0B               	btfss	11,6	;volatile
  3336  000A  281D               	goto	i1l135
  3337                           
  3338                           ;interrupt_manager.c: 55: {
  3339                           ;interrupt_manager.c: 56: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  3340  000B  0021               	movlb	1	; select bank1
  3341  000C  1E11               	btfss	17,4	;volatile
  3342  000D  2815               	goto	i1l130
  3343  000E  0020               	movlb	0	; select bank0
  3344  000F  1E11               	btfss	17,4	;volatile
  3345  0010  2815               	goto	i1l130
  3346                           
  3347                           ;interrupt_manager.c: 57: {
  3348                           ;interrupt_manager.c: 58: EUSART_Transmit_ISR();
  3349  0011  3182  229C  3180   	fcall	_EUSART_Transmit_ISR
  3350                           
  3351                           ;interrupt_manager.c: 59: }
  3352  0014  281D               	goto	i1l135
  3353  0015                     i1l130:	
  3354                           
  3355                           ;interrupt_manager.c: 60: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  3356  0015  0021               	movlb	1	; select bank1
  3357  0016  1E91               	btfss	17,5	;volatile
  3358  0017  281D               	goto	i1l135
  3359  0018  0020               	movlb	0	; select bank0
  3360  0019  1E91               	btfss	17,5	;volatile
  3361  001A  281D               	goto	i1l135
  3362                           
  3363                           ;interrupt_manager.c: 61: {
  3364                           ;interrupt_manager.c: 62: EUSART_Receive_ISR();
  3365  001B  3182  22D4         	fcall	_EUSART_Receive_ISR
  3366  001D                     i1l135:	
  3367                           ;interrupt_manager.c: 69: else
  3368                           ;interrupt_manager.c: 70: {
  3369                           
  3370                           ;interrupt_manager.c: 67: }
  3371                           ;interrupt_manager.c: 68: }
  3372                           
  3373                           ;interrupt_manager.c: 64: else
  3374                           ;interrupt_manager.c: 65: {
  3375                           
  3376                           ;interrupt_manager.c: 63: }
  3377                           
  3378  001D  0871               	movf	??_INTERRUPT_InterruptManager,w
  3379  001E  0020               	movlb	0	; select bank0
  3380  001F  00FF               	movwf	127
  3381  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3382  0021  0009               	retfie
  3383  0022                     __end_of_INTERRUPT_InterruptManager:	
  3384                           
  3385                           	psect	text19
  3386  029C                     __ptext19:	
  3387 ;; *************** function _EUSART_Transmit_ISR *****************
  3388 ;; Defined at:
  3389 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;Total ram usage:        1 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_INTERRUPT_InterruptManager
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _EUSART_Transmit_ISR
  3418  029C                     _EUSART_Transmit_ISR:	
  3419                           
  3420                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3424  029C  3008               	movlw	8
  3425  029D  0020               	movlb	0	; select bank0
  3426  029E  024F               	subwf	_eusartTxBufferRemaining,w	;volatile
  3427  029F  1803               	skipnc
  3428  02A0  2AB6               	goto	i1l197
  3429                           
  3430                           ;eusart.c: 166: {
  3431                           ;eusart.c: 167: TXREG = eusartTxBuffer[eusartTxTail++];
  3432  02A1  087A               	movf	_eusartTxTail,w
  3433  02A2  3E40               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3434  02A3  0086               	movwf	6
  3435  02A4  0187               	clrf	7
  3436  02A5  0801               	movf	1,w
  3437  02A6  0023               	movlb	3	; select bank3
  3438  02A7  009A               	movwf	26	;volatile
  3439  02A8  3001               	movlw	1
  3440  02A9  00F0               	movwf	??_EUSART_Transmit_ISR
  3441  02AA  0870               	movf	??_EUSART_Transmit_ISR,w
  3442  02AB  07FA               	addwf	_eusartTxTail,f	;volatile
  3443                           
  3444                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3445  02AC  3008               	movlw	8
  3446  02AD  027A               	subwf	_eusartTxTail,w	;volatile
  3447  02AE  1803               	btfsc	3,0
  3448                           
  3449                           ;eusart.c: 169: {
  3450                           ;eusart.c: 170: eusartTxTail = 0;
  3451  02AF  01FA               	clrf	_eusartTxTail	;volatile
  3452                           
  3453                           ;eusart.c: 171: }
  3454                           ;eusart.c: 172: eusartTxBufferRemaining++;
  3455  02B0  3001               	movlw	1
  3456  02B1  00F0               	movwf	??_EUSART_Transmit_ISR
  3457  02B2  0870               	movf	??_EUSART_Transmit_ISR,w
  3458  02B3  0020               	movlb	0	; select bank0
  3459  02B4  07CF               	addwf	_eusartTxBufferRemaining,f	;volatile
  3460                           
  3461                           ;eusart.c: 173: }
  3462  02B5  0008               	return
  3463  02B6                     i1l197:	
  3464                           
  3465                           ;eusart.c: 174: else
  3466                           ;eusart.c: 175: {
  3467                           ;eusart.c: 176: PIE1bits.TXIE = 0;
  3468  02B6  0021               	movlb	1	; select bank1
  3469  02B7  1211               	bcf	17,4	;volatile
  3470  02B8  0008               	return
  3471  02B9                     __end_of_EUSART_Transmit_ISR:	
  3472                           
  3473                           	psect	text20
  3474  02D4                     __ptext20:	
  3475 ;; *************** function _EUSART_Receive_ISR *****************
  3476 ;; Defined at:
  3477 ;;		line 180 in file "mcc_generated_files/eusart.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_INTERRUPT_InterruptManager
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _EUSART_Receive_ISR
  3506  02D4                     _EUSART_Receive_ISR:	
  3507                           
  3508                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3512  02D4  0023               	movlb	3	; select bank3
  3513  02D5  1C9D               	btfss	29,1	;volatile
  3514  02D6  2AD9               	goto	i1l1596
  3515                           
  3516                           ;eusart.c: 184: {
  3517                           ;eusart.c: 187: RCSTAbits.CREN = 0;
  3518  02D7  121D               	bcf	29,4	;volatile
  3519                           
  3520                           ;eusart.c: 188: RCSTAbits.CREN = 1;
  3521  02D8  161D               	bsf	29,4	;volatile
  3522  02D9                     i1l1596:	
  3523                           
  3524                           ;eusart.c: 189: }
  3525                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RCREG;
  3526  02D9  0819               	movf	25,w	;volatile
  3527  02DA  00F0               	movwf	??_EUSART_Receive_ISR
  3528  02DB  0020               	movlb	0	; select bank0
  3529  02DC  084C               	movf	_eusartRxHead,w
  3530  02DD  3E38               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3531  02DE  0086               	movwf	6
  3532  02DF  0187               	clrf	7
  3533  02E0  0870               	movf	??_EUSART_Receive_ISR,w
  3534  02E1  0081               	movwf	1
  3535  02E2  3001               	movlw	1
  3536  02E3  00F0               	movwf	??_EUSART_Receive_ISR
  3537  02E4  0870               	movf	??_EUSART_Receive_ISR,w
  3538  02E5  07CC               	addwf	_eusartRxHead,f	;volatile
  3539                           
  3540                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3541  02E6  3008               	movlw	8
  3542  02E7  024C               	subwf	_eusartRxHead,w	;volatile
  3543  02E8  1803               	btfsc	3,0
  3544                           
  3545                           ;eusart.c: 194: {
  3546                           ;eusart.c: 195: eusartRxHead = 0;
  3547  02E9  01CC               	clrf	_eusartRxHead	;volatile
  3548                           
  3549                           ;eusart.c: 196: }
  3550                           ;eusart.c: 197: eusartRxCount++;
  3551  02EA  3001               	movlw	1
  3552  02EB  00F0               	movwf	??_EUSART_Receive_ISR
  3553  02EC  0870               	movf	??_EUSART_Receive_ISR,w
  3554  02ED  07CA               	addwf	_eusartRxCount,f	;volatile
  3555  02EE  0008               	return
  3556  02EF                     __end_of_EUSART_Receive_ISR:	
  3557  007E                     btemp	set	126	;btemp
  3558  007E                     int$flags	set	126
  3559  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    11
    Data        0
    BSS         89
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      48
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    can_send@buf	PTR unsigned char  size(1) Largest target is 64
		 -> buf(BANK1[64]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), buf(BANK1[64]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _set_sid->_atoi
    _printf->___lwdiv
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _atoi->___wmul
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_printf
    _set_sid->_atoi
    _printf->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2768
                                             20 BANK0      4     4      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                               _atoi
                           _can_send
                             _printf
                            _set_sid
 ---------------------------------------------------------------------------------
 (1) _set_sid                                              4     2      2     172
                                              5 BANK0      4     2      2
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1527
                                              6 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _can_send                                             2     1      1     204
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2     776
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _WDT_Initialize
   _atoi
     ___wmul
     _isdigit
   _can_send
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write
   _set_sid
     _atoi (ARG)
       ___wmul
       _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 11 07:16:33 2018

                     _SPI_Initialize 0365                                    _c 004E  
                        __CFG_CP$OFF 0000                  ___wmul@multiplicand 0074  
                        __CFG_LVP$ON 0000                                  l314 0106  
                                l185 0267                                  l398 02C1  
                       __CFG_CPD$OFF 0000                                  u725 02C2  
                                u805 020F                                  u735 02C7  
                                u815 0219                                  u825 0221  
                                u905 0327                                  u785 0205  
                                _buf 00A0                                  _cnt 004D  
                                _sid 0048                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       ?_EUSART_Read 0070                                 l1410 034C  
                               l1330 025C                                 l1432 0220  
                               l1424 0202                                 l1344 027B  
                               l1426 020E                                 l1436 0229  
                               l1470 027F                                 l1390 02BB  
                               l1720 00C4                                 l1730 00D1  
                               l1714 00A5                                 l1740 0197  
                               l1724 00CC                                 l1708 009F  
                               l1732 003E                                 l1804 0187  
                               l1750 01B0                                 l1760 01E5  
                               l1736 0192                                 l1672 024D  
                               l1738 018A                                 l1666 0235  
                               l1756 01B8                                 l1668 0241  
                               l1676 0256                                 l1692 0068  
                               l1766 01F5                                 l1758 01BC  
                               l1686 005A                                 l1688 005D  
                               l1696 006D                                 l1776 0113  
                               l1698 0088                                 l1794 016A  
                               l1798 016C                                 STR_1 0378  
                               STR_2 0370                                 u1215 0238  
                               u1235 0247                                 u1245 024E  
                               _LATA 010C                                 _LATC 010E  
                               u1295 00BA                                 _WPUA 020C  
                               _WPUC 020E                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _atoi 018A  
                               _main 0107                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0022  
             __end_of_SPI_Initialize 036B                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0007        __end_of_OSCILLATOR_Initialize 035F  
                              ?_atoi 0078                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                      __end_of___lwdiv 022E  
                              i1l130 0015                                i1l135 001D  
                    __end_of___lwmod 025B                                i1l197 02B6  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISC 008E  
                              _TXREG 019A                                _TXSTA 019E  
                    __end_of_dpowers 0358                       _WDT_Initialize 0374  
                    __end_of_isdigit 034E                                atoi@a 0023  
                              atoi@s 0078                                _putch 036B  
                    __end_of_set_sid 0331                                status 0003  
                              wtemp0 007E                      ?_SPI_Initialize 0070  
                    __initialization 0024                         __end_of_atoi 01FA  
                       __end_of_main 018A                       ??_EUSART_Write 0072  
        ?_INTERRUPT_InterruptManager 0070                               ??_atoi 0020  
                             ??_main 0034               __end_of_WDT_Initialize 0378  
                             _EEADRH 0192                               _EEADRL 0191  
                             _EEDATH 0194                               _EEDATL 0193  
                             _EECON2 0196                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELC 018E  
                             _BORCON 0116                               i1l1596 02D9  
                             _OSCCON 0099                               _SPBRGH 019C  
                             _SPBRGL 019B                               _WDTCON 0097  
                   __end_of_can_send 037D                       __CFG_PWRTE$OFF 0000  
                             ___wmul 02B9                       __CFG_STVREN$ON 0000  
                          ??___lwdiv 0076                            ??___lwmod 0024  
                   __end_of_max_char 037C                  _EUSART_Transmit_ISR 029C  
                             _printf 0039                            ??_isdigit 0072  
                    ?_WDT_Initialize 0070                            ??_set_sid 0027  
               ?_EUSART_Transmit_ISR 0070                 __size_of_EUSART_Read 001E  
                  _SYSTEM_Initialize 0331              __end_of__initialization 0035  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                        __end_of_putch 0370  
                     _OPTION_REGbits 0095            __end_of_SYSTEM_Initialize 0340  
              ??_EUSART_Transmit_ISR 0070                              ??_putch 0074  
                         __pbssBANK0 0038                           __pbssBANK1 00A0  
               __end_of_EUSART_Write 027E          __size_of_EUSART_Receive_ISR 001B  
                         __pmaintext 0107                              ?___wmul 0072  
                         __pintentry 0004                              _BAUDCON 019F  
                            _APFCON0 011D                              _APFCON1 011E  
                            ?_printf 0026                        _eusartRxCount 004A  
                          ?_can_send 0072                              _OSCTUNE 0098  
                            _SSP1ADD 0212                              _SSP1BUF 0211  
                   ??_SPI_Initialize 0072                      __size_of___wmul 001B  
                            ___lwdiv 01FA                              ___lwmod 022E  
                            __ptext1 031F                              __ptext2 0039  
                            __ptext3 036B                              __ptext4 025B  
                            __ptext5 022E                              __ptext6 01FA  
                            __ptext7 037C                              __ptext8 018A  
                            __ptext9 0340                      __size_of_printf 00CE  
                            _dpowers 034E                _OSCILLATOR_Initialize 0358  
                         ??_can_send 0073                              _isdigit 0340  
           ??_PIN_MANAGER_Initialize 0072                              _set_sid 031F  
         __size_of_SYSTEM_Initialize 000F                              main@sid 0036  
                            clrloop0 0360                 end_of_initialization 0035  
                  _EUSART_Initialize 02EF                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                              printf@c 0033  
                            printf@f 0026                  ??_EUSART_Initialize 0072  
                   ??_WDT_Initialize 0072                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0023            __end_of_EUSART_Initialize 0309  
                     __end_of___wmul 02D4                         _EUSART_Write 025B  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 0107  
                start_initialization 0024      __size_of_PIN_MANAGER_Initialize 0016  
                      ??_EUSART_Read 0072                          putch@txData 0074  
                           ??___wmul 0076                             ??_printf 002A  
        __end_of_EUSART_Transmit_ISR 02B9                          __pbssCOMMON 007A  
                          ___latbits 0002                        __pcstackBANK0 0020  
                  __size_of_can_send 0001           __end_of_EUSART_Receive_ISR 02EF  
         __size_of_EUSART_Initialize 001A                  __end_of_EUSART_Read 029C  
                          __pnvBANK0 004F                     ___lwdiv@dividend 0074  
             _PIN_MANAGER_Initialize 0309                 EUSART_Read@readValue 0073  
                           ?___lwdiv 0072                             ?___lwmod 0020  
                       _eusartRxHead 004C                         _eusartTxHead 007B  
                       _eusartRxTail 004B                         _eusartTxTail 007A  
       ??_INTERRUPT_InterruptManager 0071              _eusartTxBufferRemaining 004F  
                           ?_isdigit 0070                             ?_set_sid 0025  
                   ___lwdiv@quotient 0077                       __size_of_putch 0005  
                     _eusartRxBuffer 0038                       _eusartTxBuffer 0040  
                     ___wmul@product 0076                            clear_ram0 035F  
                           _PIE1bits 0091  __size_of_INTERRUPT_InterruptManager 001E  
                           _PIR1bits 0011                             _SSP1CON1 0215  
                           _SSP1STAT 0214                    ___wmul@multiplier 0072  
                         printf@flag 002E                           printf@prec 002F  
                        _EUSART_Read 027E                          can_send@buf 0073  
                        can_send@cnt 0072                           _EECON1bits 0195  
            __size_of_SPI_Initialize 0006              ??_OSCILLATOR_Initialize 0072  
                   __size_of___lwdiv 0034                     __size_of___lwmod 002D  
                        _isdigit$746 0072                             _can_send 037C  
                   __size_of_isdigit 000E                      ___lwdiv@divisor 0072  
                    ___lwdiv@counter 0079                             __ptext10 02B9  
                           __ptext11 0331                             __ptext20 02D4  
                           __ptext12 0374                             __ptext13 0365  
                           __ptext14 0309                             __ptext15 0358  
                           __ptext16 02EF                             __ptext17 027E  
                           __ptext19 029C                     __size_of_set_sid 0012  
                       _SSP1CON1bits 0215                             _max_char 037B  
                      __size_of_atoi 0070                        __size_of_main 0083  
                           int$flags 007E                             atoi@sign 0022  
 __end_of_INTERRUPT_InterruptManager 0022           _INTERRUPT_InterruptManager 0004  
                          printf@val 0031                         _SSP1STATbits 0214  
                         _INTCONbits 000B                             isdigit@c 0073  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
                   ___lwmod@dividend 0022              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                             printf@ap 0030  
                 _EUSART_Receive_ISR 02D4                        __pstringtext1 034E  
                      __pstringtext2 037B                        __pstringtext3 0370  
                      __pstringtext4 0378                        __pstringtext5 0000  
                ?_EUSART_Receive_ISR 0070                      ___lwmod@divisor 0020  
                    ___lwmod@counter 0025                   EUSART_Write@txData 0073  
       __size_of_EUSART_Transmit_ISR 001D       __end_of_PIN_MANAGER_Initialize 031F  
               ??_EUSART_Receive_ISR 0070                      set_sid@can_node 0025  
